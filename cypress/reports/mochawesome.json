{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 27,
    "pending": 0,
    "failures": 14,
    "start": "2021-06-07T20:18:17.500Z",
    "end": "2021-06-07T20:19:53.867Z",
    "duration": 96367,
    "testsRegistered": 41,
    "passPercent": 65.85365853658537,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "2efb096d-c05f-4299-940a-2c139c5e5ebf",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f1f6cd86-5823-4836-9d79-ac0aa7362685",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 611,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "25ef844c-c040-48e5-ae1d-69a27aa40b3d",
              "parentUUID": "f1f6cd86-5823-4836-9d79-ac0aa7362685",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "25ef844c-c040-48e5-ae1d-69a27aa40b3d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 611,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "cc51c9b5-1354-4754-a8b9-a31477fef0cc",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "timedOut": null,
              "duration": 333,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');",
              "err": {},
              "uuid": "3305d36a-3161-4d24-a942-6577102a446e",
              "parentUUID": "cc51c9b5-1354-4754-a8b9-a31477fef0cc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 338,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "a7d28df4-1ef3-4278-ac91-682c3e84e1bf",
              "parentUUID": "cc51c9b5-1354-4754-a8b9-a31477fef0cc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 408,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "9519d81f-acaa-40e8-905a-be9d63149b4a",
              "parentUUID": "cc51c9b5-1354-4754-a8b9-a31477fef0cc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 318,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "e03114a9-059a-4d94-bad9-50fa917d797a",
              "parentUUID": "cc51c9b5-1354-4754-a8b9-a31477fef0cc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 173,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "d49da667-5803-48a0-86c3-e5681b028c18",
              "parentUUID": "cc51c9b5-1354-4754-a8b9-a31477fef0cc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 236,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "8d41a690-23b9-4f98-a359-aa72abe674c4",
              "parentUUID": "cc51c9b5-1354-4754-a8b9-a31477fef0cc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 239,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "de8d2c24-9aaa-4ad1-b48f-67f8f6d93d17",
              "parentUUID": "cc51c9b5-1354-4754-a8b9-a31477fef0cc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3305d36a-3161-4d24-a942-6577102a446e",
            "a7d28df4-1ef3-4278-ac91-682c3e84e1bf",
            "9519d81f-acaa-40e8-905a-be9d63149b4a",
            "e03114a9-059a-4d94-bad9-50fa917d797a",
            "d49da667-5803-48a0-86c3-e5681b028c18",
            "8d41a690-23b9-4f98-a359-aa72abe674c4",
            "de8d2c24-9aaa-4ad1-b48f-67f8f6d93d17"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2045,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "4fcfe1e2-bf5b-45cc-93d8-3b2b75d9208c",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 158,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "3f854d12-5782-4d94-9bea-3b808adaffd0",
              "parentUUID": "4fcfe1e2-bf5b-45cc-93d8-3b2b75d9208c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 358,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "fdcacb1e-bb8c-4b18-8856-ed9f7495291f",
              "parentUUID": "4fcfe1e2-bf5b-45cc-93d8-3b2b75d9208c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3f854d12-5782-4d94-9bea-3b808adaffd0",
            "fdcacb1e-bb8c-4b18-8856-ed9f7495291f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 516,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b13d1cdc-d8b8-4bf2-9a9d-401d3ec325f9",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 292,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "778ac8b1-8527-42fc-8e6d-f61915c552ac",
              "parentUUID": "b13d1cdc-d8b8-4bf2-9a9d-401d3ec325f9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 238,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "a88e6f44-0161-4758-af9b-1f04f77499ac",
              "parentUUID": "b13d1cdc-d8b8-4bf2-9a9d-401d3ec325f9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 475,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "644d4e03-8e80-46fb-b872-3c17b32b86f9",
              "parentUUID": "b13d1cdc-d8b8-4bf2-9a9d-401d3ec325f9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 283,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "89bc8453-82c7-4370-b87c-78dc97c68c03",
              "parentUUID": "b13d1cdc-d8b8-4bf2-9a9d-401d3ec325f9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "778ac8b1-8527-42fc-8e6d-f61915c552ac",
            "a88e6f44-0161-4758-af9b-1f04f77499ac",
            "644d4e03-8e80-46fb-b872-3c17b32b86f9",
            "89bc8453-82c7-4370-b87c-78dc97c68c03"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1288,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "3bf64c4c-0dea-460d-9682-e9316ae7f5d9",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 684,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "784e88e0-386e-4754-8bb5-f92e3332ebe2",
              "parentUUID": "3bf64c4c-0dea-460d-9682-e9316ae7f5d9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 600,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "7eb8a706-adf0-4e16-a17d-89ac278a7e17",
              "parentUUID": "3bf64c4c-0dea-460d-9682-e9316ae7f5d9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "784e88e0-386e-4754-8bb5-f92e3332ebe2",
            "7eb8a706-adf0-4e16-a17d-89ac278a7e17"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1284,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "7fb0a392-570b-4d9e-ba46-faa23faad7d4",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 152,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "90e31c67-5653-4c40-bbf6-9c128d245838",
              "parentUUID": "7fb0a392-570b-4d9e-ba46-faa23faad7d4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 182,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "4371d07e-b696-4ecc-92be-3ce996ebf28e",
              "parentUUID": "7fb0a392-570b-4d9e-ba46-faa23faad7d4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "90e31c67-5653-4c40-bbf6-9c128d245838",
            "4371d07e-b696-4ecc-92be-3ce996ebf28e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 334,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d9fe2e96-fddd-429b-a02c-68f410073790",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 670,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "85c77a1b-64e5-4fd4-a2c0-7d0131a7c712",
              "parentUUID": "d9fe2e96-fddd-429b-a02c-68f410073790",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 9801,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "61dc3ac8-6e7a-4b56-92cf-d54aff8147bc",
              "parentUUID": "d9fe2e96-fddd-429b-a02c-68f410073790",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "85c77a1b-64e5-4fd4-a2c0-7d0131a7c712",
            "61dc3ac8-6e7a-4b56-92cf-d54aff8147bc"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10471,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d7e00897-a881-4ec9-936d-ebdad88f8c2f",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2684,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "159b45c9-b36c-4c46-afb7-4481132c66e9",
              "parentUUID": "d7e00897-a881-4ec9-936d-ebdad88f8c2f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 9643,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "3edfbd71-1d96-4215-96ad-6e851d6d78f5",
              "parentUUID": "d7e00897-a881-4ec9-936d-ebdad88f8c2f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 2680,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "1b8853c8-241e-4f5c-83ec-9deb0866b260",
              "parentUUID": "d7e00897-a881-4ec9-936d-ebdad88f8c2f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "159b45c9-b36c-4c46-afb7-4481132c66e9",
            "3edfbd71-1d96-4215-96ad-6e851d6d78f5",
            "1b8853c8-241e-4f5c-83ec-9deb0866b260"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 15007,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "bf34570d-9b39-4c21-a0b0-605c364fef72",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 424,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "6bc2df99-d53c-4506-929a-baa6216696e7",
              "parentUUID": "bf34570d-9b39-4c21-a0b0-605c364fef72",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 201,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "c13f6695-0a3d-41c0-b322-80c27c85dd29",
              "parentUUID": "bf34570d-9b39-4c21-a0b0-605c364fef72",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 213,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "4d0cb0c4-8ae7-4f44-adbf-0558908f21d5",
              "parentUUID": "bf34570d-9b39-4c21-a0b0-605c364fef72",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 2685,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "61a16621-e5cd-4e5f-a149-d982dee6d4fa",
              "parentUUID": "bf34570d-9b39-4c21-a0b0-605c364fef72",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6bc2df99-d53c-4506-929a-baa6216696e7",
            "c13f6695-0a3d-41c0-b322-80c27c85dd29",
            "4d0cb0c4-8ae7-4f44-adbf-0558908f21d5",
            "61a16621-e5cd-4e5f-a149-d982dee6d4fa"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3523,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "4d265d09-452a-4358-9d33-95e51c0048aa",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 4692,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:40373/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:40373/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:40373/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:40373/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:40373/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:40373/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:40373/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:40373/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:40373/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:40373/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:40373/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:40373/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:40373/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "b30f9ac5-f60a-49af-b8b9-619a46fc3d98",
              "parentUUID": "4d265d09-452a-4358-9d33-95e51c0048aa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 5052,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:40373/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:40373/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:40373/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:40373/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:40373/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:40373/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:40373/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:40373/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:40373/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:40373/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:40373/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:40373/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:40373/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "a6a3d7b6-50ab-4f41-854d-f4ef6d19bf35",
              "parentUUID": "4d265d09-452a-4358-9d33-95e51c0048aa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4730,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:40373/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:40373/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:40373/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:40373/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:40373/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:40373/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:40373/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:40373/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:40373/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:40373/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:40373/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:40373/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:40373/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "94519f1a-3c9c-4f7e-99ab-b958bb40e313",
              "parentUUID": "4d265d09-452a-4358-9d33-95e51c0048aa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 4687,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:40373/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:40373/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:40373/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:40373/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:40373/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:40373/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:40373/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:40373/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:40373/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:40373/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:40373/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:40373/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:40373/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "91dfa431-998e-4828-bcc4-7fe2b73e2f04",
              "parentUUID": "4d265d09-452a-4358-9d33-95e51c0048aa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 4679,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:40373/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:40373/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:40373/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:40373/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:40373/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:40373/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:40373/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:40373/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:40373/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:40373/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:40373/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:40373/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:40373/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "619d1fd0-6a3e-44f4-973d-96148249c71a",
              "parentUUID": "4d265d09-452a-4358-9d33-95e51c0048aa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 4848,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:40373/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:40373/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:40373/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:40373/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:40373/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:40373/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:40373/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:40373/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:40373/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:40373/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:40373/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:40373/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:40373/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "7fed94b5-f2e0-4cb9-b4cd-6df77c973d95",
              "parentUUID": "4d265d09-452a-4358-9d33-95e51c0048aa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 4652,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:40373/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:40373/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:40373/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:40373/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:40373/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:40373/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:40373/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:40373/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:40373/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:40373/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:40373/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:40373/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:40373/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "e5dda846-008a-4b47-8aba-a510a40d09fa",
              "parentUUID": "4d265d09-452a-4358-9d33-95e51c0048aa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4889,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:40373/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:40373/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:40373/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:40373/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:40373/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:40373/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:40373/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:40373/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:40373/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:40373/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:40373/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:40373/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:40373/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "26926756-a08c-41af-b09b-71e3ae961cd5",
              "parentUUID": "4d265d09-452a-4358-9d33-95e51c0048aa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4803,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:40373/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:40373/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:40373/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:40373/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:40373/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:40373/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:40373/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:40373/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:40373/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:40373/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:40373/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:40373/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:40373/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "7c5379dd-6783-493a-987e-29df5448e8ce",
              "parentUUID": "4d265d09-452a-4358-9d33-95e51c0048aa",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "b30f9ac5-f60a-49af-b8b9-619a46fc3d98",
            "a6a3d7b6-50ab-4f41-854d-f4ef6d19bf35",
            "94519f1a-3c9c-4f7e-99ab-b958bb40e313",
            "91dfa431-998e-4828-bcc4-7fe2b73e2f04",
            "619d1fd0-6a3e-44f4-973d-96148249c71a",
            "7fed94b5-f2e0-4cb9-b4cd-6df77c973d95",
            "e5dda846-008a-4b47-8aba-a510a40d09fa",
            "26926756-a08c-41af-b09b-71e3ae961cd5",
            "7c5379dd-6783-493a-987e-29df5448e8ce"
          ],
          "pending": [],
          "skipped": [],
          "duration": 43032,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b4a8f87f-591c-47b5-ac63-1f0bbf7bdcf1",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 4798,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:40373/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:40373/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:40373/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:40373/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:40373/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:40373/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:40373/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:40373/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:40373/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:40373/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:40373/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:40373/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:40373/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "6f4762a8-713e-4eba-b0c3-a1d7679b6c36",
              "parentUUID": "b4a8f87f-591c-47b5-ac63-1f0bbf7bdcf1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 4732,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:40373/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:40373/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:40373/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:40373/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:40373/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:40373/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:40373/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:40373/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:40373/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:40373/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:40373/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:40373/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:40373/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "cc481637-4b77-41ac-b0b3-93d05c3f44e2",
              "parentUUID": "b4a8f87f-591c-47b5-ac63-1f0bbf7bdcf1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 4699,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:40373/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:40373/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:40373/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:40373/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:40373/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:40373/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:40373/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:40373/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:40373/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:40373/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:40373/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:40373/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:40373/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "49d45e56-59a2-45cc-bb22-c79dcea149ff",
              "parentUUID": "b4a8f87f-591c-47b5-ac63-1f0bbf7bdcf1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "6f4762a8-713e-4eba-b0c3-a1d7679b6c36",
            "cc481637-4b77-41ac-b0b3-93d05c3f44e2",
            "49d45e56-59a2-45cc-bb22-c79dcea149ff"
          ],
          "pending": [],
          "skipped": [],
          "duration": 14229,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "811bf2a4-df6b-4f5c-93c8-15625fc6ef2c",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 996,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:40373/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:40373/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:40373/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:40373/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:40373/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:40373/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:40373/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:40373/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:40373/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:40373/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:40373/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:40373/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:40373/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:40373/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "f90d0539-d2fd-4991-9f92-94d0d0e90f9d",
              "parentUUID": "811bf2a4-df6b-4f5c-93c8-15625fc6ef2c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 1126,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:40373/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:40373/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:40373/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:40373/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:40373/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:40373/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:40373/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:40373/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:40373/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:40373/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:40373/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:40373/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:40373/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:40373/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "687715d3-3c01-471a-ac88-837bb850a77e",
              "parentUUID": "811bf2a4-df6b-4f5c-93c8-15625fc6ef2c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "f90d0539-d2fd-4991-9f92-94d0d0e90f9d",
            "687715d3-3c01-471a-ac88-837bb850a77e"
          ],
          "pending": [],
          "skipped": [],
          "duration": 2122,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}