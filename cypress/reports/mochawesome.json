{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 36,
    "pending": 0,
    "failures": 5,
    "start": "2021-06-01T21:49:01.777Z",
    "end": "2021-06-01T21:50:28.379Z",
    "duration": 86602,
    "testsRegistered": 41,
    "passPercent": 87.8048780487805,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "a6699280-f990-4605-9139-47626fe16264",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "54517363-7886-44bd-8022-c6d9b4351081",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 473,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "a45e6d64-e239-4f49-bf8e-3749b578013d",
              "parentUUID": "54517363-7886-44bd-8022-c6d9b4351081",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a45e6d64-e239-4f49-bf8e-3749b578013d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 473,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c706bf0b-9229-43a0-ad1b-25fc595728a7",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "timedOut": null,
              "duration": 216,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');",
              "err": {},
              "uuid": "15307dcb-cdf9-4995-9dfb-b6c51c7cd1fd",
              "parentUUID": "c706bf0b-9229-43a0-ad1b-25fc595728a7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 428,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "efdb88a6-5113-441b-a8e6-25fd5981d2fa",
              "parentUUID": "c706bf0b-9229-43a0-ad1b-25fc595728a7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 372,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "8798ae0b-ca1b-46b3-8e09-8d6d0e0ba6da",
              "parentUUID": "c706bf0b-9229-43a0-ad1b-25fc595728a7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 229,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "ede4dea1-5f28-47e6-b1e6-aaf37ac3a620",
              "parentUUID": "c706bf0b-9229-43a0-ad1b-25fc595728a7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 197,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "d20cdf80-238e-4578-ad1f-97c6314a15c6",
              "parentUUID": "c706bf0b-9229-43a0-ad1b-25fc595728a7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 186,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "a261ae52-83dd-4b52-99ed-7ff48a27ad21",
              "parentUUID": "c706bf0b-9229-43a0-ad1b-25fc595728a7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 162,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "4bd17221-c40b-42c3-a3c6-485424fb4792",
              "parentUUID": "c706bf0b-9229-43a0-ad1b-25fc595728a7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "15307dcb-cdf9-4995-9dfb-b6c51c7cd1fd",
            "efdb88a6-5113-441b-a8e6-25fd5981d2fa",
            "8798ae0b-ca1b-46b3-8e09-8d6d0e0ba6da",
            "ede4dea1-5f28-47e6-b1e6-aaf37ac3a620",
            "d20cdf80-238e-4578-ad1f-97c6314a15c6",
            "a261ae52-83dd-4b52-99ed-7ff48a27ad21",
            "4bd17221-c40b-42c3-a3c6-485424fb4792"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1790,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e4654907-d33d-4c6b-8070-61c18cb77b73",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 153,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "708d9819-e99a-423e-8d04-8f4fa26f7400",
              "parentUUID": "e4654907-d33d-4c6b-8070-61c18cb77b73",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 453,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "4c1fafaf-7c0f-42f4-8b66-776f1558645e",
              "parentUUID": "e4654907-d33d-4c6b-8070-61c18cb77b73",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "708d9819-e99a-423e-8d04-8f4fa26f7400",
            "4c1fafaf-7c0f-42f4-8b66-776f1558645e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 606,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "55a9c440-c9f0-417c-82af-6f82d4cb1983",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 180,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "f310da3e-bbcd-451c-8e90-139ae357d7ae",
              "parentUUID": "55a9c440-c9f0-417c-82af-6f82d4cb1983",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 221,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "970bae63-ee09-49c3-899f-ddde8e31ccf2",
              "parentUUID": "55a9c440-c9f0-417c-82af-6f82d4cb1983",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 342,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "7b73f834-96c9-4bee-927f-037d86ecfb6c",
              "parentUUID": "55a9c440-c9f0-417c-82af-6f82d4cb1983",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 208,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "2113f5cf-e560-42a4-8817-2c8a8a5cafdf",
              "parentUUID": "55a9c440-c9f0-417c-82af-6f82d4cb1983",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f310da3e-bbcd-451c-8e90-139ae357d7ae",
            "970bae63-ee09-49c3-899f-ddde8e31ccf2",
            "7b73f834-96c9-4bee-927f-037d86ecfb6c",
            "2113f5cf-e560-42a4-8817-2c8a8a5cafdf"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 951,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "2186a3c0-66cc-4b14-a58a-edd0c3ff1463",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 664,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "1281850e-2508-4c78-a2a7-7545db9e5f8b",
              "parentUUID": "2186a3c0-66cc-4b14-a58a-edd0c3ff1463",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 521,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "546f7f85-6c91-421a-b3b7-5e599eb4f524",
              "parentUUID": "2186a3c0-66cc-4b14-a58a-edd0c3ff1463",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1281850e-2508-4c78-a2a7-7545db9e5f8b",
            "546f7f85-6c91-421a-b3b7-5e599eb4f524"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1185,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "8c18d20a-2907-42b8-b773-bee0d979ae35",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 163,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "9bd7418e-1c1a-4e66-ab2b-c3b5673a3d4f",
              "parentUUID": "8c18d20a-2907-42b8-b773-bee0d979ae35",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 187,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "b9168383-e09b-4407-87f1-7f04be11886f",
              "parentUUID": "8c18d20a-2907-42b8-b773-bee0d979ae35",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9bd7418e-1c1a-4e66-ab2b-c3b5673a3d4f",
            "b9168383-e09b-4407-87f1-7f04be11886f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 350,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "3f59fe12-2171-4720-90e0-94a02815e3df",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 667,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "ba1f6307-2560-4002-b5bb-47755f6106b2",
              "parentUUID": "3f59fe12-2171-4720-90e0-94a02815e3df",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 10158,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "26549e91-f399-4b1a-8da4-a52b7a450491",
              "parentUUID": "3f59fe12-2171-4720-90e0-94a02815e3df",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ba1f6307-2560-4002-b5bb-47755f6106b2",
            "26549e91-f399-4b1a-8da4-a52b7a450491"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10825,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "4daa9603-ad12-4d13-8ecf-c9ee71d1215b",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2795,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "b5374f86-7d81-4a14-a544-129078cee65e",
              "parentUUID": "4daa9603-ad12-4d13-8ecf-c9ee71d1215b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 11171,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "532a3859-2121-407c-83e1-6ef73362abd0",
              "parentUUID": "4daa9603-ad12-4d13-8ecf-c9ee71d1215b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 3286,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "147dd4be-1f7e-46b0-b26d-dddf8874de71",
              "parentUUID": "4daa9603-ad12-4d13-8ecf-c9ee71d1215b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b5374f86-7d81-4a14-a544-129078cee65e",
            "532a3859-2121-407c-83e1-6ef73362abd0",
            "147dd4be-1f7e-46b0-b26d-dddf8874de71"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 17252,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "6d48ee98-a765-4a0f-b194-9b2e017a6e1c",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 246,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "e10899cf-100c-4d5e-909a-778ee8917f8e",
              "parentUUID": "6d48ee98-a765-4a0f-b194-9b2e017a6e1c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 164,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "20f7d40d-5aa5-442f-b873-7639edd99013",
              "parentUUID": "6d48ee98-a765-4a0f-b194-9b2e017a6e1c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 131,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "8b6a0ada-0ade-4e84-8b9c-35bc50590dec",
              "parentUUID": "6d48ee98-a765-4a0f-b194-9b2e017a6e1c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 7047,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: expected '<div.pixel>' to have CSS property 'background-color' with the value 'rgb(255, 255, 255)', but the value was 'rgb(85, 199, 21)'",
                "estack": "CypressError: Timed out retrying: expected '<div.pixel>' to have CSS property 'background-color' with the value 'rgb(255, 255, 255)', but the value was 'rgb(85, 199, 21)'\n    at cypressErr (http://localhost:41231/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:41231/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:41231/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:41231/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:41231/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:41231/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:41231/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:41231/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:41231/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:41231/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:41231/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:41231/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:41231/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "b2bb2470-c839-4428-8de4-04a96c6bb19b",
              "parentUUID": "6d48ee98-a765-4a0f-b194-9b2e017a6e1c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e10899cf-100c-4d5e-909a-778ee8917f8e",
            "20f7d40d-5aa5-442f-b873-7639edd99013",
            "8b6a0ada-0ade-4e84-8b9c-35bc50590dec"
          ],
          "failures": [
            "b2bb2470-c839-4428-8de4-04a96c6bb19b"
          ],
          "pending": [],
          "skipped": [],
          "duration": 7588,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "856d01ef-9a4c-49d6-9237-b42176d5b95f",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 403,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {},
              "uuid": "105503b6-8966-4ea4-a7e4-5583df4ea587",
              "parentUUID": "856d01ef-9a4c-49d6-9237-b42176d5b95f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 301,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {},
              "uuid": "a55f29ac-44f7-46f8-aa8d-9c1f5d65ab80",
              "parentUUID": "856d01ef-9a4c-49d6-9237-b42176d5b95f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4656,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:41231/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:41231/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:41231/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:41231/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:41231/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:41231/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:41231/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:41231/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:41231/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:41231/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:41231/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:41231/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:41231/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "3ebd9335-2cd7-4f4f-ab85-3e1d9b5b3609",
              "parentUUID": "856d01ef-9a4c-49d6-9237-b42176d5b95f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 412,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {},
              "uuid": "16206450-403e-465a-a349-243770288f8a",
              "parentUUID": "856d01ef-9a4c-49d6-9237-b42176d5b95f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 269,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "947539a8-329a-4643-906a-dbd08019f27c",
              "parentUUID": "856d01ef-9a4c-49d6-9237-b42176d5b95f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 570,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {},
              "uuid": "c25e3876-1e20-4bb0-8153-5f441811d744",
              "parentUUID": "856d01ef-9a4c-49d6-9237-b42176d5b95f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 714,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "AssertionError: expected false to match /Board inválido!/i",
                "estack": "AssertionError: expected false to match /Board inválido!/i\n    at getRet (http://localhost:41231/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:41231/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:41231/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:41231/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:41231/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:41231/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:41231/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:41231/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:41231/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:41231/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:41231/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:41231/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:41231/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:41231/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "c98465a2-99c8-4e09-addc-73db21fddd41",
              "parentUUID": "856d01ef-9a4c-49d6-9237-b42176d5b95f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 1271,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {},
              "uuid": "3c8749df-d886-4d2c-8071-06516c4ac86c",
              "parentUUID": "856d01ef-9a4c-49d6-9237-b42176d5b95f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 709,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "c33c45fd-4512-4f81-9cbd-0e6f211833c0",
              "parentUUID": "856d01ef-9a4c-49d6-9237-b42176d5b95f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "105503b6-8966-4ea4-a7e4-5583df4ea587",
            "a55f29ac-44f7-46f8-aa8d-9c1f5d65ab80",
            "16206450-403e-465a-a349-243770288f8a",
            "947539a8-329a-4643-906a-dbd08019f27c",
            "c25e3876-1e20-4bb0-8153-5f441811d744",
            "3c8749df-d886-4d2c-8071-06516c4ac86c",
            "c33c45fd-4512-4f81-9cbd-0e6f211833c0"
          ],
          "failures": [
            "3ebd9335-2cd7-4f4f-ab85-3e1d9b5b3609",
            "c98465a2-99c8-4e09-addc-73db21fddd41"
          ],
          "pending": [],
          "skipped": [],
          "duration": 9305,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b100dbf8-e65f-4b8e-b09b-969940b75bd5",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 7721,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {},
              "uuid": "cbcdf8ce-c6f8-4e27-b0cb-e0689a1d9487",
              "parentUUID": "b100dbf8-e65f-4b8e-b09b-969940b75bd5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 4956,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Not enough elements found. Found '16', expected '25'.",
                "estack": "CypressError: Timed out retrying: Not enough elements found. Found '16', expected '25'.\n    at cypressErr (http://localhost:41231/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:41231/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:41231/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:41231/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:41231/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:41231/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:41231/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:41231/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:41231/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:41231/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:41231/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:41231/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:41231/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "d28fe9b4-af5a-43e6-ab0c-1fddefedd1f2",
              "parentUUID": "b100dbf8-e65f-4b8e-b09b-969940b75bd5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 19285,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Too many elements found. Found '2601', expected '2500'.",
                "estack": "CypressError: Timed out retrying: Too many elements found. Found '2601', expected '2500'.\n    at cypressErr (http://localhost:41231/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:41231/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:41231/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:41231/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:41231/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:41231/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:41231/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:41231/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:41231/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:41231/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:41231/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:41231/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:41231/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "2eac0c74-c2fb-43fc-999c-7ef0d8706b6d",
              "parentUUID": "b100dbf8-e65f-4b8e-b09b-969940b75bd5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "cbcdf8ce-c6f8-4e27-b0cb-e0689a1d9487"
          ],
          "failures": [
            "d28fe9b4-af5a-43e6-ab0c-1fddefedd1f2",
            "2eac0c74-c2fb-43fc-999c-7ef0d8706b6d"
          ],
          "pending": [],
          "skipped": [],
          "duration": 31962,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "0eaef3dc-af98-405b-bfb3-9a58c1b5beff",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 1141,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {},
              "uuid": "472ce270-2829-437a-9eb4-fa3283753b74",
              "parentUUID": "0eaef3dc-af98-405b-bfb3-9a58c1b5beff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 689,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {},
              "uuid": "737349b4-b64f-49b6-a3fd-7e6cb9cd37eb",
              "parentUUID": "0eaef3dc-af98-405b-bfb3-9a58c1b5beff",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "472ce270-2829-437a-9eb4-fa3283753b74",
            "737349b4-b64f-49b6-a3fd-7e6cb9cd37eb"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1830,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}