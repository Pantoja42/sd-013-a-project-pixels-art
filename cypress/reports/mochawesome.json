{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 27,
    "pending": 0,
    "failures": 14,
    "start": "2021-06-22T06:27:26.424Z",
    "end": "2021-06-22T06:29:10.163Z",
    "duration": 103739,
    "testsRegistered": 41,
    "passPercent": 65.85365853658537,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "238f92f9-b8e4-49a0-8a4e-004e515d7b1a",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c0b30b25-2e61-45c1-9249-16a9cc4f9541",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 590,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "03e3ce47-e3ba-47f1-9936-a73f297f1bf1",
              "parentUUID": "c0b30b25-2e61-45c1-9249-16a9cc4f9541",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "03e3ce47-e3ba-47f1-9936-a73f297f1bf1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 590,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c33e4bae-bc47-43d9-bf73-4ac1fa3402ac",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "timedOut": null,
              "duration": 343,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');",
              "err": {},
              "uuid": "d7948778-f618-445d-b044-c25701a1c413",
              "parentUUID": "c33e4bae-bc47-43d9-bf73-4ac1fa3402ac",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 430,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "dfa6e58d-3e40-48e6-9aba-ee41465cb41a",
              "parentUUID": "c33e4bae-bc47-43d9-bf73-4ac1fa3402ac",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 439,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "d5b36b02-33fc-45a0-a990-bc252bd028c9",
              "parentUUID": "c33e4bae-bc47-43d9-bf73-4ac1fa3402ac",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 256,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "cfaee490-2832-448f-a525-53e9f47ad677",
              "parentUUID": "c33e4bae-bc47-43d9-bf73-4ac1fa3402ac",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 231,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "8d5c88e4-5ca5-4a2c-8f92-9a7ab1d74f45",
              "parentUUID": "c33e4bae-bc47-43d9-bf73-4ac1fa3402ac",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 336,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "814a52ad-8b70-4af7-81fd-5513a3fc89d9",
              "parentUUID": "c33e4bae-bc47-43d9-bf73-4ac1fa3402ac",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 306,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "2ac74560-9ff6-43a0-a304-057d01ee06a3",
              "parentUUID": "c33e4bae-bc47-43d9-bf73-4ac1fa3402ac",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d7948778-f618-445d-b044-c25701a1c413",
            "dfa6e58d-3e40-48e6-9aba-ee41465cb41a",
            "d5b36b02-33fc-45a0-a990-bc252bd028c9",
            "cfaee490-2832-448f-a525-53e9f47ad677",
            "8d5c88e4-5ca5-4a2c-8f92-9a7ab1d74f45",
            "814a52ad-8b70-4af7-81fd-5513a3fc89d9",
            "2ac74560-9ff6-43a0-a304-057d01ee06a3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2341,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c61718d7-58ae-423c-9f28-2f3462bfd28f",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 224,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "b824739d-ac6a-4b7c-93be-ea3811d05520",
              "parentUUID": "c61718d7-58ae-423c-9f28-2f3462bfd28f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 573,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "26e1b530-08e1-4053-ad3e-8683b07b480f",
              "parentUUID": "c61718d7-58ae-423c-9f28-2f3462bfd28f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b824739d-ac6a-4b7c-93be-ea3811d05520",
            "26e1b530-08e1-4053-ad3e-8683b07b480f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 797,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d8dd085b-433e-47c9-b5f4-01364d628f10",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 302,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "d2917496-2884-4aaf-bc6f-961d24ca8c9c",
              "parentUUID": "d8dd085b-433e-47c9-b5f4-01364d628f10",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 367,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "789bcd36-3dec-4b54-9aba-13618618a1bf",
              "parentUUID": "d8dd085b-433e-47c9-b5f4-01364d628f10",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 508,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "a04c0e8a-e2a6-4e9a-b476-df8234bde5c5",
              "parentUUID": "d8dd085b-433e-47c9-b5f4-01364d628f10",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 402,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "5afa13eb-2c37-4c01-a4d6-f54bee193a1f",
              "parentUUID": "d8dd085b-433e-47c9-b5f4-01364d628f10",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d2917496-2884-4aaf-bc6f-961d24ca8c9c",
            "789bcd36-3dec-4b54-9aba-13618618a1bf",
            "a04c0e8a-e2a6-4e9a-b476-df8234bde5c5",
            "5afa13eb-2c37-4c01-a4d6-f54bee193a1f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1579,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d069b95a-91c8-4612-9d5d-b6121a41119d",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 934,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "48a2da7b-2814-4114-a192-4badd377aad3",
              "parentUUID": "d069b95a-91c8-4612-9d5d-b6121a41119d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 803,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "ea08ef82-e7a5-4103-827e-c30a44c8e42d",
              "parentUUID": "d069b95a-91c8-4612-9d5d-b6121a41119d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "48a2da7b-2814-4114-a192-4badd377aad3",
            "ea08ef82-e7a5-4103-827e-c30a44c8e42d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1737,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "01fce050-97f9-449e-9b03-b8b3ee1d146b",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 403,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "172df0cb-6b87-4095-8ae9-b4d7bbabf8d3",
              "parentUUID": "01fce050-97f9-449e-9b03-b8b3ee1d146b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 312,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "96e27231-81f5-49da-90f3-749a8d2f66e6",
              "parentUUID": "01fce050-97f9-449e-9b03-b8b3ee1d146b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "172df0cb-6b87-4095-8ae9-b4d7bbabf8d3",
            "96e27231-81f5-49da-90f3-749a8d2f66e6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 715,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "0ae6c401-370b-4fd8-bb39-3d59ae141b23",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 763,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "f1f6b00e-f1c3-432a-9db3-6a9eee22c373",
              "parentUUID": "0ae6c401-370b-4fd8-bb39-3d59ae141b23",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 10737,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "b52b6e33-a69e-477c-af53-2c4e101729b2",
              "parentUUID": "0ae6c401-370b-4fd8-bb39-3d59ae141b23",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f1f6b00e-f1c3-432a-9db3-6a9eee22c373",
            "b52b6e33-a69e-477c-af53-2c4e101729b2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 11500,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "ab52d192-1d3a-4e3e-a965-0f1f596d45af",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2802,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "5b359291-85b0-4775-97ab-86efc55b7fe4",
              "parentUUID": "ab52d192-1d3a-4e3e-a965-0f1f596d45af",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 10587,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "14cde9b0-bd35-41eb-ab53-d41ec6a89910",
              "parentUUID": "ab52d192-1d3a-4e3e-a965-0f1f596d45af",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 4208,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "3f0eb3af-f725-4c8f-8e3f-849f66e32d2e",
              "parentUUID": "ab52d192-1d3a-4e3e-a965-0f1f596d45af",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5b359291-85b0-4775-97ab-86efc55b7fe4",
            "14cde9b0-bd35-41eb-ab53-d41ec6a89910",
            "3f0eb3af-f725-4c8f-8e3f-849f66e32d2e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 17597,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a836e214-4652-4b3e-9ad0-881750cde2ab",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 435,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "825cde9c-7b98-4369-a0c2-3dc5579aa413",
              "parentUUID": "a836e214-4652-4b3e-9ad0-881750cde2ab",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 210,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "b7189c6a-8739-401f-b3ef-01722d61fc02",
              "parentUUID": "a836e214-4652-4b3e-9ad0-881750cde2ab",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 239,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "1e786535-4e12-4dab-8715-9370911a0e1a",
              "parentUUID": "a836e214-4652-4b3e-9ad0-881750cde2ab",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 3109,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "67cbdca5-289d-4ae2-9dab-16ed9d88f882",
              "parentUUID": "a836e214-4652-4b3e-9ad0-881750cde2ab",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "825cde9c-7b98-4369-a0c2-3dc5579aa413",
            "b7189c6a-8739-401f-b3ef-01722d61fc02",
            "1e786535-4e12-4dab-8715-9370911a0e1a",
            "67cbdca5-289d-4ae2-9dab-16ed9d88f882"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3993,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "cc17d50e-085d-41d5-9b06-07cfcb1f6796",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 4971,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:34421/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34421/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34421/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34421/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34421/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34421/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34421/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34421/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34421/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34421/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34421/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34421/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34421/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "9fdd2995-eba9-492f-87a7-3d04120a74cd",
              "parentUUID": "cc17d50e-085d-41d5-9b06-07cfcb1f6796",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 4835,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:34421/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34421/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34421/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34421/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34421/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34421/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34421/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34421/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34421/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34421/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34421/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34421/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34421/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "f0bfb771-31b5-49bb-b0f7-a0d836d3e0a0",
              "parentUUID": "cc17d50e-085d-41d5-9b06-07cfcb1f6796",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4975,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:34421/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34421/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34421/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34421/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34421/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34421/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34421/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34421/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34421/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34421/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34421/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34421/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34421/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "c1a336d4-39e7-4a21-8e9e-5b668f495e04",
              "parentUUID": "cc17d50e-085d-41d5-9b06-07cfcb1f6796",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 4873,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:34421/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34421/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34421/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34421/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34421/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34421/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34421/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34421/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34421/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34421/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34421/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34421/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34421/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "3bd3a316-033e-4140-8ceb-6007e7cf2df9",
              "parentUUID": "cc17d50e-085d-41d5-9b06-07cfcb1f6796",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 5025,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:34421/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34421/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34421/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34421/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34421/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34421/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34421/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34421/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34421/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34421/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34421/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34421/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34421/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "4f0103fa-c156-4e7e-a724-9f63edaa32b7",
              "parentUUID": "cc17d50e-085d-41d5-9b06-07cfcb1f6796",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 4727,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:34421/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34421/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34421/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34421/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34421/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34421/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34421/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34421/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34421/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34421/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34421/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34421/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34421/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "c7294f89-2b84-49f7-8d33-ee4988802ed3",
              "parentUUID": "cc17d50e-085d-41d5-9b06-07cfcb1f6796",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 4811,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:34421/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34421/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34421/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34421/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34421/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34421/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34421/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34421/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34421/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34421/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34421/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34421/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34421/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "2da86f12-161b-40d1-b755-24e716f1fa80",
              "parentUUID": "cc17d50e-085d-41d5-9b06-07cfcb1f6796",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4703,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:34421/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34421/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34421/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34421/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34421/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34421/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34421/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34421/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34421/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34421/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34421/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34421/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34421/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "01bc0a17-99a8-4aac-a29c-c441fa7c83a2",
              "parentUUID": "cc17d50e-085d-41d5-9b06-07cfcb1f6796",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4867,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:34421/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34421/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34421/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34421/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34421/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34421/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34421/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34421/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34421/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34421/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34421/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34421/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34421/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "d8a64798-d277-46b5-901d-a5722d95084f",
              "parentUUID": "cc17d50e-085d-41d5-9b06-07cfcb1f6796",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "9fdd2995-eba9-492f-87a7-3d04120a74cd",
            "f0bfb771-31b5-49bb-b0f7-a0d836d3e0a0",
            "c1a336d4-39e7-4a21-8e9e-5b668f495e04",
            "3bd3a316-033e-4140-8ceb-6007e7cf2df9",
            "4f0103fa-c156-4e7e-a724-9f63edaa32b7",
            "c7294f89-2b84-49f7-8d33-ee4988802ed3",
            "2da86f12-161b-40d1-b755-24e716f1fa80",
            "01bc0a17-99a8-4aac-a29c-c441fa7c83a2",
            "d8a64798-d277-46b5-901d-a5722d95084f"
          ],
          "pending": [],
          "skipped": [],
          "duration": 43787,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "2867eefd-06f5-45e3-83c4-23c29ea058f3",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 4964,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:34421/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34421/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34421/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34421/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34421/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34421/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34421/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34421/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34421/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34421/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34421/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34421/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34421/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "e0dfe97f-5dc8-4ba7-a419-43673ed20d68",
              "parentUUID": "2867eefd-06f5-45e3-83c4-23c29ea058f3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 4697,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:34421/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34421/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34421/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34421/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34421/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34421/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34421/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34421/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34421/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34421/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34421/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34421/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34421/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "3474b9f5-dbaa-4455-beeb-6db7974505ed",
              "parentUUID": "2867eefd-06f5-45e3-83c4-23c29ea058f3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 4712,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:34421/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34421/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34421/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34421/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34421/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34421/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34421/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34421/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34421/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34421/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34421/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34421/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34421/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "d05bd67e-a045-4861-818d-ee8b3c724cce",
              "parentUUID": "2867eefd-06f5-45e3-83c4-23c29ea058f3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "e0dfe97f-5dc8-4ba7-a419-43673ed20d68",
            "3474b9f5-dbaa-4455-beeb-6db7974505ed",
            "d05bd67e-a045-4861-818d-ee8b3c724cce"
          ],
          "pending": [],
          "skipped": [],
          "duration": 14373,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "ceab45a3-688f-4a7e-b2b4-43cab4b31a8a",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 1348,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:34421/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:34421/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:34421/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:34421/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:34421/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:34421/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:34421/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:34421/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34421/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34421/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:34421/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34421/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34421/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34421/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "8bedd1bf-f37b-49d3-93a8-52f6b6d83f9b",
              "parentUUID": "ceab45a3-688f-4a7e-b2b4-43cab4b31a8a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 1110,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:34421/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:34421/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:34421/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:34421/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:34421/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:34421/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:34421/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:34421/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34421/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34421/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:34421/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34421/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34421/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34421/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "6b7a22b5-5101-49ac-8c71-f04d52b53017",
              "parentUUID": "ceab45a3-688f-4a7e-b2b4-43cab4b31a8a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "8bedd1bf-f37b-49d3-93a8-52f6b6d83f9b",
            "6b7a22b5-5101-49ac-8c71-f04d52b53017"
          ],
          "pending": [],
          "skipped": [],
          "duration": 2458,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}