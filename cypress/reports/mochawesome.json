{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 37,
    "pending": 0,
    "failures": 4,
    "start": "2021-06-22T14:38:36.918Z",
    "end": "2021-06-22T14:39:34.552Z",
    "duration": 57634,
    "testsRegistered": 41,
    "passPercent": 90.2439024390244,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "a4208ed9-e17c-4e02-b339-29abfe5aed15",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "cd46d9c9-fb2f-4464-a213-04788c295c40",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 495,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "57107e03-0ee7-4b7b-a97f-be8518f04232",
              "parentUUID": "cd46d9c9-fb2f-4464-a213-04788c295c40",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "57107e03-0ee7-4b7b-a97f-be8518f04232"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 495,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "5479cf32-d6a1-4b60-bf72-c96989a00387",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "timedOut": null,
              "duration": 164,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');",
              "err": {},
              "uuid": "f1de070c-7315-4461-98e8-bc9237240c51",
              "parentUUID": "5479cf32-d6a1-4b60-bf72-c96989a00387",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 367,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "3f7fecd9-dfdc-4684-aa23-4b0910197ef3",
              "parentUUID": "5479cf32-d6a1-4b60-bf72-c96989a00387",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 569,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "6541b829-546d-4e31-ad96-d191eeae5711",
              "parentUUID": "5479cf32-d6a1-4b60-bf72-c96989a00387",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 431,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "87a830b9-c472-4900-860b-a0d4e478fedf",
              "parentUUID": "5479cf32-d6a1-4b60-bf72-c96989a00387",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 250,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "75cd2aaa-e288-4c11-be50-5e109c116c3c",
              "parentUUID": "5479cf32-d6a1-4b60-bf72-c96989a00387",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 257,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "49331e76-0581-40b2-93b0-4c47852cf455",
              "parentUUID": "5479cf32-d6a1-4b60-bf72-c96989a00387",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 188,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "3d68e400-be92-4df0-b34f-33544bc06f13",
              "parentUUID": "5479cf32-d6a1-4b60-bf72-c96989a00387",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f1de070c-7315-4461-98e8-bc9237240c51",
            "3f7fecd9-dfdc-4684-aa23-4b0910197ef3",
            "6541b829-546d-4e31-ad96-d191eeae5711",
            "87a830b9-c472-4900-860b-a0d4e478fedf",
            "75cd2aaa-e288-4c11-be50-5e109c116c3c",
            "49331e76-0581-40b2-93b0-4c47852cf455",
            "3d68e400-be92-4df0-b34f-33544bc06f13"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2226,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f7e5571f-3957-4a98-901a-f532d0057d7a",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 197,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "c0adc7f4-b194-4d45-81c7-8dbefc5c0c42",
              "parentUUID": "f7e5571f-3957-4a98-901a-f532d0057d7a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 368,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "59557b26-cf30-44ff-bfce-75e82b96b4a7",
              "parentUUID": "f7e5571f-3957-4a98-901a-f532d0057d7a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c0adc7f4-b194-4d45-81c7-8dbefc5c0c42",
            "59557b26-cf30-44ff-bfce-75e82b96b4a7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 565,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "4ad1f216-4bf8-41a9-b936-11360f019f68",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 213,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "212ed30f-71dc-4ec9-b32a-8fd040103cc5",
              "parentUUID": "4ad1f216-4bf8-41a9-b936-11360f019f68",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 286,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "c3d4dd4c-76b8-40b3-9ee1-ccb507b6257a",
              "parentUUID": "4ad1f216-4bf8-41a9-b936-11360f019f68",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 332,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "6a997a08-7631-45b3-b71c-ebb05e9413a6",
              "parentUUID": "4ad1f216-4bf8-41a9-b936-11360f019f68",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 307,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "dd9de041-c88f-40f9-89c7-7a9427a1b230",
              "parentUUID": "4ad1f216-4bf8-41a9-b936-11360f019f68",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "212ed30f-71dc-4ec9-b32a-8fd040103cc5",
            "c3d4dd4c-76b8-40b3-9ee1-ccb507b6257a",
            "6a997a08-7631-45b3-b71c-ebb05e9413a6",
            "dd9de041-c88f-40f9-89c7-7a9427a1b230"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1138,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "4534649c-7ff0-4ac6-8ff7-45588f60f75e",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 628,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "830a3eae-2736-49c9-bd0e-07976b4af759",
              "parentUUID": "4534649c-7ff0-4ac6-8ff7-45588f60f75e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 640,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "447ffffd-0fbd-47ae-b0f0-f148cf9bac0f",
              "parentUUID": "4534649c-7ff0-4ac6-8ff7-45588f60f75e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "830a3eae-2736-49c9-bd0e-07976b4af759",
            "447ffffd-0fbd-47ae-b0f0-f148cf9bac0f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1268,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d60e024c-60a3-4ac4-a43e-1ee6b2a5b544",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 273,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "98c37913-3048-40c5-98b1-aacd7e391a53",
              "parentUUID": "d60e024c-60a3-4ac4-a43e-1ee6b2a5b544",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 247,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "3a554d66-f1e8-461b-9f3b-bb4e82c5418a",
              "parentUUID": "d60e024c-60a3-4ac4-a43e-1ee6b2a5b544",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "98c37913-3048-40c5-98b1-aacd7e391a53",
            "3a554d66-f1e8-461b-9f3b-bb4e82c5418a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 520,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "0054b4b4-1b9d-4124-9753-629772b78db2",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 613,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "da737fe3-1ed5-4ec5-b2f5-6d9a58f27a18",
              "parentUUID": "0054b4b4-1b9d-4124-9753-629772b78db2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 8818,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "ac68ecb8-6f48-4062-9aaf-0c6f13065332",
              "parentUUID": "0054b4b4-1b9d-4124-9753-629772b78db2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "da737fe3-1ed5-4ec5-b2f5-6d9a58f27a18",
            "ac68ecb8-6f48-4062-9aaf-0c6f13065332"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9431,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "078da873-d7b2-411e-a514-4f53364b2b10",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2281,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "da021694-0c63-45bd-9c25-e2254758c9db",
              "parentUUID": "078da873-d7b2-411e-a514-4f53364b2b10",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 8435,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "169df8e8-c541-4b6e-ac3d-5e4ad263d845",
              "parentUUID": "078da873-d7b2-411e-a514-4f53364b2b10",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 1499,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "1a4d9599-bc0e-49ff-9829-85b4bbec7a13",
              "parentUUID": "078da873-d7b2-411e-a514-4f53364b2b10",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "da021694-0c63-45bd-9c25-e2254758c9db",
            "169df8e8-c541-4b6e-ac3d-5e4ad263d845",
            "1a4d9599-bc0e-49ff-9829-85b4bbec7a13"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12215,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "dd0f1ef0-17ca-41b5-8dc6-45e8a775107f",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 268,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "83b8ab6f-a4c4-4ca2-b55f-3eb6a003c5b0",
              "parentUUID": "dd0f1ef0-17ca-41b5-8dc6-45e8a775107f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 176,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "e24e7e8f-31b9-4ea5-aa8e-fc4f435db247",
              "parentUUID": "dd0f1ef0-17ca-41b5-8dc6-45e8a775107f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 106,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "d9fbdcb5-526b-4e83-b12e-ca51fd23ee7e",
              "parentUUID": "dd0f1ef0-17ca-41b5-8dc6-45e8a775107f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 2355,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "cdeb2a87-e6df-4076-b66f-a218405e748d",
              "parentUUID": "dd0f1ef0-17ca-41b5-8dc6-45e8a775107f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "83b8ab6f-a4c4-4ca2-b55f-3eb6a003c5b0",
            "e24e7e8f-31b9-4ea5-aa8e-fc4f435db247",
            "d9fbdcb5-526b-4e83-b12e-ca51fd23ee7e",
            "cdeb2a87-e6df-4076-b66f-a218405e748d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2905,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "5eac15c1-c714-4e42-a7fd-d60d07592d29",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 362,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {},
              "uuid": "ba617d5b-21ee-4924-8a61-6010347d2135",
              "parentUUID": "5eac15c1-c714-4e42-a7fd-d60d07592d29",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 183,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {},
              "uuid": "deed7bd2-b12c-425f-a023-c736534e3995",
              "parentUUID": "5eac15c1-c714-4e42-a7fd-d60d07592d29",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 184,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {},
              "uuid": "64bf7757-d566-46f4-908b-9f85bc32c650",
              "parentUUID": "5eac15c1-c714-4e42-a7fd-d60d07592d29",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 164,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {},
              "uuid": "784ab9c4-2d68-4041-9984-ae1de7aa9a86",
              "parentUUID": "5eac15c1-c714-4e42-a7fd-d60d07592d29",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 187,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "4f778a82-0b8d-4dd7-92ae-a9e2850497a3",
              "parentUUID": "5eac15c1-c714-4e42-a7fd-d60d07592d29",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 208,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {},
              "uuid": "429aae3a-17fd-48af-ab86-cd0180bfa474",
              "parentUUID": "5eac15c1-c714-4e42-a7fd-d60d07592d29",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 310,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {},
              "uuid": "e969fc8f-ab9a-43d4-aea4-05e5c542ffc7",
              "parentUUID": "5eac15c1-c714-4e42-a7fd-d60d07592d29",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4927,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '100'.",
                "estack": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '100'.\n    at cypressErr (http://localhost:53279/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:53279/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:53279/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:53279/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:53279/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:53279/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:53279/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:53279/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:53279/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:53279/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:53279/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:53279/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:53279/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "084ec69e-56af-41c7-b526-503a6c3a1293",
              "parentUUID": "5eac15c1-c714-4e42-a7fd-d60d07592d29",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 5135,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '36'.",
                "estack": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '36'.\n    at cypressErr (http://localhost:53279/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:53279/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:53279/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:53279/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:53279/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:53279/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:53279/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:53279/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:53279/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:53279/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:53279/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:53279/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:53279/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "4ac25bc4-90d0-4493-a78f-896875e3ffe2",
              "parentUUID": "5eac15c1-c714-4e42-a7fd-d60d07592d29",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ba617d5b-21ee-4924-8a61-6010347d2135",
            "deed7bd2-b12c-425f-a023-c736534e3995",
            "64bf7757-d566-46f4-908b-9f85bc32c650",
            "784ab9c4-2d68-4041-9984-ae1de7aa9a86",
            "4f778a82-0b8d-4dd7-92ae-a9e2850497a3",
            "429aae3a-17fd-48af-ab86-cd0180bfa474",
            "e969fc8f-ab9a-43d4-aea4-05e5c542ffc7"
          ],
          "failures": [
            "084ec69e-56af-41c7-b526-503a6c3a1293",
            "4ac25bc4-90d0-4493-a78f-896875e3ffe2"
          ],
          "pending": [],
          "skipped": [],
          "duration": 11660,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "347489a2-a978-4a80-8fd4-10a8202a5d10",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 5329,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '2500'.",
                "estack": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '2500'.\n    at cypressErr (http://localhost:53279/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:53279/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:53279/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:53279/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:53279/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:53279/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:53279/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:53279/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:53279/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:53279/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:53279/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:53279/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:53279/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "2f6407a2-fbfb-4577-ad4d-c3b8b09ae780",
              "parentUUID": "347489a2-a978-4a80-8fd4-10a8202a5d10",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 807,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "85222c61-f227-4fcd-83f9-5f8a355960b1",
              "parentUUID": "347489a2-a978-4a80-8fd4-10a8202a5d10",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 5185,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '2500'.",
                "estack": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '2500'.\n    at cypressErr (http://localhost:53279/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:53279/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:53279/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:53279/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:53279/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:53279/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:53279/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:53279/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:53279/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:53279/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:53279/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:53279/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:53279/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "89c56458-b288-4422-9a01-4a1d05e48152",
              "parentUUID": "347489a2-a978-4a80-8fd4-10a8202a5d10",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "85222c61-f227-4fcd-83f9-5f8a355960b1"
          ],
          "failures": [
            "2f6407a2-fbfb-4577-ad4d-c3b8b09ae780",
            "89c56458-b288-4422-9a01-4a1d05e48152"
          ],
          "pending": [],
          "skipped": [],
          "duration": 11321,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b2d18c5d-510c-417f-be35-322847f79800",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 1410,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {},
              "uuid": "72caf684-938d-4b58-b251-6888879fc978",
              "parentUUID": "b2d18c5d-510c-417f-be35-322847f79800",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 1097,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {},
              "uuid": "fb36391d-f523-4868-8bca-0991c5dc0cb8",
              "parentUUID": "b2d18c5d-510c-417f-be35-322847f79800",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "72caf684-938d-4b58-b251-6888879fc978",
            "fb36391d-f523-4868-8bca-0991c5dc0cb8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2507,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}