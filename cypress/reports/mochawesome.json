{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 29,
    "pending": 0,
    "failures": 12,
    "start": "2021-06-07T19:37:09.090Z",
    "end": "2021-06-07T19:38:30.442Z",
    "duration": 81352,
    "testsRegistered": 41,
    "passPercent": 70.73170731707317,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "d179db5a-8944-478b-ba4f-463c5c2f211c",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f76305bb-6adc-4eeb-bd5b-4b5e37692bc8",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 187,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "30c162d5-8a4a-4fec-848f-576f9a36f267",
              "parentUUID": "f76305bb-6adc-4eeb-bd5b-4b5e37692bc8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "30c162d5-8a4a-4fec-848f-576f9a36f267"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 187,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "297b586f-c56e-402d-bd4f-438d39e5f760",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "timedOut": null,
              "duration": 109,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');",
              "err": {},
              "uuid": "9364fc6b-58c2-4065-bfd9-947d20652e45",
              "parentUUID": "297b586f-c56e-402d-bd4f-438d39e5f760",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 141,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "1e73b660-6d44-4788-b22f-959112a60cad",
              "parentUUID": "297b586f-c56e-402d-bd4f-438d39e5f760",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 202,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "7d03b0d4-6770-4a80-92e9-ddafd7367a66",
              "parentUUID": "297b586f-c56e-402d-bd4f-438d39e5f760",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 183,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "29e93b1f-9676-42e1-a11c-d14c0ab22ab3",
              "parentUUID": "297b586f-c56e-402d-bd4f-438d39e5f760",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 203,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "f7df8adb-fe27-44a4-81e0-daa5903a4b7b",
              "parentUUID": "297b586f-c56e-402d-bd4f-438d39e5f760",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 128,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "bdd07c71-c50e-42aa-9317-5a5ad70a1aff",
              "parentUUID": "297b586f-c56e-402d-bd4f-438d39e5f760",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 111,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "bb8320c6-8f39-4c04-94f3-2c31fd028231",
              "parentUUID": "297b586f-c56e-402d-bd4f-438d39e5f760",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9364fc6b-58c2-4065-bfd9-947d20652e45",
            "1e73b660-6d44-4788-b22f-959112a60cad",
            "7d03b0d4-6770-4a80-92e9-ddafd7367a66",
            "29e93b1f-9676-42e1-a11c-d14c0ab22ab3",
            "f7df8adb-fe27-44a4-81e0-daa5903a4b7b",
            "bdd07c71-c50e-42aa-9317-5a5ad70a1aff",
            "bb8320c6-8f39-4c04-94f3-2c31fd028231"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1077,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c09b9a79-5c02-4bf7-a6ca-85ebb8f4ab5d",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 110,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "5a341c52-8d46-45f7-87c4-1bb45117129d",
              "parentUUID": "c09b9a79-5c02-4bf7-a6ca-85ebb8f4ab5d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 272,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "5c413482-eb04-4f0d-b4ca-a6f8e0a2889a",
              "parentUUID": "c09b9a79-5c02-4bf7-a6ca-85ebb8f4ab5d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5a341c52-8d46-45f7-87c4-1bb45117129d",
            "5c413482-eb04-4f0d-b4ca-a6f8e0a2889a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 382,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b2abf21c-c17e-4ce9-bb1c-975515961583",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 93,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "522f471d-f195-4fd0-a221-e5fabca4d3bc",
              "parentUUID": "b2abf21c-c17e-4ce9-bb1c-975515961583",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 159,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "c51af2b4-975f-4dfe-8184-803c4219fdc6",
              "parentUUID": "b2abf21c-c17e-4ce9-bb1c-975515961583",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 220,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "f1b36aab-6310-42db-b3c5-de0094004836",
              "parentUUID": "b2abf21c-c17e-4ce9-bb1c-975515961583",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 117,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "1f4d7a83-7251-4de2-a333-1b1fc91933a0",
              "parentUUID": "b2abf21c-c17e-4ce9-bb1c-975515961583",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "522f471d-f195-4fd0-a221-e5fabca4d3bc",
            "c51af2b4-975f-4dfe-8184-803c4219fdc6",
            "f1b36aab-6310-42db-b3c5-de0094004836",
            "1f4d7a83-7251-4de2-a333-1b1fc91933a0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 589,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c2106170-6ca7-400c-9685-9a313f262762",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 354,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "5b92e83f-9d08-45c1-9bfd-ee568aac7e58",
              "parentUUID": "c2106170-6ca7-400c-9685-9a313f262762",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 333,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "81ee10f6-12a5-43e6-b737-0cc4bc368d92",
              "parentUUID": "c2106170-6ca7-400c-9685-9a313f262762",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5b92e83f-9d08-45c1-9bfd-ee568aac7e58",
            "81ee10f6-12a5-43e6-b737-0cc4bc368d92"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 687,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "fcd3e2e8-3993-4d45-89a1-593b170bf15e",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 105,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "c2d65771-e128-4621-bc62-1f90dd08b24b",
              "parentUUID": "fcd3e2e8-3993-4d45-89a1-593b170bf15e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 142,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "9ca157c0-41df-4132-b528-daac9270c206",
              "parentUUID": "fcd3e2e8-3993-4d45-89a1-593b170bf15e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c2d65771-e128-4621-bc62-1f90dd08b24b",
            "9ca157c0-41df-4132-b528-daac9270c206"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 247,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "3946bb1e-2f20-42d5-b60d-2293dd04c47a",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 490,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "69bc7e1d-b90e-41ab-acf6-fa2252eef662",
              "parentUUID": "3946bb1e-2f20-42d5-b60d-2293dd04c47a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 8436,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "60bafb92-a0b7-4147-8a74-7cbb197bbf06",
              "parentUUID": "3946bb1e-2f20-42d5-b60d-2293dd04c47a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "69bc7e1d-b90e-41ab-acf6-fa2252eef662",
            "60bafb92-a0b7-4147-8a74-7cbb197bbf06"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8926,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "4e479eb3-e50d-4d23-aff9-ceb32d5a88ea",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2133,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "26c3f02a-a0f8-4d64-b8eb-63aafecd3b29",
              "parentUUID": "4e479eb3-e50d-4d23-aff9-ceb32d5a88ea",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 8411,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "1c2ec8ec-2bb8-4d4f-89bb-e261194db2a4",
              "parentUUID": "4e479eb3-e50d-4d23-aff9-ceb32d5a88ea",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 1612,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "9557ff0e-a9f8-4cb8-b9a5-2945418f965c",
              "parentUUID": "4e479eb3-e50d-4d23-aff9-ceb32d5a88ea",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "26c3f02a-a0f8-4d64-b8eb-63aafecd3b29",
            "1c2ec8ec-2bb8-4d4f-89bb-e261194db2a4",
            "9557ff0e-a9f8-4cb8-b9a5-2945418f965c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12156,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "807873d0-6abb-46ea-ac73-6f513bc250eb",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 161,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "8e6a2d2d-cbfc-4ae2-acb5-92844011ec59",
              "parentUUID": "807873d0-6abb-46ea-ac73-6f513bc250eb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 92,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "a730d01d-317e-4f4a-9e63-ffaec92a6940",
              "parentUUID": "807873d0-6abb-46ea-ac73-6f513bc250eb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 99,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "68b5df54-d09c-4d99-90da-13133dea4b6b",
              "parentUUID": "807873d0-6abb-46ea-ac73-6f513bc250eb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 2299,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "36370739-10e7-45fd-af49-ec32ddbe3e52",
              "parentUUID": "807873d0-6abb-46ea-ac73-6f513bc250eb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8e6a2d2d-cbfc-4ae2-acb5-92844011ec59",
            "a730d01d-317e-4f4a-9e63-ffaec92a6940",
            "68b5df54-d09c-4d99-90da-13133dea4b6b",
            "36370739-10e7-45fd-af49-ec32ddbe3e52"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2651,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d1ceb4b6-515e-4ce5-a7f4-c3bce8c1c856",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 4358,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:34521/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34521/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34521/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34521/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34521/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34521/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34521/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34521/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34521/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34521/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34521/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34521/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34521/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "18f0af9b-427e-4d54-b3ae-f0374deedda5",
              "parentUUID": "d1ceb4b6-515e-4ce5-a7f4-c3bce8c1c856",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 4394,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:34521/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34521/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34521/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34521/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34521/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34521/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34521/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34521/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34521/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34521/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34521/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34521/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34521/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "8ccbbeee-4a3c-492d-8346-3f18ec1ebb5d",
              "parentUUID": "d1ceb4b6-515e-4ce5-a7f4-c3bce8c1c856",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4336,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:34521/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34521/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34521/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34521/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34521/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34521/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34521/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34521/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34521/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34521/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34521/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34521/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34521/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "bc7f410e-00eb-40af-8943-c3524c39f4d1",
              "parentUUID": "d1ceb4b6-515e-4ce5-a7f4-c3bce8c1c856",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 4347,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:34521/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34521/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34521/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34521/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34521/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34521/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34521/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34521/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34521/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34521/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34521/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34521/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34521/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "a93ed938-9575-42bf-88f4-26fdc981ab27",
              "parentUUID": "d1ceb4b6-515e-4ce5-a7f4-c3bce8c1c856",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 4328,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:34521/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34521/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34521/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34521/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34521/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34521/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34521/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34521/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34521/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34521/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34521/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34521/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34521/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "2ba05977-26e7-4d96-b9ee-2321e9a80e40",
              "parentUUID": "d1ceb4b6-515e-4ce5-a7f4-c3bce8c1c856",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 4351,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:34521/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34521/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34521/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34521/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34521/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34521/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34521/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34521/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34521/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34521/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34521/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34521/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34521/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "3d8504b0-438d-4e56-9d9b-0a57a617afeb",
              "parentUUID": "d1ceb4b6-515e-4ce5-a7f4-c3bce8c1c856",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 4367,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:34521/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34521/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34521/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34521/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34521/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34521/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34521/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34521/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34521/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34521/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34521/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34521/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34521/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "fdb1cb2a-27b7-40ab-9be7-bae4fa7eb419",
              "parentUUID": "d1ceb4b6-515e-4ce5-a7f4-c3bce8c1c856",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4349,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:34521/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34521/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34521/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34521/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34521/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34521/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34521/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34521/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34521/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34521/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34521/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34521/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34521/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "9f72ec93-ab1e-4edc-b4d3-7ac618a497a2",
              "parentUUID": "d1ceb4b6-515e-4ce5-a7f4-c3bce8c1c856",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4328,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:34521/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34521/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34521/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34521/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34521/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34521/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34521/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34521/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34521/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34521/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34521/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34521/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34521/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "ac6e518f-cdc8-4be1-942b-1963933a118e",
              "parentUUID": "d1ceb4b6-515e-4ce5-a7f4-c3bce8c1c856",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "18f0af9b-427e-4d54-b3ae-f0374deedda5",
            "8ccbbeee-4a3c-492d-8346-3f18ec1ebb5d",
            "bc7f410e-00eb-40af-8943-c3524c39f4d1",
            "a93ed938-9575-42bf-88f4-26fdc981ab27",
            "2ba05977-26e7-4d96-b9ee-2321e9a80e40",
            "3d8504b0-438d-4e56-9d9b-0a57a617afeb",
            "fdb1cb2a-27b7-40ab-9be7-bae4fa7eb419",
            "9f72ec93-ab1e-4edc-b4d3-7ac618a497a2",
            "ac6e518f-cdc8-4be1-942b-1963933a118e"
          ],
          "pending": [],
          "skipped": [],
          "duration": 39158,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "39160b81-6700-48a5-9a5a-a45323e475ce",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 4393,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:34521/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34521/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34521/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34521/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34521/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34521/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34521/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34521/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34521/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34521/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34521/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34521/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34521/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "86a7da7d-64c4-4318-9589-eedc75c914fd",
              "parentUUID": "39160b81-6700-48a5-9a5a-a45323e475ce",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 4376,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:34521/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34521/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34521/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34521/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34521/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34521/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34521/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34521/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34521/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34521/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34521/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34521/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34521/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "7d770273-21cd-4b18-8196-e27b7f4159cf",
              "parentUUID": "39160b81-6700-48a5-9a5a-a45323e475ce",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 4357,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:34521/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34521/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34521/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34521/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34521/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34521/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34521/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34521/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34521/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34521/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34521/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34521/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34521/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "3f169db2-0b1c-4eef-a84e-082a554716aa",
              "parentUUID": "39160b81-6700-48a5-9a5a-a45323e475ce",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "86a7da7d-64c4-4318-9589-eedc75c914fd",
            "7d770273-21cd-4b18-8196-e27b7f4159cf",
            "3f169db2-0b1c-4eef-a84e-082a554716aa"
          ],
          "pending": [],
          "skipped": [],
          "duration": 13126,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "21d5caea-51e9-476e-8c04-b6d3b85e9bbc",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 632,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {},
              "uuid": "80e6f80c-a381-4ba5-90ee-e8452c5a67f5",
              "parentUUID": "21d5caea-51e9-476e-8c04-b6d3b85e9bbc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 524,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {},
              "uuid": "99896da8-99db-4c8b-b838-cd7161ad078c",
              "parentUUID": "21d5caea-51e9-476e-8c04-b6d3b85e9bbc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "80e6f80c-a381-4ba5-90ee-e8452c5a67f5",
            "99896da8-99db-4c8b-b838-cd7161ad078c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1156,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}