{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 27,
    "pending": 0,
    "failures": 14,
    "start": "2021-06-07T07:39:00.498Z",
    "end": "2021-06-07T07:40:22.261Z",
    "duration": 81763,
    "testsRegistered": 41,
    "passPercent": 65.85365853658537,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "376a9d1c-af66-463d-8d5a-45715d5d3def",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ee5c6264-f9fd-40c2-8406-4b8afb62e2a6",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 142,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "f2e0e155-6d2f-43c3-85ed-7c4e9724c8d6",
              "parentUUID": "ee5c6264-f9fd-40c2-8406-4b8afb62e2a6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f2e0e155-6d2f-43c3-85ed-7c4e9724c8d6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 142,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c0be1133-02a7-44d6-8398-15b6b124dbba",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "timedOut": null,
              "duration": 79,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');",
              "err": {},
              "uuid": "a8835fb5-2e32-4a24-81b9-6cc4dcb6b7e5",
              "parentUUID": "c0be1133-02a7-44d6-8398-15b6b124dbba",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 162,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "4ca4589d-8235-4425-b873-c50469e2c1df",
              "parentUUID": "c0be1133-02a7-44d6-8398-15b6b124dbba",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 118,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "2e8ad810-0723-42ed-b80a-a901cd79222f",
              "parentUUID": "c0be1133-02a7-44d6-8398-15b6b124dbba",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 159,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "a3650444-bbb7-4e87-99bb-ae1335a7bb2f",
              "parentUUID": "c0be1133-02a7-44d6-8398-15b6b124dbba",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 146,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "cc5167d2-ec3e-45a1-ba13-647648b36e2a",
              "parentUUID": "c0be1133-02a7-44d6-8398-15b6b124dbba",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 133,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "98e2e23d-cf17-45f3-8635-e0c60e21fccc",
              "parentUUID": "c0be1133-02a7-44d6-8398-15b6b124dbba",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 84,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "31b6b6fb-5461-43dc-b29d-f71385ff480e",
              "parentUUID": "c0be1133-02a7-44d6-8398-15b6b124dbba",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a8835fb5-2e32-4a24-81b9-6cc4dcb6b7e5",
            "4ca4589d-8235-4425-b873-c50469e2c1df",
            "2e8ad810-0723-42ed-b80a-a901cd79222f",
            "a3650444-bbb7-4e87-99bb-ae1335a7bb2f",
            "cc5167d2-ec3e-45a1-ba13-647648b36e2a",
            "98e2e23d-cf17-45f3-8635-e0c60e21fccc",
            "31b6b6fb-5461-43dc-b29d-f71385ff480e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 881,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "2402d90d-1e22-4137-ad76-2acdae012750",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 94,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "5b58050d-dc4a-4d41-8b4f-25999284295a",
              "parentUUID": "2402d90d-1e22-4137-ad76-2acdae012750",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 207,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "ce2598f2-0495-4946-99c6-3a3c8cac365c",
              "parentUUID": "2402d90d-1e22-4137-ad76-2acdae012750",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5b58050d-dc4a-4d41-8b4f-25999284295a",
            "ce2598f2-0495-4946-99c6-3a3c8cac365c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 301,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d1ec590d-e8ae-427f-80f1-b59623849587",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 81,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "f395629f-6957-43b0-b4eb-03d9a6067028",
              "parentUUID": "d1ec590d-e8ae-427f-80f1-b59623849587",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 140,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "e2c5a7ac-ce2d-4228-9aa2-5e1ce60fadeb",
              "parentUUID": "d1ec590d-e8ae-427f-80f1-b59623849587",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 147,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "40377afe-5385-41d8-8206-001e09b18649",
              "parentUUID": "d1ec590d-e8ae-427f-80f1-b59623849587",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 104,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "7d74fb47-cfbb-49f4-b9a9-f903ee3f5447",
              "parentUUID": "d1ec590d-e8ae-427f-80f1-b59623849587",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f395629f-6957-43b0-b4eb-03d9a6067028",
            "e2c5a7ac-ce2d-4228-9aa2-5e1ce60fadeb",
            "40377afe-5385-41d8-8206-001e09b18649",
            "7d74fb47-cfbb-49f4-b9a9-f903ee3f5447"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 472,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "80692377-6f0f-43fc-b94a-f76555abc823",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 263,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "bc062ff7-88c1-440a-9054-bbb3030f9394",
              "parentUUID": "80692377-6f0f-43fc-b94a-f76555abc823",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 231,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "b9df28d8-ec74-48da-9cc8-125a517f024a",
              "parentUUID": "80692377-6f0f-43fc-b94a-f76555abc823",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bc062ff7-88c1-440a-9054-bbb3030f9394",
            "b9df28d8-ec74-48da-9cc8-125a517f024a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 494,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "6851acae-f099-4b95-b32a-c0923d8e3c1c",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 97,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "9338df13-55d5-461b-8702-4b7db2ef6504",
              "parentUUID": "6851acae-f099-4b95-b32a-c0923d8e3c1c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 93,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "ccad690b-256d-454c-9f61-c0e1dc4086f7",
              "parentUUID": "6851acae-f099-4b95-b32a-c0923d8e3c1c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9338df13-55d5-461b-8702-4b7db2ef6504",
            "ccad690b-256d-454c-9f61-c0e1dc4086f7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 190,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "bcc44d17-4429-462b-a6fc-2ab41b6e8790",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 520,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "6dbd45b6-4437-435a-a6fa-49ddf3f4ebdf",
              "parentUUID": "bcc44d17-4429-462b-a6fc-2ab41b6e8790",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 9424,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "6bd20022-b48c-47cc-84ce-ddc54fe5e934",
              "parentUUID": "bcc44d17-4429-462b-a6fc-2ab41b6e8790",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6dbd45b6-4437-435a-a6fa-49ddf3f4ebdf",
            "6bd20022-b48c-47cc-84ce-ddc54fe5e934"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9944,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "4b2b7b66-a0c1-4202-b89e-17e51f3782e6",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2414,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "b8a4cc68-a394-449f-a816-bcb99f3cf677",
              "parentUUID": "4b2b7b66-a0c1-4202-b89e-17e51f3782e6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 9347,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "aea224b0-d8ca-4174-96f8-809b3bb54bc6",
              "parentUUID": "4b2b7b66-a0c1-4202-b89e-17e51f3782e6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 1513,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "6c840183-48f4-4802-9a45-ac817ef7be0f",
              "parentUUID": "4b2b7b66-a0c1-4202-b89e-17e51f3782e6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b8a4cc68-a394-449f-a816-bcb99f3cf677",
            "aea224b0-d8ca-4174-96f8-809b3bb54bc6",
            "6c840183-48f4-4802-9a45-ac817ef7be0f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 13274,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "82d2a0e1-5b24-4526-a6ad-fa8947b4c2fa",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 138,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "365cfbf2-cab8-4252-af8c-070a6da21361",
              "parentUUID": "82d2a0e1-5b24-4526-a6ad-fa8947b4c2fa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 96,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "0b569f43-d343-4f78-b98f-206a9cb6c3ee",
              "parentUUID": "82d2a0e1-5b24-4526-a6ad-fa8947b4c2fa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 80,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "ef622332-8d8b-47f4-a296-8a9334af96bd",
              "parentUUID": "82d2a0e1-5b24-4526-a6ad-fa8947b4c2fa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 2511,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "ca575a29-0fde-45eb-8c6c-f27b68a70403",
              "parentUUID": "82d2a0e1-5b24-4526-a6ad-fa8947b4c2fa",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "365cfbf2-cab8-4252-af8c-070a6da21361",
            "0b569f43-d343-4f78-b98f-206a9cb6c3ee",
            "ef622332-8d8b-47f4-a296-8a9334af96bd",
            "ca575a29-0fde-45eb-8c6c-f27b68a70403"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2825,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "5f0ac7c6-7813-4b51-80a1-1a2eb02aaa2e",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 4349,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:45801/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:45801/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:45801/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:45801/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:45801/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:45801/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45801/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45801/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:45801/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:45801/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45801/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45801/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45801/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "2b2cbfd8-e40e-4b53-9114-9c5e3bd98a0c",
              "parentUUID": "5f0ac7c6-7813-4b51-80a1-1a2eb02aaa2e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 4263,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:45801/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:45801/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:45801/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:45801/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:45801/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:45801/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45801/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45801/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:45801/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:45801/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45801/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45801/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45801/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "7f302376-a666-49b6-a2ab-6476f72aac35",
              "parentUUID": "5f0ac7c6-7813-4b51-80a1-1a2eb02aaa2e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4270,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:45801/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:45801/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:45801/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:45801/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:45801/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:45801/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45801/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45801/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:45801/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:45801/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45801/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45801/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45801/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "a0b8f398-3866-4670-9936-5a063a5d98ff",
              "parentUUID": "5f0ac7c6-7813-4b51-80a1-1a2eb02aaa2e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 4285,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:45801/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:45801/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:45801/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:45801/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:45801/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:45801/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45801/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45801/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:45801/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:45801/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45801/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45801/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45801/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "a93a32cf-dead-4b33-8a14-58a7b6ade274",
              "parentUUID": "5f0ac7c6-7813-4b51-80a1-1a2eb02aaa2e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 4289,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:45801/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:45801/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:45801/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:45801/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:45801/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:45801/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45801/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45801/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:45801/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:45801/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45801/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45801/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45801/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "9bb89a8f-e125-4f0b-959b-b53b17ec3293",
              "parentUUID": "5f0ac7c6-7813-4b51-80a1-1a2eb02aaa2e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 4250,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:45801/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:45801/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:45801/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:45801/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:45801/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:45801/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45801/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45801/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:45801/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:45801/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45801/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45801/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45801/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "ec53d535-35cb-4968-9363-bb2c6a60a1ee",
              "parentUUID": "5f0ac7c6-7813-4b51-80a1-1a2eb02aaa2e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 4303,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:45801/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:45801/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:45801/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:45801/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:45801/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:45801/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45801/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45801/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:45801/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:45801/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45801/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45801/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45801/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "ec6d23b5-81e6-4396-9682-4f4d8a67a2e5",
              "parentUUID": "5f0ac7c6-7813-4b51-80a1-1a2eb02aaa2e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4308,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:45801/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:45801/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:45801/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:45801/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:45801/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:45801/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45801/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45801/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:45801/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:45801/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45801/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45801/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45801/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "d4a4c11e-be52-4c4f-aa17-e3a611847327",
              "parentUUID": "5f0ac7c6-7813-4b51-80a1-1a2eb02aaa2e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4291,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:45801/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:45801/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:45801/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:45801/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:45801/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:45801/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45801/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45801/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:45801/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:45801/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45801/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45801/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45801/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "fdc6aca6-1afa-4255-a656-8165354c3640",
              "parentUUID": "5f0ac7c6-7813-4b51-80a1-1a2eb02aaa2e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "2b2cbfd8-e40e-4b53-9114-9c5e3bd98a0c",
            "7f302376-a666-49b6-a2ab-6476f72aac35",
            "a0b8f398-3866-4670-9936-5a063a5d98ff",
            "a93a32cf-dead-4b33-8a14-58a7b6ade274",
            "9bb89a8f-e125-4f0b-959b-b53b17ec3293",
            "ec53d535-35cb-4968-9363-bb2c6a60a1ee",
            "ec6d23b5-81e6-4396-9682-4f4d8a67a2e5",
            "d4a4c11e-be52-4c4f-aa17-e3a611847327",
            "fdc6aca6-1afa-4255-a656-8165354c3640"
          ],
          "pending": [],
          "skipped": [],
          "duration": 38608,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e439e431-5e0e-40f6-9e3d-e56a80c65543",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 4359,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:45801/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:45801/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:45801/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:45801/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:45801/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:45801/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45801/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45801/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:45801/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:45801/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45801/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45801/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45801/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "3b5bd025-5af4-490d-aee0-2f7aa7c95a65",
              "parentUUID": "e439e431-5e0e-40f6-9e3d-e56a80c65543",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 4297,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:45801/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:45801/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:45801/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:45801/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:45801/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:45801/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45801/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45801/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:45801/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:45801/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45801/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45801/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45801/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "18cad024-3771-4488-a702-235e2e73fbc9",
              "parentUUID": "e439e431-5e0e-40f6-9e3d-e56a80c65543",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 4356,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:45801/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:45801/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:45801/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:45801/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:45801/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:45801/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45801/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45801/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:45801/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:45801/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45801/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45801/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45801/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "423b4334-d840-43b8-bafe-08de7b0194b7",
              "parentUUID": "e439e431-5e0e-40f6-9e3d-e56a80c65543",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "3b5bd025-5af4-490d-aee0-2f7aa7c95a65",
            "18cad024-3771-4488-a702-235e2e73fbc9",
            "423b4334-d840-43b8-bafe-08de7b0194b7"
          ],
          "pending": [],
          "skipped": [],
          "duration": 13012,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "2973e537-a415-426b-9a2f-55d3710e70dd",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 374,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:45801/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:45801/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:45801/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:45801/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:45801/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:45801/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:45801/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:45801/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45801/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45801/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:45801/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45801/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45801/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45801/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "f6cd9359-e6bd-43fe-9f68-72ba75e44d30",
              "parentUUID": "2973e537-a415-426b-9a2f-55d3710e70dd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 366,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:45801/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:45801/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:45801/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:45801/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:45801/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:45801/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:45801/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:45801/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45801/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45801/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:45801/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45801/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45801/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45801/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "c63a538d-e0a5-4626-8226-2987534b54ab",
              "parentUUID": "2973e537-a415-426b-9a2f-55d3710e70dd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "f6cd9359-e6bd-43fe-9f68-72ba75e44d30",
            "c63a538d-e0a5-4626-8226-2987534b54ab"
          ],
          "pending": [],
          "skipped": [],
          "duration": 740,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}