{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 27,
    "pending": 0,
    "failures": 14,
    "start": "2021-06-07T18:57:58.758Z",
    "end": "2021-06-07T18:59:23.081Z",
    "duration": 84323,
    "testsRegistered": 41,
    "passPercent": 65.85365853658537,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "f3a9ee6a-9f08-46ec-97bb-f93344d1c478",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "54179a9d-d10c-4b21-9154-54a69f85c796",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 341,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "e03e56a5-a6e4-4f91-a3f9-94ef0501cfd7",
              "parentUUID": "54179a9d-d10c-4b21-9154-54a69f85c796",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e03e56a5-a6e4-4f91-a3f9-94ef0501cfd7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 341,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f09b0a80-9417-4857-9e7e-b615bce09e39",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "timedOut": null,
              "duration": 143,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');",
              "err": {},
              "uuid": "71cd4734-71aa-4030-b69c-de04a65f7437",
              "parentUUID": "f09b0a80-9417-4857-9e7e-b615bce09e39",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 229,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "666ac722-fbda-45c0-8565-ee25bd8fde15",
              "parentUUID": "f09b0a80-9417-4857-9e7e-b615bce09e39",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 219,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "c9c2cb75-f4b3-4681-813f-ade443a715aa",
              "parentUUID": "f09b0a80-9417-4857-9e7e-b615bce09e39",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 206,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "75d21797-4676-413b-8c73-f7790baa2c0d",
              "parentUUID": "f09b0a80-9417-4857-9e7e-b615bce09e39",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 137,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "9012fd4a-9ee2-4fa0-bab1-747b6ff7c950",
              "parentUUID": "f09b0a80-9417-4857-9e7e-b615bce09e39",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 130,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "6160afb9-1d8f-4610-a0d4-b6e33ec99944",
              "parentUUID": "f09b0a80-9417-4857-9e7e-b615bce09e39",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 99,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "291413b0-863e-4cec-9b06-5a41799d2799",
              "parentUUID": "f09b0a80-9417-4857-9e7e-b615bce09e39",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "71cd4734-71aa-4030-b69c-de04a65f7437",
            "666ac722-fbda-45c0-8565-ee25bd8fde15",
            "c9c2cb75-f4b3-4681-813f-ade443a715aa",
            "75d21797-4676-413b-8c73-f7790baa2c0d",
            "9012fd4a-9ee2-4fa0-bab1-747b6ff7c950",
            "6160afb9-1d8f-4610-a0d4-b6e33ec99944",
            "291413b0-863e-4cec-9b06-5a41799d2799"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1163,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "7ac75fc8-d4bb-44fd-81d7-2965219f2c16",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 123,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "280eef94-a65a-49f0-8f79-a1d159c1a505",
              "parentUUID": "7ac75fc8-d4bb-44fd-81d7-2965219f2c16",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 254,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "3af50582-bb11-490b-9e2a-8f9088909b45",
              "parentUUID": "7ac75fc8-d4bb-44fd-81d7-2965219f2c16",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "280eef94-a65a-49f0-8f79-a1d159c1a505",
            "3af50582-bb11-490b-9e2a-8f9088909b45"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 377,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "146ec62b-a35a-49fc-9366-43295c51857e",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 141,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "a524d5fe-ef42-481d-8570-ca7e865c24bd",
              "parentUUID": "146ec62b-a35a-49fc-9366-43295c51857e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 207,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "790c4d40-733e-4b77-89c1-08d0c9df1eb3",
              "parentUUID": "146ec62b-a35a-49fc-9366-43295c51857e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 252,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "f9259419-de5f-4490-b95a-651ac3cafccf",
              "parentUUID": "146ec62b-a35a-49fc-9366-43295c51857e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 115,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "e1f6b3ad-01d4-4abd-9795-b03ec3350bd1",
              "parentUUID": "146ec62b-a35a-49fc-9366-43295c51857e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a524d5fe-ef42-481d-8570-ca7e865c24bd",
            "790c4d40-733e-4b77-89c1-08d0c9df1eb3",
            "f9259419-de5f-4490-b95a-651ac3cafccf",
            "e1f6b3ad-01d4-4abd-9795-b03ec3350bd1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 715,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "2d808fbe-b6b6-407b-8dec-b648ae202b88",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 359,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "f7b18882-1953-4b21-b23f-58c7ca4092b1",
              "parentUUID": "2d808fbe-b6b6-407b-8dec-b648ae202b88",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 357,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "0733000a-018e-46ec-b813-f82a27b50714",
              "parentUUID": "2d808fbe-b6b6-407b-8dec-b648ae202b88",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f7b18882-1953-4b21-b23f-58c7ca4092b1",
            "0733000a-018e-46ec-b813-f82a27b50714"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 716,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "aa6e4d80-2c43-4ea0-9aab-9b4bb23c28bf",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 130,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "f3c3b086-fc2e-4eff-821c-03c92442d77c",
              "parentUUID": "aa6e4d80-2c43-4ea0-9aab-9b4bb23c28bf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 98,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "9c876ed6-0d8d-4321-8cd8-20b5aeed8045",
              "parentUUID": "aa6e4d80-2c43-4ea0-9aab-9b4bb23c28bf",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f3c3b086-fc2e-4eff-821c-03c92442d77c",
            "9c876ed6-0d8d-4321-8cd8-20b5aeed8045"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 228,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "71387c80-5a8b-4223-913c-bdb232fd2918",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 512,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "88d52452-3674-4a14-976d-033c96bb2dbb",
              "parentUUID": "71387c80-5a8b-4223-913c-bdb232fd2918",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 9058,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "24fe6639-7219-4d34-947d-e0170518e796",
              "parentUUID": "71387c80-5a8b-4223-913c-bdb232fd2918",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "88d52452-3674-4a14-976d-033c96bb2dbb",
            "24fe6639-7219-4d34-947d-e0170518e796"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9570,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "53c4cf86-1069-4b33-a5b1-5ef8ae18db42",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2339,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "903c7b42-d087-435a-a82d-f19077abb578",
              "parentUUID": "53c4cf86-1069-4b33-a5b1-5ef8ae18db42",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 8976,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "680614cf-0a1f-4812-9972-776cc97b8d6b",
              "parentUUID": "53c4cf86-1069-4b33-a5b1-5ef8ae18db42",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 2327,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "1f1be66e-acaf-4691-a18a-8aae11e3b52f",
              "parentUUID": "53c4cf86-1069-4b33-a5b1-5ef8ae18db42",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "903c7b42-d087-435a-a82d-f19077abb578",
            "680614cf-0a1f-4812-9972-776cc97b8d6b",
            "1f1be66e-acaf-4691-a18a-8aae11e3b52f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 13642,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "5900d115-d53d-4d1a-81bf-a9175ac03997",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 173,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "d8eb095e-9ded-4713-9158-830237e1b6e5",
              "parentUUID": "5900d115-d53d-4d1a-81bf-a9175ac03997",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 132,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "a7b5bf5e-33b1-4082-86aa-b7a64ead7f9b",
              "parentUUID": "5900d115-d53d-4d1a-81bf-a9175ac03997",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 124,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "e586131d-2765-4259-bb28-ed77390a3785",
              "parentUUID": "5900d115-d53d-4d1a-81bf-a9175ac03997",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 2500,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "6ac4d2a1-3afe-4935-9010-779e359bc7a3",
              "parentUUID": "5900d115-d53d-4d1a-81bf-a9175ac03997",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d8eb095e-9ded-4713-9158-830237e1b6e5",
            "a7b5bf5e-33b1-4082-86aa-b7a64ead7f9b",
            "e586131d-2765-4259-bb28-ed77390a3785",
            "6ac4d2a1-3afe-4935-9010-779e359bc7a3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2929,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "3932ae9e-dd19-46bf-8e2f-8aecae62ac00",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 4402,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:35789/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35789/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35789/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35789/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35789/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35789/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35789/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35789/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35789/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35789/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35789/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35789/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35789/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "6619420c-66e9-49aa-8dda-08f7f7ad54c5",
              "parentUUID": "3932ae9e-dd19-46bf-8e2f-8aecae62ac00",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 4379,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:35789/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35789/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35789/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35789/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35789/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35789/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35789/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35789/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35789/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35789/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35789/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35789/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35789/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "aec440b7-078f-48d1-98fe-4e29679b9c18",
              "parentUUID": "3932ae9e-dd19-46bf-8e2f-8aecae62ac00",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4387,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:35789/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35789/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35789/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35789/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35789/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35789/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35789/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35789/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35789/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35789/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35789/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35789/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35789/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "015979e9-2943-488a-868a-008e72d2b7bd",
              "parentUUID": "3932ae9e-dd19-46bf-8e2f-8aecae62ac00",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 4376,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:35789/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35789/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35789/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35789/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35789/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35789/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35789/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35789/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35789/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35789/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35789/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35789/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35789/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "4ac2b72d-03cb-415e-8ddf-66c64ebb014a",
              "parentUUID": "3932ae9e-dd19-46bf-8e2f-8aecae62ac00",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 4355,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:35789/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35789/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35789/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35789/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35789/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35789/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35789/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35789/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35789/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35789/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35789/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35789/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35789/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "6b7b43f8-9ff5-4a32-ae18-b1f3fc085477",
              "parentUUID": "3932ae9e-dd19-46bf-8e2f-8aecae62ac00",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 4343,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:35789/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35789/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35789/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35789/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35789/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35789/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35789/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35789/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35789/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35789/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35789/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35789/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35789/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "d971cd3a-b71a-416d-beb3-b58ca3e369c1",
              "parentUUID": "3932ae9e-dd19-46bf-8e2f-8aecae62ac00",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 4364,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:35789/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35789/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35789/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35789/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35789/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35789/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35789/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35789/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35789/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35789/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35789/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35789/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35789/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "01deda75-eab0-4ab8-b586-ff757da8630f",
              "parentUUID": "3932ae9e-dd19-46bf-8e2f-8aecae62ac00",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4391,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:35789/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35789/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35789/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35789/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35789/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35789/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35789/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35789/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35789/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35789/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35789/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35789/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35789/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "011b53a0-eb80-452b-80a4-fbdf836eeded",
              "parentUUID": "3932ae9e-dd19-46bf-8e2f-8aecae62ac00",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4377,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:35789/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35789/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35789/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35789/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35789/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35789/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35789/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35789/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35789/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35789/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35789/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35789/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35789/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "47e47ea3-3eed-4ecb-ba6f-4cc4b38a7028",
              "parentUUID": "3932ae9e-dd19-46bf-8e2f-8aecae62ac00",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "6619420c-66e9-49aa-8dda-08f7f7ad54c5",
            "aec440b7-078f-48d1-98fe-4e29679b9c18",
            "015979e9-2943-488a-868a-008e72d2b7bd",
            "4ac2b72d-03cb-415e-8ddf-66c64ebb014a",
            "6b7b43f8-9ff5-4a32-ae18-b1f3fc085477",
            "d971cd3a-b71a-416d-beb3-b58ca3e369c1",
            "01deda75-eab0-4ab8-b586-ff757da8630f",
            "011b53a0-eb80-452b-80a4-fbdf836eeded",
            "47e47ea3-3eed-4ecb-ba6f-4cc4b38a7028"
          ],
          "pending": [],
          "skipped": [],
          "duration": 39374,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "18a63a06-42c5-4c34-9d3f-ce0270a0688b",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 4407,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:35789/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35789/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35789/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35789/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35789/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35789/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35789/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35789/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35789/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35789/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35789/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35789/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35789/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "954f7cfc-90ce-4952-82c5-5b54ab6e66e6",
              "parentUUID": "18a63a06-42c5-4c34-9d3f-ce0270a0688b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 4371,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:35789/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35789/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35789/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35789/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35789/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35789/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35789/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35789/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35789/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35789/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35789/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35789/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35789/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "19921637-147d-4c01-9e2d-9a4a0960bc03",
              "parentUUID": "18a63a06-42c5-4c34-9d3f-ce0270a0688b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 4362,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:35789/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35789/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35789/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35789/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35789/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35789/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35789/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35789/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35789/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35789/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35789/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35789/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35789/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "9c24fd22-cd84-4774-9bc2-b077591f6d9a",
              "parentUUID": "18a63a06-42c5-4c34-9d3f-ce0270a0688b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "954f7cfc-90ce-4952-82c5-5b54ab6e66e6",
            "19921637-147d-4c01-9e2d-9a4a0960bc03",
            "9c24fd22-cd84-4774-9bc2-b077591f6d9a"
          ],
          "pending": [],
          "skipped": [],
          "duration": 13140,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "3d6ab989-580c-4e15-87fc-0d3e8ab451f4",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 504,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:35789/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:35789/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:35789/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:35789/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:35789/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:35789/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:35789/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:35789/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35789/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35789/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:35789/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35789/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35789/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35789/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "ea8c6b3f-3415-452e-a1d6-91e8a705dcea",
              "parentUUID": "3d6ab989-580c-4e15-87fc-0d3e8ab451f4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 491,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:35789/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:35789/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:35789/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:35789/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:35789/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:35789/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:35789/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:35789/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35789/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35789/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:35789/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35789/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35789/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35789/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "50a0618b-803b-49ab-a4f2-df0981f1b015",
              "parentUUID": "3d6ab989-580c-4e15-87fc-0d3e8ab451f4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "ea8c6b3f-3415-452e-a1d6-91e8a705dcea",
            "50a0618b-803b-49ab-a4f2-df0981f1b015"
          ],
          "pending": [],
          "skipped": [],
          "duration": 995,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}