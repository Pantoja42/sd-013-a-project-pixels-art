{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 29,
    "pending": 0,
    "failures": 12,
    "start": "2021-06-29T03:45:15.163Z",
    "end": "2021-06-29T03:46:43.275Z",
    "duration": 88112,
    "testsRegistered": 41,
    "passPercent": 70.73170731707317,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "f04cca44-c5ad-4c84-a53d-3e972429ae4e",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "6dd11427-09ea-41e6-9cf6-2d7719e30da0",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 515,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "de28b00a-4140-4b33-8ca2-1dab1a0f4d0d",
              "parentUUID": "6dd11427-09ea-41e6-9cf6-2d7719e30da0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "de28b00a-4140-4b33-8ca2-1dab1a0f4d0d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 515,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "365b2fdd-0cdf-4f39-a4c9-d0e453959bea",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "timedOut": null,
              "duration": 167,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');",
              "err": {},
              "uuid": "fc07b723-c362-446b-b4a4-4a2aeeb95924",
              "parentUUID": "365b2fdd-0cdf-4f39-a4c9-d0e453959bea",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 401,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "971f2ff5-94dd-4989-b663-c8a56ecd1ff6",
              "parentUUID": "365b2fdd-0cdf-4f39-a4c9-d0e453959bea",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 437,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "f5ad2daa-d970-4539-b411-9f4c30ac70c1",
              "parentUUID": "365b2fdd-0cdf-4f39-a4c9-d0e453959bea",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 429,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "5acf3944-8a22-48fd-8139-1a978e5cec6f",
              "parentUUID": "365b2fdd-0cdf-4f39-a4c9-d0e453959bea",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 195,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "a5f4a592-ba5a-4450-bf24-0b1cfa1d3fda",
              "parentUUID": "365b2fdd-0cdf-4f39-a4c9-d0e453959bea",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 242,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "708aa593-b2a2-44da-8916-158f9e43e91c",
              "parentUUID": "365b2fdd-0cdf-4f39-a4c9-d0e453959bea",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 147,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "91571752-aa7f-4200-aa8e-bd1d19ca194d",
              "parentUUID": "365b2fdd-0cdf-4f39-a4c9-d0e453959bea",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fc07b723-c362-446b-b4a4-4a2aeeb95924",
            "971f2ff5-94dd-4989-b663-c8a56ecd1ff6",
            "f5ad2daa-d970-4539-b411-9f4c30ac70c1",
            "5acf3944-8a22-48fd-8139-1a978e5cec6f",
            "a5f4a592-ba5a-4450-bf24-0b1cfa1d3fda",
            "708aa593-b2a2-44da-8916-158f9e43e91c",
            "91571752-aa7f-4200-aa8e-bd1d19ca194d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2018,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "99764a73-967c-41d4-aa60-1e854ef5ec83",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 143,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "a1e8e104-c782-4908-9f13-a8924293be5d",
              "parentUUID": "99764a73-967c-41d4-aa60-1e854ef5ec83",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 332,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "28121749-9e00-41b3-bb7c-b156a2216a0a",
              "parentUUID": "99764a73-967c-41d4-aa60-1e854ef5ec83",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a1e8e104-c782-4908-9f13-a8924293be5d",
            "28121749-9e00-41b3-bb7c-b156a2216a0a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 475,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "1f84ebbc-fcce-4ccd-b471-fe5a91cda45e",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 261,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "872575f5-2f2e-4e6d-960a-b948d7cf81e6",
              "parentUUID": "1f84ebbc-fcce-4ccd-b471-fe5a91cda45e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 268,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "013c26e1-5ec3-42b0-825c-ceab5cf315ce",
              "parentUUID": "1f84ebbc-fcce-4ccd-b471-fe5a91cda45e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 346,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "c6bdf330-6fde-48b7-b774-2546fc49717b",
              "parentUUID": "1f84ebbc-fcce-4ccd-b471-fe5a91cda45e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 147,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "b6777303-abd5-420a-a40f-071e1c68e8a6",
              "parentUUID": "1f84ebbc-fcce-4ccd-b471-fe5a91cda45e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "872575f5-2f2e-4e6d-960a-b948d7cf81e6",
            "013c26e1-5ec3-42b0-825c-ceab5cf315ce",
            "c6bdf330-6fde-48b7-b774-2546fc49717b",
            "b6777303-abd5-420a-a40f-071e1c68e8a6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1022,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "1519b68c-6375-458e-9fb3-825c74917be8",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 486,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "657cdd06-d6ff-47cf-ab67-ec9cf3c5e20b",
              "parentUUID": "1519b68c-6375-458e-9fb3-825c74917be8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 498,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "9ae9c8df-329a-4a4c-b0a3-c8ee099057a8",
              "parentUUID": "1519b68c-6375-458e-9fb3-825c74917be8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "657cdd06-d6ff-47cf-ab67-ec9cf3c5e20b",
            "9ae9c8df-329a-4a4c-b0a3-c8ee099057a8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 984,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e21b3cbe-d03e-47e1-8086-adfcae3f516c",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 187,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "b43e7d23-fe0e-420a-90ad-6cf23d2132c3",
              "parentUUID": "e21b3cbe-d03e-47e1-8086-adfcae3f516c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 175,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "f3492cc7-1aa1-4776-a8dc-5ed802ce800c",
              "parentUUID": "e21b3cbe-d03e-47e1-8086-adfcae3f516c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b43e7d23-fe0e-420a-90ad-6cf23d2132c3",
            "f3492cc7-1aa1-4776-a8dc-5ed802ce800c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 362,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "4de79094-a48b-4ad0-8169-95e393b0dadd",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 537,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "b92c3f2d-1597-4102-b806-509b4adc35c6",
              "parentUUID": "4de79094-a48b-4ad0-8169-95e393b0dadd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 8326,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "64af8cf7-9f5c-4ea6-bc2d-b6ad522880e5",
              "parentUUID": "4de79094-a48b-4ad0-8169-95e393b0dadd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b92c3f2d-1597-4102-b806-509b4adc35c6",
            "64af8cf7-9f5c-4ea6-bc2d-b6ad522880e5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8863,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "fe7bc384-6cf5-4276-9310-49beecd0a5e2",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2197,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "f96e4284-97fb-4147-80d1-381e1afdd90f",
              "parentUUID": "fe7bc384-6cf5-4276-9310-49beecd0a5e2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 8376,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "cea3dcc8-6b78-4894-ac95-14a42f0bcb8d",
              "parentUUID": "fe7bc384-6cf5-4276-9310-49beecd0a5e2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 1527,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "027820e0-791e-455e-ad27-110a7d51003e",
              "parentUUID": "fe7bc384-6cf5-4276-9310-49beecd0a5e2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f96e4284-97fb-4147-80d1-381e1afdd90f",
            "cea3dcc8-6b78-4894-ac95-14a42f0bcb8d",
            "027820e0-791e-455e-ad27-110a7d51003e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12100,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "cc93dc5f-fb66-4d77-8700-19ececfedef1",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 223,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "d4ad16a3-5cd0-4c6f-94b3-ec7e4ac59662",
              "parentUUID": "cc93dc5f-fb66-4d77-8700-19ececfedef1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 193,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "bb973529-dc63-41dc-bc0f-aa04b69b7b92",
              "parentUUID": "cc93dc5f-fb66-4d77-8700-19ececfedef1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 192,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "9dc81a28-4385-4f7a-bd23-5cfa94df2012",
              "parentUUID": "cc93dc5f-fb66-4d77-8700-19ececfedef1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 2326,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "44e8fc70-08da-4c0f-a4d6-08b9605055de",
              "parentUUID": "cc93dc5f-fb66-4d77-8700-19ececfedef1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d4ad16a3-5cd0-4c6f-94b3-ec7e4ac59662",
            "bb973529-dc63-41dc-bc0f-aa04b69b7b92",
            "9dc81a28-4385-4f7a-bd23-5cfa94df2012",
            "44e8fc70-08da-4c0f-a4d6-08b9605055de"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2934,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "62086ac9-0d15-469a-981f-844cd8ed0ee4",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 4614,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:64347/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:64347/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:64347/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:64347/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:64347/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:64347/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:64347/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:64347/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:64347/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:64347/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:64347/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:64347/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:64347/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "7f5a6b06-b90f-43e7-adda-c2f059c067ef",
              "parentUUID": "62086ac9-0d15-469a-981f-844cd8ed0ee4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 4549,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:64347/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:64347/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:64347/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:64347/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:64347/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:64347/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:64347/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:64347/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:64347/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:64347/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:64347/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:64347/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:64347/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "4d15bc4d-ea58-48cc-9187-f9a5718a5f28",
              "parentUUID": "62086ac9-0d15-469a-981f-844cd8ed0ee4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4848,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:64347/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:64347/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:64347/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:64347/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:64347/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:64347/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:64347/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:64347/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:64347/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:64347/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:64347/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:64347/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:64347/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "bcd1348e-9598-414f-b8f9-d7df6f269087",
              "parentUUID": "62086ac9-0d15-469a-981f-844cd8ed0ee4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 4700,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:64347/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:64347/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:64347/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:64347/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:64347/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:64347/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:64347/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:64347/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:64347/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:64347/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:64347/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:64347/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:64347/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "02ea7a79-fa10-40a9-bcb5-f16d78a51669",
              "parentUUID": "62086ac9-0d15-469a-981f-844cd8ed0ee4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 4594,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:64347/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:64347/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:64347/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:64347/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:64347/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:64347/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:64347/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:64347/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:64347/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:64347/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:64347/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:64347/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:64347/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "c7a7fee9-1c12-41b3-baa6-d534d6897f54",
              "parentUUID": "62086ac9-0d15-469a-981f-844cd8ed0ee4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 4629,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:64347/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:64347/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:64347/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:64347/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:64347/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:64347/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:64347/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:64347/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:64347/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:64347/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:64347/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:64347/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:64347/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "20b7a242-3bbe-4873-985b-5d99e39ac70e",
              "parentUUID": "62086ac9-0d15-469a-981f-844cd8ed0ee4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 4630,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:64347/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:64347/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:64347/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:64347/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:64347/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:64347/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:64347/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:64347/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:64347/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:64347/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:64347/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:64347/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:64347/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "38b47e53-ce41-41b7-97c2-9e0f45b645a8",
              "parentUUID": "62086ac9-0d15-469a-981f-844cd8ed0ee4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4654,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:64347/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:64347/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:64347/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:64347/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:64347/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:64347/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:64347/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:64347/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:64347/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:64347/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:64347/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:64347/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:64347/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "b8b3f038-017d-43d0-90a9-b0bc86f6de4c",
              "parentUUID": "62086ac9-0d15-469a-981f-844cd8ed0ee4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4567,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:64347/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:64347/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:64347/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:64347/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:64347/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:64347/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:64347/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:64347/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:64347/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:64347/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:64347/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:64347/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:64347/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "aa7889bb-023c-4e97-999f-a5dc4f398d42",
              "parentUUID": "62086ac9-0d15-469a-981f-844cd8ed0ee4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "7f5a6b06-b90f-43e7-adda-c2f059c067ef",
            "4d15bc4d-ea58-48cc-9187-f9a5718a5f28",
            "bcd1348e-9598-414f-b8f9-d7df6f269087",
            "02ea7a79-fa10-40a9-bcb5-f16d78a51669",
            "c7a7fee9-1c12-41b3-baa6-d534d6897f54",
            "20b7a242-3bbe-4873-985b-5d99e39ac70e",
            "38b47e53-ce41-41b7-97c2-9e0f45b645a8",
            "b8b3f038-017d-43d0-90a9-b0bc86f6de4c",
            "aa7889bb-023c-4e97-999f-a5dc4f398d42"
          ],
          "pending": [],
          "skipped": [],
          "duration": 41785,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "fca4d1a9-ecd2-4987-8e70-cb0142517cf8",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 4553,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:64347/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:64347/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:64347/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:64347/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:64347/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:64347/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:64347/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:64347/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:64347/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:64347/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:64347/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:64347/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:64347/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "e80af8e0-13c4-44c8-a1d2-1817160fffcc",
              "parentUUID": "fca4d1a9-ecd2-4987-8e70-cb0142517cf8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 4843,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:64347/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:64347/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:64347/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:64347/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:64347/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:64347/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:64347/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:64347/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:64347/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:64347/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:64347/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:64347/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:64347/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "ea0b17d0-ea0d-4b6c-a80d-c03baf9efeff",
              "parentUUID": "fca4d1a9-ecd2-4987-8e70-cb0142517cf8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 4720,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:64347/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:64347/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:64347/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:64347/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:64347/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:64347/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:64347/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:64347/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:64347/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:64347/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:64347/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:64347/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:64347/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "e25ed87f-6535-4aa3-8d78-e44b54144898",
              "parentUUID": "fca4d1a9-ecd2-4987-8e70-cb0142517cf8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "e80af8e0-13c4-44c8-a1d2-1817160fffcc",
            "ea0b17d0-ea0d-4b6c-a80d-c03baf9efeff",
            "e25ed87f-6535-4aa3-8d78-e44b54144898"
          ],
          "pending": [],
          "skipped": [],
          "duration": 14116,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "29316ce7-d853-46ee-aafe-c6d08e438aba",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 756,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {},
              "uuid": "f06a4036-8f12-4ab1-ade6-3fad3a42567b",
              "parentUUID": "29316ce7-d853-46ee-aafe-c6d08e438aba",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 823,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {},
              "uuid": "57fbc4fb-3b2e-4952-b722-dc9b19b47218",
              "parentUUID": "29316ce7-d853-46ee-aafe-c6d08e438aba",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f06a4036-8f12-4ab1-ade6-3fad3a42567b",
            "57fbc4fb-3b2e-4952-b722-dc9b19b47218"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1579,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}