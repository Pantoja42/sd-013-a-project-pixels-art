{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 27,
    "pending": 0,
    "failures": 14,
    "start": "2021-06-02T00:52:26.334Z",
    "end": "2021-06-02T00:53:57.093Z",
    "duration": 90759,
    "testsRegistered": 41,
    "passPercent": 65.85365853658537,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "78fcc5e8-17b5-4b17-867f-f53bfa423b4e",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "306c724a-3cd7-40c2-b822-b29a36ac368b",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 498,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "168cd0ba-de3d-4f21-b1c1-c5688d560c6f",
              "parentUUID": "306c724a-3cd7-40c2-b822-b29a36ac368b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "168cd0ba-de3d-4f21-b1c1-c5688d560c6f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 498,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "0f9f76ec-3632-4480-afe6-793275807177",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "timedOut": null,
              "duration": 302,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');",
              "err": {},
              "uuid": "ef1f4fd8-3f59-4d03-8a36-cf025eaf7168",
              "parentUUID": "0f9f76ec-3632-4480-afe6-793275807177",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 361,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "96834355-f3c9-43f8-bbfa-c37c54ce548d",
              "parentUUID": "0f9f76ec-3632-4480-afe6-793275807177",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 338,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "8eb56d97-b95b-4740-b364-949286c2ea69",
              "parentUUID": "0f9f76ec-3632-4480-afe6-793275807177",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 258,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "079256e3-0e34-47d8-afd8-48182c4c1b96",
              "parentUUID": "0f9f76ec-3632-4480-afe6-793275807177",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 138,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "7dfc1140-b334-402a-ad90-cb14db447903",
              "parentUUID": "0f9f76ec-3632-4480-afe6-793275807177",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 191,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "87b68f97-c6f3-4f99-b4a1-90d459f651dd",
              "parentUUID": "0f9f76ec-3632-4480-afe6-793275807177",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 158,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "7adacbf9-1871-40da-b5e5-d21069ae5682",
              "parentUUID": "0f9f76ec-3632-4480-afe6-793275807177",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ef1f4fd8-3f59-4d03-8a36-cf025eaf7168",
            "96834355-f3c9-43f8-bbfa-c37c54ce548d",
            "8eb56d97-b95b-4740-b364-949286c2ea69",
            "079256e3-0e34-47d8-afd8-48182c4c1b96",
            "7dfc1140-b334-402a-ad90-cb14db447903",
            "87b68f97-c6f3-4f99-b4a1-90d459f651dd",
            "7adacbf9-1871-40da-b5e5-d21069ae5682"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1746,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "20134afc-900d-43c3-a87f-495b0f140d09",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 125,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "ef8b956e-34a8-4d0d-936a-b237bad4e64f",
              "parentUUID": "20134afc-900d-43c3-a87f-495b0f140d09",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 356,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "4fb94a80-ea55-459e-89b3-aee62a63974f",
              "parentUUID": "20134afc-900d-43c3-a87f-495b0f140d09",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ef8b956e-34a8-4d0d-936a-b237bad4e64f",
            "4fb94a80-ea55-459e-89b3-aee62a63974f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 481,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f9b85024-3a6e-4719-8f06-ff8aba8ac08d",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 124,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "2530c079-a7f6-4dfd-9eb1-f915e9b0a81f",
              "parentUUID": "f9b85024-3a6e-4719-8f06-ff8aba8ac08d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 241,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "27514da4-c791-40af-8de9-611ca4713663",
              "parentUUID": "f9b85024-3a6e-4719-8f06-ff8aba8ac08d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 290,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "623d7e2f-9547-4665-bd9a-848a991c1fc6",
              "parentUUID": "f9b85024-3a6e-4719-8f06-ff8aba8ac08d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 127,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "6897f1f5-b3bb-4361-86d5-e9f98f1047ac",
              "parentUUID": "f9b85024-3a6e-4719-8f06-ff8aba8ac08d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2530c079-a7f6-4dfd-9eb1-f915e9b0a81f",
            "27514da4-c791-40af-8de9-611ca4713663",
            "623d7e2f-9547-4665-bd9a-848a991c1fc6",
            "6897f1f5-b3bb-4361-86d5-e9f98f1047ac"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 782,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "6989aaca-8c5c-49c8-b14c-9a65493d4a2b",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 529,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "f64cb425-e0e8-412c-ae53-3d6deb1eda34",
              "parentUUID": "6989aaca-8c5c-49c8-b14c-9a65493d4a2b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 444,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "793d8f25-efd6-42d8-9ca2-5361c015ddf8",
              "parentUUID": "6989aaca-8c5c-49c8-b14c-9a65493d4a2b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f64cb425-e0e8-412c-ae53-3d6deb1eda34",
            "793d8f25-efd6-42d8-9ca2-5361c015ddf8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 973,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f0d56b2c-e4e7-4d7e-b127-b247a4a8f299",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 125,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "4d53cdda-6143-48ab-911b-8da6f94c266d",
              "parentUUID": "f0d56b2c-e4e7-4d7e-b127-b247a4a8f299",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 168,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "0a953a32-7dac-4250-ba5c-525faaebdb62",
              "parentUUID": "f0d56b2c-e4e7-4d7e-b127-b247a4a8f299",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4d53cdda-6143-48ab-911b-8da6f94c266d",
            "0a953a32-7dac-4250-ba5c-525faaebdb62"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 293,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e3557f2a-05bb-4ec2-bbb8-4b0d8bf1c22b",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 538,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "5c576389-87b8-4669-8b25-4f5fa6e0b741",
              "parentUUID": "e3557f2a-05bb-4ec2-bbb8-4b0d8bf1c22b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 9924,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "3c763aab-4d14-4a9c-9d13-b5cd320ae7af",
              "parentUUID": "e3557f2a-05bb-4ec2-bbb8-4b0d8bf1c22b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5c576389-87b8-4669-8b25-4f5fa6e0b741",
            "3c763aab-4d14-4a9c-9d13-b5cd320ae7af"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10462,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "ebde55e5-fa1d-46b9-b71e-6d728825e4cc",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2569,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "1f8e072e-c7b2-43b9-810c-9c17a9eeb59b",
              "parentUUID": "ebde55e5-fa1d-46b9-b71e-6d728825e4cc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 9785,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "cdf01aab-c8c7-4bb3-b1e5-0efa99f617c8",
              "parentUUID": "ebde55e5-fa1d-46b9-b71e-6d728825e4cc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 2280,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "a0091899-5cbc-4f88-8a60-71b6d6d9397e",
              "parentUUID": "ebde55e5-fa1d-46b9-b71e-6d728825e4cc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1f8e072e-c7b2-43b9-810c-9c17a9eeb59b",
            "cdf01aab-c8c7-4bb3-b1e5-0efa99f617c8",
            "a0091899-5cbc-4f88-8a60-71b6d6d9397e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 14634,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "eeca006c-a774-4508-a699-aa45da00b287",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 262,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "32f1214b-556a-4941-ba70-4fb2bb042c8e",
              "parentUUID": "eeca006c-a774-4508-a699-aa45da00b287",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 144,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "1ee0534c-9f43-48c2-b54f-b277c4b5c6f2",
              "parentUUID": "eeca006c-a774-4508-a699-aa45da00b287",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 114,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "3fc5af28-9a42-477a-81bf-8c5f468ecc7d",
              "parentUUID": "eeca006c-a774-4508-a699-aa45da00b287",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 2755,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "9220a29c-e194-4001-9ff0-1b8bc27d5802",
              "parentUUID": "eeca006c-a774-4508-a699-aa45da00b287",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "32f1214b-556a-4941-ba70-4fb2bb042c8e",
            "1ee0534c-9f43-48c2-b54f-b277c4b5c6f2",
            "3fc5af28-9a42-477a-81bf-8c5f468ecc7d",
            "9220a29c-e194-4001-9ff0-1b8bc27d5802"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3275,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "3070eea3-dab5-4147-a0b3-690ac980b6cd",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 4458,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:42773/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:42773/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:42773/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:42773/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:42773/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:42773/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42773/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42773/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:42773/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:42773/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42773/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42773/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42773/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "c687e0c4-22e0-4a76-9e6f-2b475015b608",
              "parentUUID": "3070eea3-dab5-4147-a0b3-690ac980b6cd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 4507,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:42773/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:42773/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:42773/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:42773/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:42773/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:42773/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42773/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42773/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:42773/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:42773/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42773/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42773/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42773/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "c684aa3e-37c2-4b75-807b-065c54f1ea8e",
              "parentUUID": "3070eea3-dab5-4147-a0b3-690ac980b6cd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4531,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:42773/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:42773/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:42773/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:42773/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:42773/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:42773/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42773/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42773/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:42773/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:42773/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42773/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42773/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42773/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "54428078-3510-4200-b86b-6b8dd7a5aedd",
              "parentUUID": "3070eea3-dab5-4147-a0b3-690ac980b6cd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 4401,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:42773/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:42773/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:42773/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:42773/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:42773/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:42773/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42773/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42773/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:42773/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:42773/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42773/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42773/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42773/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "1abdd52a-6c65-4368-9968-46d2bbc810e9",
              "parentUUID": "3070eea3-dab5-4147-a0b3-690ac980b6cd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 4497,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:42773/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:42773/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:42773/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:42773/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:42773/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:42773/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42773/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42773/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:42773/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:42773/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42773/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42773/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42773/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "c0b6acdd-afd0-48a0-9784-73d4974c7632",
              "parentUUID": "3070eea3-dab5-4147-a0b3-690ac980b6cd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 4453,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:42773/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:42773/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:42773/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:42773/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:42773/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:42773/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42773/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42773/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:42773/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:42773/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42773/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42773/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42773/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "166ac999-5bac-46bc-b39c-3372ea84c9ec",
              "parentUUID": "3070eea3-dab5-4147-a0b3-690ac980b6cd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 4551,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:42773/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:42773/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:42773/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:42773/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:42773/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:42773/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42773/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42773/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:42773/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:42773/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42773/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42773/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42773/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "40014526-0bcc-4136-bbc4-127a7fc1962b",
              "parentUUID": "3070eea3-dab5-4147-a0b3-690ac980b6cd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4461,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:42773/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:42773/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:42773/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:42773/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:42773/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:42773/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42773/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42773/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:42773/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:42773/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42773/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42773/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42773/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "df3a0f5c-f74f-4444-9079-804b5a115cfb",
              "parentUUID": "3070eea3-dab5-4147-a0b3-690ac980b6cd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4469,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:42773/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:42773/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:42773/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:42773/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:42773/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:42773/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42773/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42773/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:42773/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:42773/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42773/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42773/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42773/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "a49eeb57-cd5f-4b2c-b59a-1d104575a253",
              "parentUUID": "3070eea3-dab5-4147-a0b3-690ac980b6cd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "c687e0c4-22e0-4a76-9e6f-2b475015b608",
            "c684aa3e-37c2-4b75-807b-065c54f1ea8e",
            "54428078-3510-4200-b86b-6b8dd7a5aedd",
            "1abdd52a-6c65-4368-9968-46d2bbc810e9",
            "c0b6acdd-afd0-48a0-9784-73d4974c7632",
            "166ac999-5bac-46bc-b39c-3372ea84c9ec",
            "40014526-0bcc-4136-bbc4-127a7fc1962b",
            "df3a0f5c-f74f-4444-9079-804b5a115cfb",
            "a49eeb57-cd5f-4b2c-b59a-1d104575a253"
          ],
          "pending": [],
          "skipped": [],
          "duration": 40328,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "ed37315c-bc56-48b5-91fa-fc1b8cf037e1",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 4562,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:42773/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:42773/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:42773/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:42773/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:42773/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:42773/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42773/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42773/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:42773/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:42773/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42773/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42773/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42773/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "1855b8d9-c3de-4d5c-8d7c-25d00b0ec9c7",
              "parentUUID": "ed37315c-bc56-48b5-91fa-fc1b8cf037e1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 4557,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:42773/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:42773/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:42773/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:42773/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:42773/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:42773/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42773/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42773/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:42773/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:42773/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42773/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42773/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42773/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "7f2bcd08-af80-4da7-9219-bf7d09fd7093",
              "parentUUID": "ed37315c-bc56-48b5-91fa-fc1b8cf037e1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 4806,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:42773/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:42773/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:42773/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:42773/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:42773/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:42773/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42773/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42773/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:42773/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:42773/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42773/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42773/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42773/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "e52cdc5a-2a7f-4f26-88f6-3c9983cd6fb4",
              "parentUUID": "ed37315c-bc56-48b5-91fa-fc1b8cf037e1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "1855b8d9-c3de-4d5c-8d7c-25d00b0ec9c7",
            "7f2bcd08-af80-4da7-9219-bf7d09fd7093",
            "e52cdc5a-2a7f-4f26-88f6-3c9983cd6fb4"
          ],
          "pending": [],
          "skipped": [],
          "duration": 13925,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "047a9631-b884-4380-943b-61966cbbc7f2",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 809,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:42773/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:42773/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:42773/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:42773/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:42773/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:42773/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:42773/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:42773/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42773/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42773/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:42773/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42773/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42773/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42773/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "c6fdc80e-8adc-43f2-bb11-daccd1f1b531",
              "parentUUID": "047a9631-b884-4380-943b-61966cbbc7f2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 891,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:42773/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:42773/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:42773/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:42773/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:42773/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:42773/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:42773/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:42773/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42773/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42773/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:42773/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42773/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42773/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42773/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "e64ef2e9-5a8b-452a-8eaf-fda8a9c3e59c",
              "parentUUID": "047a9631-b884-4380-943b-61966cbbc7f2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "c6fdc80e-8adc-43f2-bb11-daccd1f1b531",
            "e64ef2e9-5a8b-452a-8eaf-fda8a9c3e59c"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1700,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}