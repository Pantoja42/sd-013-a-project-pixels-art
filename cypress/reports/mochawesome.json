{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 31,
    "pending": 0,
    "failures": 10,
    "start": "2021-06-04T19:52:28.717Z",
    "end": "2021-06-04T19:53:18.785Z",
    "duration": 50068,
    "testsRegistered": 41,
    "passPercent": 75.60975609756098,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "d97caeac-00db-4bb8-aca2-94db83a074c7",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "fd0aa6ea-fa17-4008-a69f-64c159887bc4",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 246,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "2dee9bf1-dd85-4d37-a31d-b11dddccfe5f",
              "parentUUID": "fd0aa6ea-fa17-4008-a69f-64c159887bc4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2dee9bf1-dd85-4d37-a31d-b11dddccfe5f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 246,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "585c5534-53ad-4640-b0a8-8142942db51e",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "timedOut": null,
              "duration": 89,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');",
              "err": {},
              "uuid": "beb3c826-28b1-4cd6-9c0f-c36f0469c6e3",
              "parentUUID": "585c5534-53ad-4640-b0a8-8142942db51e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 125,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "6035d9ce-e997-48c5-aa3e-69bee408d5b6",
              "parentUUID": "585c5534-53ad-4640-b0a8-8142942db51e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 119,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "d7b47032-e0a5-4724-a36b-0c487417ff16",
              "parentUUID": "585c5534-53ad-4640-b0a8-8142942db51e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 151,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "b20bee08-e4ee-4aed-a041-c4fe479c66dc",
              "parentUUID": "585c5534-53ad-4640-b0a8-8142942db51e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 145,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "92c148b1-3524-441b-bab6-7d0511c35b34",
              "parentUUID": "585c5534-53ad-4640-b0a8-8142942db51e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 143,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "fd196a19-ce45-4d9f-a584-9a6a7656b543",
              "parentUUID": "585c5534-53ad-4640-b0a8-8142942db51e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 78,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "2362fda6-fd48-4aa4-b096-5922b735b388",
              "parentUUID": "585c5534-53ad-4640-b0a8-8142942db51e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "beb3c826-28b1-4cd6-9c0f-c36f0469c6e3",
            "6035d9ce-e997-48c5-aa3e-69bee408d5b6",
            "d7b47032-e0a5-4724-a36b-0c487417ff16",
            "b20bee08-e4ee-4aed-a041-c4fe479c66dc",
            "92c148b1-3524-441b-bab6-7d0511c35b34",
            "fd196a19-ce45-4d9f-a584-9a6a7656b543",
            "2362fda6-fd48-4aa4-b096-5922b735b388"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 850,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "1970b2cd-c35c-4302-b004-3e8ec06e25de",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 76,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "009586ef-674d-4861-9108-d45524d225f9",
              "parentUUID": "1970b2cd-c35c-4302-b004-3e8ec06e25de",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 177,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "13140bb3-5d3e-4fe7-af6b-69ec59ffd3e1",
              "parentUUID": "1970b2cd-c35c-4302-b004-3e8ec06e25de",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "009586ef-674d-4861-9108-d45524d225f9",
            "13140bb3-5d3e-4fe7-af6b-69ec59ffd3e1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 253,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "5be8f99c-6de2-4c70-b987-c370ce7a911c",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 78,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "c7eb4c13-c878-4864-a2dd-756bcae93bf6",
              "parentUUID": "5be8f99c-6de2-4c70-b987-c370ce7a911c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 134,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "57408020-9230-4fac-8e8f-e749478c3af8",
              "parentUUID": "5be8f99c-6de2-4c70-b987-c370ce7a911c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 372,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "AssertionError: expected '<td.pixel>' to have CSS property 'background-color' with the value 'rgb(255, 255, 255)', but the value was 'rgb(252, 252, 252)'",
                "estack": "AssertionError: expected '<td.pixel>' to have CSS property 'background-color' with the value 'rgb(255, 255, 255)', but the value was 'rgb(252, 252, 252)'\n    at callback (http://localhost:44079/__cypress/runner/cypress_runner.js:136947:20)\n    at getRet (http://localhost:44079/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:44079/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:44079/__cypress/runner/cypress_runner.js:164690:29)\n    at thenFn (http://localhost:44079/__cypress/runner/cypress_runner.js:136599:23)\n    at yieldItem (http://localhost:44079/__cypress/runner/cypress_runner.js:136954:16)\n    at tryCatcher (http://localhost:44079/__cypress/runner/cypress_runner.js:167415:23)\n    at Object.gotValue (http://localhost:44079/__cypress/runner/cypress_runner.js:166557:18)\n    at Object.gotAccum (http://localhost:44079/__cypress/runner/cypress_runner.js:166546:25)\n    at Object.tryCatcher (http://localhost:44079/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44079/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44079/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:44079/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44079/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44079/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44079/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": "- 'rgb(252, 252, 252)'\n+ 'rgb(255, 255, 255)'\n"
              },
              "uuid": "594c3744-a19e-482d-b9f4-bde9749d3acb",
              "parentUUID": "5be8f99c-6de2-4c70-b987-c370ce7a911c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 90,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "4ddecb6a-d570-4f8f-ac0b-77ead191b5d5",
              "parentUUID": "5be8f99c-6de2-4c70-b987-c370ce7a911c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c7eb4c13-c878-4864-a2dd-756bcae93bf6",
            "57408020-9230-4fac-8e8f-e749478c3af8",
            "4ddecb6a-d570-4f8f-ac0b-77ead191b5d5"
          ],
          "failures": [
            "594c3744-a19e-482d-b9f4-bde9749d3acb"
          ],
          "pending": [],
          "skipped": [],
          "duration": 674,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "32d2b7f9-4241-4304-b4e3-f7e3f6d4b230",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 334,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {
                "message": "AssertionError: expected '<td.pixel>' to have CSS property 'background-color' with the value 'rgb(255, 255, 255)', but the value was 'rgb(252, 252, 252)'",
                "estack": "AssertionError: expected '<td.pixel>' to have CSS property 'background-color' with the value 'rgb(255, 255, 255)', but the value was 'rgb(252, 252, 252)'\n    at callback (http://localhost:44079/__cypress/runner/cypress_runner.js:136947:20)\n    at getRet (http://localhost:44079/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:44079/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:44079/__cypress/runner/cypress_runner.js:164690:29)\n    at thenFn (http://localhost:44079/__cypress/runner/cypress_runner.js:136599:23)\n    at yieldItem (http://localhost:44079/__cypress/runner/cypress_runner.js:136954:16)\n    at tryCatcher (http://localhost:44079/__cypress/runner/cypress_runner.js:167415:23)\n    at Object.gotValue (http://localhost:44079/__cypress/runner/cypress_runner.js:166557:18)\n    at Object.gotAccum (http://localhost:44079/__cypress/runner/cypress_runner.js:166546:25)\n    at Object.tryCatcher (http://localhost:44079/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44079/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44079/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:44079/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44079/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44079/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44079/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": "- 'rgb(252, 252, 252)'\n+ 'rgb(255, 255, 255)'\n"
              },
              "uuid": "2cfe0015-51f1-4190-8a45-0aa6e0e2c3b2",
              "parentUUID": "32d2b7f9-4241-4304-b4e3-f7e3f6d4b230",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 311,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "36e5bda6-6a06-4a0b-82a0-8f66acc8e512",
              "parentUUID": "32d2b7f9-4241-4304-b4e3-f7e3f6d4b230",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "36e5bda6-6a06-4a0b-82a0-8f66acc8e512"
          ],
          "failures": [
            "2cfe0015-51f1-4190-8a45-0aa6e0e2c3b2"
          ],
          "pending": [],
          "skipped": [],
          "duration": 645,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f5ab97be-4da6-4958-8e38-8c8bcc599f00",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 83,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "f3fb598a-9b00-4939-ae3a-1369222d6c50",
              "parentUUID": "f5ab97be-4da6-4958-8e38-8c8bcc599f00",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 87,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "67227d16-4962-45de-8b25-a9ddb9e4c5d4",
              "parentUUID": "f5ab97be-4da6-4958-8e38-8c8bcc599f00",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f3fb598a-9b00-4939-ae3a-1369222d6c50",
            "67227d16-4962-45de-8b25-a9ddb9e4c5d4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 170,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "40cab1a0-982e-4292-8f9e-d3cdf340e54d",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 427,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "9e73303a-2ac0-4367-b41f-d726852c9bdc",
              "parentUUID": "40cab1a0-982e-4292-8f9e-d3cdf340e54d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 8379,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "41f36ab8-c032-429d-a735-0dc0e8418dd9",
              "parentUUID": "40cab1a0-982e-4292-8f9e-d3cdf340e54d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9e73303a-2ac0-4367-b41f-d726852c9bdc",
            "41f36ab8-c032-429d-a735-0dc0e8418dd9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8806,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c58e5aa0-e71e-4114-935b-61687f019bf4",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2103,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "cc073d9e-b038-43f0-971b-4508516ed450",
              "parentUUID": "c58e5aa0-e71e-4114-935b-61687f019bf4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 8257,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "197b0518-c770-4716-9f9f-ef25ca9d8ea2",
              "parentUUID": "c58e5aa0-e71e-4114-935b-61687f019bf4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 1442,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "6fc1bb25-10e2-406d-a10b-abb5d6573d75",
              "parentUUID": "c58e5aa0-e71e-4114-935b-61687f019bf4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "cc073d9e-b038-43f0-971b-4508516ed450",
            "197b0518-c770-4716-9f9f-ef25ca9d8ea2",
            "6fc1bb25-10e2-406d-a10b-abb5d6573d75"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 11802,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "7d3a7def-6042-4fe0-8d31-a2058ba5a573",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 139,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "9780445a-f6d2-4b83-836c-944f93065570",
              "parentUUID": "7d3a7def-6042-4fe0-8d31-a2058ba5a573",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 4246,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: expected '<table#pixel-board>' to be below of { Object (0, length, ...) }",
                "estack": "CypressError: Timed out retrying: expected '<table#pixel-board>' to be below of { Object (0, length, ...) }\n    at cypressErr (http://localhost:44079/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:44079/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:44079/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:44079/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:44079/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:44079/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44079/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44079/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:44079/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:44079/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44079/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44079/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44079/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "cd227eaa-dafd-4243-9a00-0932b914951d",
              "parentUUID": "7d3a7def-6042-4fe0-8d31-a2058ba5a573",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 114,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "80c26d60-cc09-4383-8635-8dbb4e3eab23",
              "parentUUID": "7d3a7def-6042-4fe0-8d31-a2058ba5a573",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 2250,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "2c3b8149-1f93-436e-af4c-f3772fe3e7c8",
              "parentUUID": "7d3a7def-6042-4fe0-8d31-a2058ba5a573",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9780445a-f6d2-4b83-836c-944f93065570",
            "80c26d60-cc09-4383-8635-8dbb4e3eab23",
            "2c3b8149-1f93-436e-af4c-f3772fe3e7c8"
          ],
          "failures": [
            "cd227eaa-dafd-4243-9a00-0932b914951d"
          ],
          "pending": [],
          "skipped": [],
          "duration": 6749,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "dd76c6d5-e4b6-4e84-a279-3c1a2f15ebbc",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 135,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {},
              "uuid": "f2decc27-cf49-4eae-92d7-bc679bad4b80",
              "parentUUID": "dd76c6d5-e4b6-4e84-a279-3c1a2f15ebbc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 80,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {},
              "uuid": "80bd9e92-645b-4e7d-9131-c44cdd5e2bd2",
              "parentUUID": "dd76c6d5-e4b6-4e84-a279-3c1a2f15ebbc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4194,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:44079/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:44079/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:44079/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:44079/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:44079/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:44079/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44079/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44079/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:44079/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:44079/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44079/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44079/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44079/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "c3d27843-314b-426a-8896-21766b9edb35",
              "parentUUID": "dd76c6d5-e4b6-4e84-a279-3c1a2f15ebbc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 118,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {},
              "uuid": "30d62090-a445-47c7-a5dd-c1a25a6a2b27",
              "parentUUID": "dd76c6d5-e4b6-4e84-a279-3c1a2f15ebbc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 4253,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: expected '<table#pixel-board>' to be below of { Object (0, length, ...) }",
                "estack": "CypressError: Timed out retrying: expected '<table#pixel-board>' to be below of { Object (0, length, ...) }\n    at cypressErr (http://localhost:44079/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:44079/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:44079/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:44079/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:44079/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:44079/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44079/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44079/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:44079/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:44079/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44079/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44079/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44079/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "4ba23d00-5819-4cb8-8165-b2f74cb6eb7b",
              "parentUUID": "dd76c6d5-e4b6-4e84-a279-3c1a2f15ebbc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 143,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {},
              "uuid": "221b21fb-bf60-4fde-8935-16436bc0d2bb",
              "parentUUID": "dd76c6d5-e4b6-4e84-a279-3c1a2f15ebbc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 312,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "AssertionError: expected 'Board Inválido' to match /Board inválido!/i",
                "estack": "AssertionError: expected 'Board Inválido' to match /Board inválido!/i\n    at getRet (http://localhost:44079/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:44079/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:44079/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:44079/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:44079/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:44079/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:44079/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:44079/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44079/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44079/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:44079/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44079/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44079/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44079/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "965fdc18-a3a6-4a23-948a-4d1a0841d3a9",
              "parentUUID": "dd76c6d5-e4b6-4e84-a279-3c1a2f15ebbc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 509,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {},
              "uuid": "08514476-526b-4fe2-ad3e-2facb7e275a1",
              "parentUUID": "dd76c6d5-e4b6-4e84-a279-3c1a2f15ebbc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 563,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "AssertionError: expected '<td.pixel>' to have CSS property 'background-color' with the value 'rgb(255, 255, 255)', but the value was 'rgb(252, 252, 252)'",
                "estack": "AssertionError: expected '<td.pixel>' to have CSS property 'background-color' with the value 'rgb(255, 255, 255)', but the value was 'rgb(252, 252, 252)'\n    at callback (http://localhost:44079/__cypress/runner/cypress_runner.js:136947:20)\n    at getRet (http://localhost:44079/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:44079/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:44079/__cypress/runner/cypress_runner.js:164690:29)\n    at thenFn (http://localhost:44079/__cypress/runner/cypress_runner.js:136599:23)\n    at yieldItem (http://localhost:44079/__cypress/runner/cypress_runner.js:136954:16)\n    at tryCatcher (http://localhost:44079/__cypress/runner/cypress_runner.js:167415:23)\n    at Object.gotValue (http://localhost:44079/__cypress/runner/cypress_runner.js:166557:18)\n    at Object.gotAccum (http://localhost:44079/__cypress/runner/cypress_runner.js:166546:25)\n    at Object.tryCatcher (http://localhost:44079/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44079/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44079/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:44079/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44079/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44079/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44079/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": "- 'rgb(252, 252, 252)'\n+ 'rgb(255, 255, 255)'\n"
              },
              "uuid": "b0c230c1-1b14-4175-b1c0-690b570d142d",
              "parentUUID": "dd76c6d5-e4b6-4e84-a279-3c1a2f15ebbc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f2decc27-cf49-4eae-92d7-bc679bad4b80",
            "80bd9e92-645b-4e7d-9131-c44cdd5e2bd2",
            "30d62090-a445-47c7-a5dd-c1a25a6a2b27",
            "221b21fb-bf60-4fde-8935-16436bc0d2bb",
            "08514476-526b-4fe2-ad3e-2facb7e275a1"
          ],
          "failures": [
            "c3d27843-314b-426a-8896-21766b9edb35",
            "4ba23d00-5819-4cb8-8165-b2f74cb6eb7b",
            "965fdc18-a3a6-4a23-948a-4d1a0841d3a9",
            "b0c230c1-1b14-4175-b1c0-690b570d142d"
          ],
          "pending": [],
          "skipped": [],
          "duration": 10307,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "31d1eb41-970b-4a29-8b4d-d3f3e97c9d7f",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 2827,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {},
              "uuid": "6d95017b-6df8-4ffd-b043-9494ec137488",
              "parentUUID": "31d1eb41-970b-4a29-8b4d-d3f3e97c9d7f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 452,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "edfb0d0b-8183-4065-a1a8-4ea28c5ad938",
              "parentUUID": "31d1eb41-970b-4a29-8b4d-d3f3e97c9d7f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 4592,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '2500'.",
                "estack": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '2500'.\n    at cypressErr (http://localhost:44079/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:44079/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:44079/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:44079/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:44079/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:44079/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44079/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44079/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:44079/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:44079/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44079/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44079/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44079/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "c52a599e-72c8-4505-bf2e-148020e9225c",
              "parentUUID": "31d1eb41-970b-4a29-8b4d-d3f3e97c9d7f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6d95017b-6df8-4ffd-b043-9494ec137488",
            "edfb0d0b-8183-4065-a1a8-4ea28c5ad938"
          ],
          "failures": [
            "c52a599e-72c8-4505-bf2e-148020e9225c"
          ],
          "pending": [],
          "skipped": [],
          "duration": 7871,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "06a19877-b21d-410e-9484-31f0a21d267a",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 330,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:44079/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:44079/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:44079/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:44079/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:44079/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:44079/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:44079/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:44079/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44079/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44079/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:44079/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44079/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44079/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44079/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "51c76c98-a1cf-482a-9c6f-d22211f2adfa",
              "parentUUID": "06a19877-b21d-410e-9484-31f0a21d267a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 390,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:44079/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:44079/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:44079/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:44079/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:44079/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:44079/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:44079/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:44079/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44079/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44079/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:44079/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44079/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44079/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44079/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "1f912067-9cb9-4f06-bee8-06f90c9dddd9",
              "parentUUID": "06a19877-b21d-410e-9484-31f0a21d267a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "51c76c98-a1cf-482a-9c6f-d22211f2adfa",
            "1f912067-9cb9-4f06-bee8-06f90c9dddd9"
          ],
          "pending": [],
          "skipped": [],
          "duration": 720,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}