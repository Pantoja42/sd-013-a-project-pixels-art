{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 27,
    "pending": 0,
    "failures": 14,
    "start": "2021-06-01T23:02:28.213Z",
    "end": "2021-06-01T23:03:45.682Z",
    "duration": 77469,
    "testsRegistered": 41,
    "passPercent": 65.85365853658537,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "104c3b08-fae7-4753-b8cc-6b3287b0f8f4",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "0ba598b4-23cd-42ee-a7ce-02f94553ea9e",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 114,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "d505963f-73f2-448d-af38-2a9b817d5734",
              "parentUUID": "0ba598b4-23cd-42ee-a7ce-02f94553ea9e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d505963f-73f2-448d-af38-2a9b817d5734"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 114,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "5a25e0f3-43cb-46f5-afb8-02f6d8795f8b",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "timedOut": null,
              "duration": 49,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');",
              "err": {},
              "uuid": "cdf8801e-0f51-4e28-8a4e-e63d700f2361",
              "parentUUID": "5a25e0f3-43cb-46f5-afb8-02f6d8795f8b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 73,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "56df322b-7076-48f5-9668-bde5cc267959",
              "parentUUID": "5a25e0f3-43cb-46f5-afb8-02f6d8795f8b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 94,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "b22bb8cb-9bfe-4d6a-8226-fc6b7636e603",
              "parentUUID": "5a25e0f3-43cb-46f5-afb8-02f6d8795f8b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 62,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "afacbd6c-b64c-44c4-9b7b-262fac2437c1",
              "parentUUID": "5a25e0f3-43cb-46f5-afb8-02f6d8795f8b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 89,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "bad7884f-6dda-4a40-8e22-edba3a6da96e",
              "parentUUID": "5a25e0f3-43cb-46f5-afb8-02f6d8795f8b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 62,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "e86ff572-ff82-48c1-87e1-1e205727cf1e",
              "parentUUID": "5a25e0f3-43cb-46f5-afb8-02f6d8795f8b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 62,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "4eda0e83-efa6-4561-a7ea-147394b80e30",
              "parentUUID": "5a25e0f3-43cb-46f5-afb8-02f6d8795f8b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "cdf8801e-0f51-4e28-8a4e-e63d700f2361",
            "56df322b-7076-48f5-9668-bde5cc267959",
            "b22bb8cb-9bfe-4d6a-8226-fc6b7636e603",
            "afacbd6c-b64c-44c4-9b7b-262fac2437c1",
            "bad7884f-6dda-4a40-8e22-edba3a6da96e",
            "e86ff572-ff82-48c1-87e1-1e205727cf1e",
            "4eda0e83-efa6-4561-a7ea-147394b80e30"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 491,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "384bd78d-d8f0-454b-8474-3315736c3fd7",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 80,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "70b003f4-f3e4-4dab-a894-9cce9911a122",
              "parentUUID": "384bd78d-d8f0-454b-8474-3315736c3fd7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 153,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "8fe1bdb9-6691-45ed-baad-09303b1811d7",
              "parentUUID": "384bd78d-d8f0-454b-8474-3315736c3fd7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "70b003f4-f3e4-4dab-a894-9cce9911a122",
            "8fe1bdb9-6691-45ed-baad-09303b1811d7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 233,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c4113918-7d33-4113-bfd8-dc5f7cc3ee6a",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 49,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "fe901305-4ae2-4a22-971b-0b34c19bcbcd",
              "parentUUID": "c4113918-7d33-4113-bfd8-dc5f7cc3ee6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 80,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "09595f51-a68a-44a6-83a6-d984da7eb651",
              "parentUUID": "c4113918-7d33-4113-bfd8-dc5f7cc3ee6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 123,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "c40c1653-3ec6-43f8-b1db-9b172e69c342",
              "parentUUID": "c4113918-7d33-4113-bfd8-dc5f7cc3ee6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 51,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "2d732ba5-a02c-4ccb-9317-f428eac79985",
              "parentUUID": "c4113918-7d33-4113-bfd8-dc5f7cc3ee6a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fe901305-4ae2-4a22-971b-0b34c19bcbcd",
            "09595f51-a68a-44a6-83a6-d984da7eb651",
            "c40c1653-3ec6-43f8-b1db-9b172e69c342",
            "2d732ba5-a02c-4ccb-9317-f428eac79985"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 303,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "532072d0-4fa5-4ca8-a260-e67f5026ffd7",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 183,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "e610a655-415f-4b7d-bbb7-d45cb53685aa",
              "parentUUID": "532072d0-4fa5-4ca8-a260-e67f5026ffd7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 186,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "1f08b1dc-a038-4261-8e3d-1a83debce43d",
              "parentUUID": "532072d0-4fa5-4ca8-a260-e67f5026ffd7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e610a655-415f-4b7d-bbb7-d45cb53685aa",
            "1f08b1dc-a038-4261-8e3d-1a83debce43d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 369,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "5b45ba80-4e96-49f1-b918-87f24cd38283",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 65,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "6a4df265-0c1b-4d0f-9e6a-37c4185f46ed",
              "parentUUID": "5b45ba80-4e96-49f1-b918-87f24cd38283",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 53,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "a46dd0b6-77a3-4e8b-8032-355bbce36a4b",
              "parentUUID": "5b45ba80-4e96-49f1-b918-87f24cd38283",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6a4df265-0c1b-4d0f-9e6a-37c4185f46ed",
            "a46dd0b6-77a3-4e8b-8032-355bbce36a4b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 118,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "be4326ef-4159-4445-b692-29b92ce7efff",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 429,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "1815477c-e446-4afa-b044-007341fdfc75",
              "parentUUID": "be4326ef-4159-4445-b692-29b92ce7efff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 9020,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "6c7015ca-9323-4e50-8bc3-936ac315da80",
              "parentUUID": "be4326ef-4159-4445-b692-29b92ce7efff",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1815477c-e446-4afa-b044-007341fdfc75",
            "6c7015ca-9323-4e50-8bc3-936ac315da80"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9449,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "be7881d7-44b7-4568-9bfe-618af5865508",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2136,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "391a820b-cf1b-4f7b-a7dc-48314976c117",
              "parentUUID": "be7881d7-44b7-4568-9bfe-618af5865508",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 8693,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "356b50bd-bef4-4bc8-9414-5ef47a04c794",
              "parentUUID": "be7881d7-44b7-4568-9bfe-618af5865508",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 1356,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "bd76d23e-ad6d-42d1-bc5d-4b811ae5b085",
              "parentUUID": "be7881d7-44b7-4568-9bfe-618af5865508",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "391a820b-cf1b-4f7b-a7dc-48314976c117",
            "356b50bd-bef4-4bc8-9414-5ef47a04c794",
            "bd76d23e-ad6d-42d1-bc5d-4b811ae5b085"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12185,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "2b908535-ce05-4aca-8abb-f67e119dc0a4",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 80,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "56fc3ff1-6fdf-43c5-b986-b8c300592c39",
              "parentUUID": "2b908535-ce05-4aca-8abb-f67e119dc0a4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 56,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "fb648ccc-57f9-4e52-85f2-bb758cb6e0b8",
              "parentUUID": "2b908535-ce05-4aca-8abb-f67e119dc0a4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 38,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "653046d7-3df2-4c45-876e-54fd604d51fe",
              "parentUUID": "2b908535-ce05-4aca-8abb-f67e119dc0a4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 2478,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "e40dd472-38b2-4748-88f7-d3ca28ac9aae",
              "parentUUID": "2b908535-ce05-4aca-8abb-f67e119dc0a4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "56fc3ff1-6fdf-43c5-b986-b8c300592c39",
            "fb648ccc-57f9-4e52-85f2-bb758cb6e0b8",
            "653046d7-3df2-4c45-876e-54fd604d51fe",
            "e40dd472-38b2-4748-88f7-d3ca28ac9aae"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2652,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "0460b522-56ef-4ba6-a491-a7b68c88b378",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 4203,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:34697/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34697/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34697/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34697/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34697/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34697/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34697/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34697/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34697/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34697/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34697/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34697/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34697/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "b8918565-4d8e-4fcc-9bcc-4369b6820e8b",
              "parentUUID": "0460b522-56ef-4ba6-a491-a7b68c88b378",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 4214,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:34697/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34697/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34697/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34697/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34697/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34697/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34697/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34697/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34697/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34697/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34697/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34697/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34697/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "d403fbbc-7443-4f52-8c92-8024807aa0a8",
              "parentUUID": "0460b522-56ef-4ba6-a491-a7b68c88b378",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4186,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:34697/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34697/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34697/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34697/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34697/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34697/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34697/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34697/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34697/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34697/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34697/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34697/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34697/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "fb24d3d4-5007-4682-bb33-f6cf52380aed",
              "parentUUID": "0460b522-56ef-4ba6-a491-a7b68c88b378",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 4177,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:34697/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34697/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34697/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34697/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34697/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34697/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34697/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34697/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34697/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34697/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34697/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34697/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34697/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "5fea6b6a-a703-41b0-bb11-08f3bed5d345",
              "parentUUID": "0460b522-56ef-4ba6-a491-a7b68c88b378",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 4219,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:34697/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34697/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34697/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34697/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34697/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34697/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34697/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34697/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34697/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34697/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34697/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34697/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34697/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "55c83c5e-43dd-45c6-a506-590e69cb7cc5",
              "parentUUID": "0460b522-56ef-4ba6-a491-a7b68c88b378",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 4205,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:34697/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34697/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34697/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34697/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34697/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34697/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34697/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34697/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34697/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34697/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34697/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34697/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34697/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "82d85f1d-a181-4c86-baf0-5eb74de54279",
              "parentUUID": "0460b522-56ef-4ba6-a491-a7b68c88b378",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 4163,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:34697/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34697/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34697/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34697/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34697/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34697/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34697/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34697/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34697/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34697/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34697/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34697/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34697/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "9f9f2a47-d7b5-46d1-8c7d-07e07754001c",
              "parentUUID": "0460b522-56ef-4ba6-a491-a7b68c88b378",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4280,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:34697/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34697/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34697/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34697/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34697/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34697/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34697/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34697/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34697/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34697/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34697/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34697/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34697/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "4bb36f56-f984-489b-96a7-a79100562b23",
              "parentUUID": "0460b522-56ef-4ba6-a491-a7b68c88b378",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4185,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:34697/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34697/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34697/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34697/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34697/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34697/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34697/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34697/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34697/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34697/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34697/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34697/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34697/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "2c44fad7-3871-414a-9c23-301181e077a8",
              "parentUUID": "0460b522-56ef-4ba6-a491-a7b68c88b378",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "b8918565-4d8e-4fcc-9bcc-4369b6820e8b",
            "d403fbbc-7443-4f52-8c92-8024807aa0a8",
            "fb24d3d4-5007-4682-bb33-f6cf52380aed",
            "5fea6b6a-a703-41b0-bb11-08f3bed5d345",
            "55c83c5e-43dd-45c6-a506-590e69cb7cc5",
            "82d85f1d-a181-4c86-baf0-5eb74de54279",
            "9f9f2a47-d7b5-46d1-8c7d-07e07754001c",
            "4bb36f56-f984-489b-96a7-a79100562b23",
            "2c44fad7-3871-414a-9c23-301181e077a8"
          ],
          "pending": [],
          "skipped": [],
          "duration": 37832,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "5a758805-8885-4268-b944-1f26ab43dedd",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 4179,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:34697/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34697/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34697/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34697/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34697/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34697/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34697/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34697/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34697/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34697/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34697/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34697/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34697/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "ef905692-f860-4afe-977b-724e1e03258a",
              "parentUUID": "5a758805-8885-4268-b944-1f26ab43dedd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 4221,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:34697/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34697/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34697/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34697/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34697/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34697/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34697/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34697/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34697/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34697/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34697/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34697/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34697/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "d12a7754-23e0-496f-8e28-36f0283c74df",
              "parentUUID": "5a758805-8885-4268-b944-1f26ab43dedd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 4206,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:34697/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34697/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34697/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34697/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34697/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34697/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34697/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34697/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34697/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34697/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34697/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34697/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34697/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "e40a9ff6-2bea-475f-8aee-b01c7c42440c",
              "parentUUID": "5a758805-8885-4268-b944-1f26ab43dedd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "ef905692-f860-4afe-977b-724e1e03258a",
            "d12a7754-23e0-496f-8e28-36f0283c74df",
            "e40a9ff6-2bea-475f-8aee-b01c7c42440c"
          ],
          "pending": [],
          "skipped": [],
          "duration": 12606,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "dde13e30-8715-4279-abfb-175de0b68ac4",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 303,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:34697/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:34697/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:34697/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:34697/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:34697/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:34697/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:34697/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:34697/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34697/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34697/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:34697/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34697/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34697/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34697/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "50188776-cd20-48a8-8614-43d0adfee29c",
              "parentUUID": "dde13e30-8715-4279-abfb-175de0b68ac4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 231,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:34697/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:34697/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:34697/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:34697/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:34697/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:34697/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:34697/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:34697/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34697/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34697/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:34697/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34697/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34697/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34697/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "85cab2f6-e3df-41aa-9e90-0524a0a77ced",
              "parentUUID": "dde13e30-8715-4279-abfb-175de0b68ac4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "50188776-cd20-48a8-8614-43d0adfee29c",
            "85cab2f6-e3df-41aa-9e90-0524a0a77ced"
          ],
          "pending": [],
          "skipped": [],
          "duration": 534,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}