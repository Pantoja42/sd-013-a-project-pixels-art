{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 29,
    "pending": 0,
    "failures": 12,
    "start": "2021-06-13T23:31:14.553Z",
    "end": "2021-06-13T23:33:03.585Z",
    "duration": 109032,
    "testsRegistered": 41,
    "passPercent": 70.73170731707317,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "95a8fdca-994a-4a3c-b2dd-980d0b3aba33",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "48fe31c6-a961-4cb4-a0bf-31a09a33272d",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 910,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "d073478c-de75-466c-b521-336fbbc6db25",
              "parentUUID": "48fe31c6-a961-4cb4-a0bf-31a09a33272d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d073478c-de75-466c-b521-336fbbc6db25"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 910,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "0f56d6e9-6e52-439e-920e-dfb0a93d1420",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "timedOut": null,
              "duration": 693,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');",
              "err": {},
              "uuid": "f550ba87-b793-4b4d-8fb2-2bf0381a63b7",
              "parentUUID": "0f56d6e9-6e52-439e-920e-dfb0a93d1420",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 615,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "19c1d1a7-0fff-44a6-95bf-cc917849a2be",
              "parentUUID": "0f56d6e9-6e52-439e-920e-dfb0a93d1420",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 678,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "3fd51d95-b3b1-42d9-8676-3bbc6b77de10",
              "parentUUID": "0f56d6e9-6e52-439e-920e-dfb0a93d1420",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 416,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "9cd87289-33f6-4305-9c55-88dcae127f7a",
              "parentUUID": "0f56d6e9-6e52-439e-920e-dfb0a93d1420",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 414,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "21d53323-74ea-4066-bdcb-aac154f43e43",
              "parentUUID": "0f56d6e9-6e52-439e-920e-dfb0a93d1420",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 415,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "ef5994dd-884a-4c8a-886e-b24a9e71f30a",
              "parentUUID": "0f56d6e9-6e52-439e-920e-dfb0a93d1420",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 386,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "e2c6ba56-f417-4a90-a6f8-81fee205a312",
              "parentUUID": "0f56d6e9-6e52-439e-920e-dfb0a93d1420",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f550ba87-b793-4b4d-8fb2-2bf0381a63b7",
            "19c1d1a7-0fff-44a6-95bf-cc917849a2be",
            "3fd51d95-b3b1-42d9-8676-3bbc6b77de10",
            "9cd87289-33f6-4305-9c55-88dcae127f7a",
            "21d53323-74ea-4066-bdcb-aac154f43e43",
            "ef5994dd-884a-4c8a-886e-b24a9e71f30a",
            "e2c6ba56-f417-4a90-a6f8-81fee205a312"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3617,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "aeb7dec3-8a04-4f10-8260-beb375413dde",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 400,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "b4413b4a-41a3-468b-aa5e-ac3a8e53af8d",
              "parentUUID": "aeb7dec3-8a04-4f10-8260-beb375413dde",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 558,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "3a29691f-f15b-4a44-bc26-e883cd7af8cf",
              "parentUUID": "aeb7dec3-8a04-4f10-8260-beb375413dde",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b4413b4a-41a3-468b-aa5e-ac3a8e53af8d",
            "3a29691f-f15b-4a44-bc26-e883cd7af8cf"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 958,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a797ebe0-7e10-486f-8e13-f6bbff4ae607",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 521,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "96338704-3ee0-443d-94e0-4f47d2ebfb41",
              "parentUUID": "a797ebe0-7e10-486f-8e13-f6bbff4ae607",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 498,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "cb3d641c-dc85-4c27-abee-4180a1fcde8a",
              "parentUUID": "a797ebe0-7e10-486f-8e13-f6bbff4ae607",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 616,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "d7c7267c-b317-42b1-b3de-a8bf3bbed0b8",
              "parentUUID": "a797ebe0-7e10-486f-8e13-f6bbff4ae607",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 316,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "b5f4711f-e5a7-4c1f-a24d-5d32b97705ed",
              "parentUUID": "a797ebe0-7e10-486f-8e13-f6bbff4ae607",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "96338704-3ee0-443d-94e0-4f47d2ebfb41",
            "cb3d641c-dc85-4c27-abee-4180a1fcde8a",
            "d7c7267c-b317-42b1-b3de-a8bf3bbed0b8",
            "b5f4711f-e5a7-4c1f-a24d-5d32b97705ed"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1951,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "0e4b3cf2-69b8-4747-ae3b-920f6056878e",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 1054,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "0a4f8585-6f37-48e3-a0b1-0a1c08574ea1",
              "parentUUID": "0e4b3cf2-69b8-4747-ae3b-920f6056878e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 915,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "853a13cb-f7cb-40d1-ac76-77f5c9f74733",
              "parentUUID": "0e4b3cf2-69b8-4747-ae3b-920f6056878e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0a4f8585-6f37-48e3-a0b1-0a1c08574ea1",
            "853a13cb-f7cb-40d1-ac76-77f5c9f74733"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1969,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "97ff5fcd-ca21-4c2c-8a23-6c2f75430add",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 269,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "15143891-d82e-4c30-a88c-16b964a777a1",
              "parentUUID": "97ff5fcd-ca21-4c2c-8a23-6c2f75430add",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 465,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "3861151f-35d8-42c6-ad98-849fecd558a2",
              "parentUUID": "97ff5fcd-ca21-4c2c-8a23-6c2f75430add",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "15143891-d82e-4c30-a88c-16b964a777a1",
            "3861151f-35d8-42c6-ad98-849fecd558a2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 734,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "578abe2c-54f1-4213-86d0-7ce017961cf5",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 877,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "59f200b1-bfd7-4081-801d-0b7099655214",
              "parentUUID": "578abe2c-54f1-4213-86d0-7ce017961cf5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 11326,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "218191dc-e0dc-4f22-b6c5-0eeb72792e0f",
              "parentUUID": "578abe2c-54f1-4213-86d0-7ce017961cf5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "59f200b1-bfd7-4081-801d-0b7099655214",
            "218191dc-e0dc-4f22-b6c5-0eeb72792e0f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12203,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "6413a11d-37f6-4345-a00a-3b2cc092150a",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 3089,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "db1508c3-08f2-4b42-9588-cebc13c5907b",
              "parentUUID": "6413a11d-37f6-4345-a00a-3b2cc092150a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 10864,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "4a3ca28c-e5f7-4bb0-b123-9de3006fe306",
              "parentUUID": "6413a11d-37f6-4345-a00a-3b2cc092150a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 3170,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "78336f3f-613f-4650-b053-89ee6e339901",
              "parentUUID": "6413a11d-37f6-4345-a00a-3b2cc092150a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "db1508c3-08f2-4b42-9588-cebc13c5907b",
            "4a3ca28c-e5f7-4bb0-b123-9de3006fe306",
            "78336f3f-613f-4650-b053-89ee6e339901"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 17123,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a1953a52-26fb-4136-8f44-6516cd0b9bd8",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 471,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "e513b294-6de5-4c42-b224-f5f0cda5800d",
              "parentUUID": "a1953a52-26fb-4136-8f44-6516cd0b9bd8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 271,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "58b1b8c2-992d-49ee-9a22-2dff8d9fab46",
              "parentUUID": "a1953a52-26fb-4136-8f44-6516cd0b9bd8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 246,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "d57dd38f-498a-4f57-b123-1e585fce74ce",
              "parentUUID": "a1953a52-26fb-4136-8f44-6516cd0b9bd8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 3821,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "810952f8-ba7a-44f9-bd8d-bb3d2bc221e6",
              "parentUUID": "a1953a52-26fb-4136-8f44-6516cd0b9bd8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e513b294-6de5-4c42-b224-f5f0cda5800d",
            "58b1b8c2-992d-49ee-9a22-2dff8d9fab46",
            "d57dd38f-498a-4f57-b123-1e585fce74ce",
            "810952f8-ba7a-44f9-bd8d-bb3d2bc221e6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4809,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "0a2d03f1-21ee-4880-a7ad-b1fd2fd3ed2e",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 5062,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:40505/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:40505/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:40505/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:40505/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:40505/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:40505/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:40505/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:40505/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:40505/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:40505/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:40505/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:40505/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:40505/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "9743abad-d745-40eb-b2e6-ef486726bf01",
              "parentUUID": "0a2d03f1-21ee-4880-a7ad-b1fd2fd3ed2e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 5068,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:40505/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:40505/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:40505/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:40505/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:40505/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:40505/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:40505/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:40505/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:40505/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:40505/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:40505/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:40505/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:40505/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "f2957339-b056-4098-b4e2-7016d4ec6f3e",
              "parentUUID": "0a2d03f1-21ee-4880-a7ad-b1fd2fd3ed2e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4919,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:40505/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:40505/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:40505/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:40505/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:40505/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:40505/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:40505/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:40505/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:40505/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:40505/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:40505/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:40505/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:40505/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "e71a7b9b-1473-40c5-8d68-105ce91b24e6",
              "parentUUID": "0a2d03f1-21ee-4880-a7ad-b1fd2fd3ed2e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 5036,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:40505/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:40505/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:40505/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:40505/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:40505/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:40505/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:40505/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:40505/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:40505/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:40505/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:40505/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:40505/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:40505/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "dec17147-58a6-4cba-962e-3cf14458590b",
              "parentUUID": "0a2d03f1-21ee-4880-a7ad-b1fd2fd3ed2e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 4837,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:40505/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:40505/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:40505/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:40505/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:40505/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:40505/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:40505/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:40505/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:40505/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:40505/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:40505/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:40505/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:40505/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "e9ab21ee-cadb-45f6-add8-8e3481be866f",
              "parentUUID": "0a2d03f1-21ee-4880-a7ad-b1fd2fd3ed2e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 4891,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:40505/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:40505/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:40505/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:40505/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:40505/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:40505/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:40505/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:40505/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:40505/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:40505/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:40505/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:40505/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:40505/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "c4cd2777-68cf-490d-9ae1-7f1d4f095728",
              "parentUUID": "0a2d03f1-21ee-4880-a7ad-b1fd2fd3ed2e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 4919,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:40505/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:40505/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:40505/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:40505/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:40505/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:40505/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:40505/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:40505/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:40505/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:40505/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:40505/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:40505/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:40505/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "77e9de86-450d-4413-bef4-c7bb514fc555",
              "parentUUID": "0a2d03f1-21ee-4880-a7ad-b1fd2fd3ed2e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4678,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:40505/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:40505/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:40505/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:40505/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:40505/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:40505/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:40505/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:40505/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:40505/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:40505/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:40505/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:40505/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:40505/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "e0f6e682-287b-4276-99e8-bd19ce94907b",
              "parentUUID": "0a2d03f1-21ee-4880-a7ad-b1fd2fd3ed2e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 5009,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:40505/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:40505/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:40505/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:40505/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:40505/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:40505/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:40505/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:40505/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:40505/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:40505/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:40505/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:40505/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:40505/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "9dc4dd92-0f17-48ea-ad35-b5d2934219d8",
              "parentUUID": "0a2d03f1-21ee-4880-a7ad-b1fd2fd3ed2e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "9743abad-d745-40eb-b2e6-ef486726bf01",
            "f2957339-b056-4098-b4e2-7016d4ec6f3e",
            "e71a7b9b-1473-40c5-8d68-105ce91b24e6",
            "dec17147-58a6-4cba-962e-3cf14458590b",
            "e9ab21ee-cadb-45f6-add8-8e3481be866f",
            "c4cd2777-68cf-490d-9ae1-7f1d4f095728",
            "77e9de86-450d-4413-bef4-c7bb514fc555",
            "e0f6e682-287b-4276-99e8-bd19ce94907b",
            "9dc4dd92-0f17-48ea-ad35-b5d2934219d8"
          ],
          "pending": [],
          "skipped": [],
          "duration": 44419,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "8a1b1413-20db-48e3-8996-42859ee45bab",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 4793,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:40505/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:40505/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:40505/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:40505/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:40505/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:40505/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:40505/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:40505/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:40505/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:40505/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:40505/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:40505/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:40505/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "df6f4dff-1be9-431b-8918-9bbcb4382843",
              "parentUUID": "8a1b1413-20db-48e3-8996-42859ee45bab",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 4909,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:40505/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:40505/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:40505/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:40505/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:40505/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:40505/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:40505/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:40505/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:40505/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:40505/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:40505/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:40505/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:40505/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "aec536a6-eb74-40a2-a693-40e413b501e8",
              "parentUUID": "8a1b1413-20db-48e3-8996-42859ee45bab",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 4880,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:40505/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:40505/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:40505/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:40505/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:40505/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:40505/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:40505/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:40505/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:40505/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:40505/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:40505/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:40505/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:40505/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "780726ba-2c45-412d-b9fb-182208a15718",
              "parentUUID": "8a1b1413-20db-48e3-8996-42859ee45bab",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "df6f4dff-1be9-431b-8918-9bbcb4382843",
            "aec536a6-eb74-40a2-a693-40e413b501e8",
            "780726ba-2c45-412d-b9fb-182208a15718"
          ],
          "pending": [],
          "skipped": [],
          "duration": 14582,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "ae4cda5e-044a-4586-a7cf-7fd1c389affc",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 1803,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {},
              "uuid": "e1d96fc4-4048-4287-a077-e491e98eb7bb",
              "parentUUID": "ae4cda5e-044a-4586-a7cf-7fd1c389affc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 1116,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {},
              "uuid": "4652329d-7945-4a80-a214-555fc6395b65",
              "parentUUID": "ae4cda5e-044a-4586-a7cf-7fd1c389affc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e1d96fc4-4048-4287-a077-e491e98eb7bb",
            "4652329d-7945-4a80-a214-555fc6395b65"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2919,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}