{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 27,
    "pending": 0,
    "failures": 14,
    "start": "2021-06-29T06:16:23.882Z",
    "end": "2021-06-29T06:17:59.733Z",
    "duration": 95851,
    "testsRegistered": 41,
    "passPercent": 65.85365853658537,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "3c2e1e93-5b84-4ccc-af87-ffd9eb384f50",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e68926a7-117c-4f92-b21e-4706ba0ac167",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 676,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "78f9c14b-c301-485f-9c48-a7828e7d19d7",
              "parentUUID": "e68926a7-117c-4f92-b21e-4706ba0ac167",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "78f9c14b-c301-485f-9c48-a7828e7d19d7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 676,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "945b1b41-b659-4b21-a9b6-fd3a76f27e4d",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "timedOut": null,
              "duration": 397,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');",
              "err": {},
              "uuid": "ffda888a-0f34-4377-b246-6f6e45baaaa2",
              "parentUUID": "945b1b41-b659-4b21-a9b6-fd3a76f27e4d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 472,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "7dd516ee-087e-4d8d-be6f-6aa280d7b1c5",
              "parentUUID": "945b1b41-b659-4b21-a9b6-fd3a76f27e4d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 375,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "ed5113f9-dec1-40ff-8cc5-8e1d4cb37e2c",
              "parentUUID": "945b1b41-b659-4b21-a9b6-fd3a76f27e4d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 229,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "c6770cff-cd93-4e9c-a259-433b8c1c64e9",
              "parentUUID": "945b1b41-b659-4b21-a9b6-fd3a76f27e4d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 274,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "97368267-d879-4831-87cc-67fe61e8ea5a",
              "parentUUID": "945b1b41-b659-4b21-a9b6-fd3a76f27e4d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 261,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "570d03eb-d168-4be6-ad68-8b8a6ac4b7e3",
              "parentUUID": "945b1b41-b659-4b21-a9b6-fd3a76f27e4d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 183,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "9b5bde67-c2b7-4b3f-ae32-e0d019083697",
              "parentUUID": "945b1b41-b659-4b21-a9b6-fd3a76f27e4d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ffda888a-0f34-4377-b246-6f6e45baaaa2",
            "7dd516ee-087e-4d8d-be6f-6aa280d7b1c5",
            "ed5113f9-dec1-40ff-8cc5-8e1d4cb37e2c",
            "c6770cff-cd93-4e9c-a259-433b8c1c64e9",
            "97368267-d879-4831-87cc-67fe61e8ea5a",
            "570d03eb-d168-4be6-ad68-8b8a6ac4b7e3",
            "9b5bde67-c2b7-4b3f-ae32-e0d019083697"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2191,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "2b38ed81-d6a2-47cb-bfae-5385efa46dd8",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 352,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "abf95212-5607-4762-b151-131aa308c2ac",
              "parentUUID": "2b38ed81-d6a2-47cb-bfae-5385efa46dd8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 326,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "3aa590d3-26bf-431e-a4ea-4cad83f94f4c",
              "parentUUID": "2b38ed81-d6a2-47cb-bfae-5385efa46dd8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "abf95212-5607-4762-b151-131aa308c2ac",
            "3aa590d3-26bf-431e-a4ea-4cad83f94f4c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 678,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "7a9c473f-9536-40cb-8cba-ec501e420217",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 152,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "df5e6657-9c20-48bd-8ee2-b9252181860c",
              "parentUUID": "7a9c473f-9536-40cb-8cba-ec501e420217",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 322,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "c93a9686-a540-4ce9-a85e-f443b80f75e4",
              "parentUUID": "7a9c473f-9536-40cb-8cba-ec501e420217",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 386,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "8df35b95-715e-464e-b16e-076bfb97764d",
              "parentUUID": "7a9c473f-9536-40cb-8cba-ec501e420217",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 481,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "6ba7b712-8dc2-4c21-beca-d10be90bbc1b",
              "parentUUID": "7a9c473f-9536-40cb-8cba-ec501e420217",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "df5e6657-9c20-48bd-8ee2-b9252181860c",
            "c93a9686-a540-4ce9-a85e-f443b80f75e4",
            "8df35b95-715e-464e-b16e-076bfb97764d",
            "6ba7b712-8dc2-4c21-beca-d10be90bbc1b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1341,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "2e8edeb0-608f-416a-826e-a08298dec8b6",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 671,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "71c4beb5-8ebf-4784-9af3-e317db5f9640",
              "parentUUID": "2e8edeb0-608f-416a-826e-a08298dec8b6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 760,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "57c27c94-0e1e-49bc-9386-b9dae16abf9d",
              "parentUUID": "2e8edeb0-608f-416a-826e-a08298dec8b6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "71c4beb5-8ebf-4784-9af3-e317db5f9640",
            "57c27c94-0e1e-49bc-9386-b9dae16abf9d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1431,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "1e220698-22b3-4de0-b7b1-c1bddae43b16",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 171,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "324a0123-be60-4cbc-beda-152eff37bbb2",
              "parentUUID": "1e220698-22b3-4de0-b7b1-c1bddae43b16",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 192,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "73463fe9-7a8c-4e41-992e-3ec9a6eb576e",
              "parentUUID": "1e220698-22b3-4de0-b7b1-c1bddae43b16",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "324a0123-be60-4cbc-beda-152eff37bbb2",
            "73463fe9-7a8c-4e41-992e-3ec9a6eb576e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 363,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "8ab0c97b-5225-4e3c-ba50-45b5498d0022",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 795,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "4a4d5553-9f84-4c53-a155-e4be16257a91",
              "parentUUID": "8ab0c97b-5225-4e3c-ba50-45b5498d0022",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 9667,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "22c94cb6-a037-49b2-aaa9-6170f78cd487",
              "parentUUID": "8ab0c97b-5225-4e3c-ba50-45b5498d0022",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4a4d5553-9f84-4c53-a155-e4be16257a91",
            "22c94cb6-a037-49b2-aaa9-6170f78cd487"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10462,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "ec59beac-9e78-460b-8a94-322ae2367e0a",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2551,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "8c1820df-f3f6-4127-8a46-1013fd0317c1",
              "parentUUID": "ec59beac-9e78-460b-8a94-322ae2367e0a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 9735,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "6bce7db2-c8bc-48cb-98a6-da4b650476b6",
              "parentUUID": "ec59beac-9e78-460b-8a94-322ae2367e0a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 2617,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "07c1a3b7-5c1e-4e7d-87ed-d9a7fff47fb5",
              "parentUUID": "ec59beac-9e78-460b-8a94-322ae2367e0a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8c1820df-f3f6-4127-8a46-1013fd0317c1",
            "6bce7db2-c8bc-48cb-98a6-da4b650476b6",
            "07c1a3b7-5c1e-4e7d-87ed-d9a7fff47fb5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 14903,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "1ca4d60f-3af3-4f73-bcb6-a35521b25ccf",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 435,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "ebd474c0-cdc9-431e-9141-9973d545fb59",
              "parentUUID": "1ca4d60f-3af3-4f73-bcb6-a35521b25ccf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 182,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "3567ddd5-0ac5-4a93-b983-3cd6a8590b59",
              "parentUUID": "1ca4d60f-3af3-4f73-bcb6-a35521b25ccf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 232,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "7a766375-877b-437e-9f6d-60a65f91450e",
              "parentUUID": "1ca4d60f-3af3-4f73-bcb6-a35521b25ccf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 2968,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "9fe69017-8e79-42d3-a952-1f9ae014c903",
              "parentUUID": "1ca4d60f-3af3-4f73-bcb6-a35521b25ccf",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ebd474c0-cdc9-431e-9141-9973d545fb59",
            "3567ddd5-0ac5-4a93-b983-3cd6a8590b59",
            "7a766375-877b-437e-9f6d-60a65f91450e",
            "9fe69017-8e79-42d3-a952-1f9ae014c903"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3817,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "2149408d-07ff-4b01-9f29-03daccc2f863",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 4658,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:46683/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:46683/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:46683/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:46683/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:46683/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:46683/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:46683/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:46683/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:46683/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:46683/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:46683/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:46683/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:46683/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "a44de1a4-83e6-4255-9085-16ce837eff1d",
              "parentUUID": "2149408d-07ff-4b01-9f29-03daccc2f863",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 4670,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:46683/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:46683/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:46683/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:46683/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:46683/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:46683/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:46683/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:46683/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:46683/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:46683/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:46683/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:46683/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:46683/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "e5ec2c23-615d-40ca-9a63-c9bc5018081a",
              "parentUUID": "2149408d-07ff-4b01-9f29-03daccc2f863",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4607,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:46683/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:46683/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:46683/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:46683/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:46683/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:46683/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:46683/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:46683/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:46683/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:46683/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:46683/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:46683/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:46683/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "28dec029-685a-46e6-91bb-e9147b204d87",
              "parentUUID": "2149408d-07ff-4b01-9f29-03daccc2f863",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 4645,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:46683/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:46683/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:46683/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:46683/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:46683/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:46683/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:46683/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:46683/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:46683/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:46683/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:46683/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:46683/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:46683/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "d59ebb85-4bcd-4b4b-924d-5e961affd8cf",
              "parentUUID": "2149408d-07ff-4b01-9f29-03daccc2f863",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 4724,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:46683/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:46683/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:46683/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:46683/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:46683/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:46683/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:46683/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:46683/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:46683/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:46683/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:46683/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:46683/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:46683/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "6943a489-c475-4a96-b772-d0576ab97071",
              "parentUUID": "2149408d-07ff-4b01-9f29-03daccc2f863",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 4864,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:46683/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:46683/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:46683/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:46683/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:46683/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:46683/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:46683/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:46683/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:46683/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:46683/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:46683/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:46683/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:46683/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "7091d8d5-a334-47fe-9e4c-1ca3c502880d",
              "parentUUID": "2149408d-07ff-4b01-9f29-03daccc2f863",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 4682,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:46683/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:46683/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:46683/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:46683/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:46683/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:46683/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:46683/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:46683/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:46683/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:46683/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:46683/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:46683/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:46683/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "5dc561eb-6293-42a1-9b7c-db9f309e68d1",
              "parentUUID": "2149408d-07ff-4b01-9f29-03daccc2f863",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4678,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:46683/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:46683/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:46683/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:46683/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:46683/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:46683/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:46683/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:46683/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:46683/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:46683/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:46683/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:46683/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:46683/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "d8cf3936-a3e9-4b1b-bbaa-99c9a23123b0",
              "parentUUID": "2149408d-07ff-4b01-9f29-03daccc2f863",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4954,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:46683/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:46683/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:46683/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:46683/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:46683/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:46683/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:46683/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:46683/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:46683/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:46683/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:46683/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:46683/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:46683/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "10b1fbf3-a7b9-4166-9b19-03052770ce6d",
              "parentUUID": "2149408d-07ff-4b01-9f29-03daccc2f863",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "a44de1a4-83e6-4255-9085-16ce837eff1d",
            "e5ec2c23-615d-40ca-9a63-c9bc5018081a",
            "28dec029-685a-46e6-91bb-e9147b204d87",
            "d59ebb85-4bcd-4b4b-924d-5e961affd8cf",
            "6943a489-c475-4a96-b772-d0576ab97071",
            "7091d8d5-a334-47fe-9e4c-1ca3c502880d",
            "5dc561eb-6293-42a1-9b7c-db9f309e68d1",
            "d8cf3936-a3e9-4b1b-bbaa-99c9a23123b0",
            "10b1fbf3-a7b9-4166-9b19-03052770ce6d"
          ],
          "pending": [],
          "skipped": [],
          "duration": 42482,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a45a7416-171b-4ce3-bb8e-76a527763ca3",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 4814,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:46683/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:46683/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:46683/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:46683/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:46683/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:46683/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:46683/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:46683/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:46683/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:46683/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:46683/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:46683/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:46683/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "6822d6f3-833c-4fb3-9d0a-79997a554bc8",
              "parentUUID": "a45a7416-171b-4ce3-bb8e-76a527763ca3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 4701,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:46683/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:46683/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:46683/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:46683/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:46683/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:46683/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:46683/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:46683/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:46683/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:46683/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:46683/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:46683/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:46683/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "dd69f823-3005-44bb-a565-00aedacebc8d",
              "parentUUID": "a45a7416-171b-4ce3-bb8e-76a527763ca3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 4655,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:46683/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:46683/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:46683/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:46683/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:46683/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:46683/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:46683/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:46683/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:46683/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:46683/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:46683/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:46683/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:46683/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "de798090-89e0-49e9-b609-3f3858b95d6f",
              "parentUUID": "a45a7416-171b-4ce3-bb8e-76a527763ca3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "6822d6f3-833c-4fb3-9d0a-79997a554bc8",
            "dd69f823-3005-44bb-a565-00aedacebc8d",
            "de798090-89e0-49e9-b609-3f3858b95d6f"
          ],
          "pending": [],
          "skipped": [],
          "duration": 14170,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d55f8723-9598-4f5e-bd24-0759e413a841",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 700,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:46683/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:46683/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:46683/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:46683/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:46683/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:46683/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:46683/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:46683/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:46683/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:46683/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:46683/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:46683/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:46683/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:46683/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "e2bd0e45-a151-41d7-a84e-a76397ad9c24",
              "parentUUID": "d55f8723-9598-4f5e-bd24-0759e413a841",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 848,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:46683/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:46683/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:46683/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:46683/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:46683/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:46683/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:46683/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:46683/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:46683/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:46683/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:46683/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:46683/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:46683/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:46683/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "7dc848b1-74fd-4123-8a5d-030c5bc5dcad",
              "parentUUID": "d55f8723-9598-4f5e-bd24-0759e413a841",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "e2bd0e45-a151-41d7-a84e-a76397ad9c24",
            "7dc848b1-74fd-4123-8a5d-030c5bc5dcad"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1548,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}