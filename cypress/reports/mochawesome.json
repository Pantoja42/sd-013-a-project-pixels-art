{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 27,
    "pending": 0,
    "failures": 14,
    "start": "2021-06-12T06:08:06.861Z",
    "end": "2021-06-12T06:09:34.531Z",
    "duration": 87670,
    "testsRegistered": 41,
    "passPercent": 65.85365853658537,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "afdcf4f5-84fd-41de-b4d3-a0bd4ab10780",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d8f9a6eb-f736-42a5-93bb-36959718d431",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 270,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "58f34cc1-7822-4d07-92b9-fdca5a65e6ee",
              "parentUUID": "d8f9a6eb-f736-42a5-93bb-36959718d431",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "58f34cc1-7822-4d07-92b9-fdca5a65e6ee"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 270,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "7057b2d1-2ec4-4f6e-9998-13e5c03c17ea",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "timedOut": null,
              "duration": 194,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');",
              "err": {},
              "uuid": "03976049-7a33-4bea-96f4-dc973d663abf",
              "parentUUID": "7057b2d1-2ec4-4f6e-9998-13e5c03c17ea",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 217,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "5decbdf3-191f-47f8-8fae-9367f091705a",
              "parentUUID": "7057b2d1-2ec4-4f6e-9998-13e5c03c17ea",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 236,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "501dd682-b766-4b2b-9c5b-ead6a0d94337",
              "parentUUID": "7057b2d1-2ec4-4f6e-9998-13e5c03c17ea",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 177,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "7971115a-f667-4d20-b2da-fa6244d17e1a",
              "parentUUID": "7057b2d1-2ec4-4f6e-9998-13e5c03c17ea",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 177,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "1f5245ab-3be5-4761-877e-efa4f82b4e46",
              "parentUUID": "7057b2d1-2ec4-4f6e-9998-13e5c03c17ea",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 138,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "481c7717-e461-4e9d-a3a8-9110eed3ca30",
              "parentUUID": "7057b2d1-2ec4-4f6e-9998-13e5c03c17ea",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 95,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "7c3ae18c-f85a-448f-9f5c-567c027790a6",
              "parentUUID": "7057b2d1-2ec4-4f6e-9998-13e5c03c17ea",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "03976049-7a33-4bea-96f4-dc973d663abf",
            "5decbdf3-191f-47f8-8fae-9367f091705a",
            "501dd682-b766-4b2b-9c5b-ead6a0d94337",
            "7971115a-f667-4d20-b2da-fa6244d17e1a",
            "1f5245ab-3be5-4761-877e-efa4f82b4e46",
            "481c7717-e461-4e9d-a3a8-9110eed3ca30",
            "7c3ae18c-f85a-448f-9f5c-567c027790a6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1234,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "9df4ca3e-c303-4f58-8beb-c8da20f30b03",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 176,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "b98ede69-6eac-440f-9ec7-7c022ad7ea6b",
              "parentUUID": "9df4ca3e-c303-4f58-8beb-c8da20f30b03",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 309,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "6c2fd821-6d07-4711-a392-70cf04e3e7ed",
              "parentUUID": "9df4ca3e-c303-4f58-8beb-c8da20f30b03",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b98ede69-6eac-440f-9ec7-7c022ad7ea6b",
            "6c2fd821-6d07-4711-a392-70cf04e3e7ed"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 485,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b41dd5b0-67d5-4616-9348-b6b8f33f73e0",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 94,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "919599d5-cbb6-440e-ba14-d79d470e8908",
              "parentUUID": "b41dd5b0-67d5-4616-9348-b6b8f33f73e0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 219,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "54750b0a-eb9f-4810-bbc2-96146472e8b5",
              "parentUUID": "b41dd5b0-67d5-4616-9348-b6b8f33f73e0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 213,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "30bea268-dfdf-4f26-a885-bba4c25e8378",
              "parentUUID": "b41dd5b0-67d5-4616-9348-b6b8f33f73e0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 133,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "6830222b-ae29-4ec4-be58-0382d97ec9f7",
              "parentUUID": "b41dd5b0-67d5-4616-9348-b6b8f33f73e0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "919599d5-cbb6-440e-ba14-d79d470e8908",
            "54750b0a-eb9f-4810-bbc2-96146472e8b5",
            "30bea268-dfdf-4f26-a885-bba4c25e8378",
            "6830222b-ae29-4ec4-be58-0382d97ec9f7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 659,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "112489c9-800a-46b0-94c0-4c62a6354115",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 402,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "b5287b54-c307-4cd8-af26-920282bad64f",
              "parentUUID": "112489c9-800a-46b0-94c0-4c62a6354115",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 407,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "5e0bfc9d-2a68-46ce-bbac-159c13de6ac0",
              "parentUUID": "112489c9-800a-46b0-94c0-4c62a6354115",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b5287b54-c307-4cd8-af26-920282bad64f",
            "5e0bfc9d-2a68-46ce-bbac-159c13de6ac0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 809,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d1d72365-f988-44d5-8be5-24964f32e051",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 147,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "d833b63d-9400-4ff2-9fa1-8ca006851d34",
              "parentUUID": "d1d72365-f988-44d5-8be5-24964f32e051",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 139,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "fd15346f-0a94-41f1-9734-739bf857cab9",
              "parentUUID": "d1d72365-f988-44d5-8be5-24964f32e051",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d833b63d-9400-4ff2-9fa1-8ca006851d34",
            "fd15346f-0a94-41f1-9734-739bf857cab9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 286,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a2a1f11c-5b37-4e64-851d-a9fe2e718c2c",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 487,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "c657a334-24f0-4e50-a01b-a42de617c8f5",
              "parentUUID": "a2a1f11c-5b37-4e64-851d-a9fe2e718c2c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 9184,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "b1a90bf3-b6d2-414f-a0f7-1faa1934b1ca",
              "parentUUID": "a2a1f11c-5b37-4e64-851d-a9fe2e718c2c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c657a334-24f0-4e50-a01b-a42de617c8f5",
            "b1a90bf3-b6d2-414f-a0f7-1faa1934b1ca"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9671,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "cc950b7d-aa7b-4f93-a879-92ce5c57fcc7",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2376,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "b2f49539-3b0f-491c-b308-c92589b8c34b",
              "parentUUID": "cc950b7d-aa7b-4f93-a879-92ce5c57fcc7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 9077,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "06110051-b068-4343-a639-287e4ba57c26",
              "parentUUID": "cc950b7d-aa7b-4f93-a879-92ce5c57fcc7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 1685,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "6a871dd3-b0f5-4b6d-baf1-c08c7cb7c358",
              "parentUUID": "cc950b7d-aa7b-4f93-a879-92ce5c57fcc7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b2f49539-3b0f-491c-b308-c92589b8c34b",
            "06110051-b068-4343-a639-287e4ba57c26",
            "6a871dd3-b0f5-4b6d-baf1-c08c7cb7c358"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 13138,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "44dbd39f-852e-420c-9884-ab4f8314ba5e",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 241,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "6dd6c924-1a9e-47ed-a751-1cd32664ef1e",
              "parentUUID": "44dbd39f-852e-420c-9884-ab4f8314ba5e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 114,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "7ecd5db2-53d5-42c1-852c-6c0965ef3801",
              "parentUUID": "44dbd39f-852e-420c-9884-ab4f8314ba5e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 85,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "10db77dc-2406-4d47-9fa6-3e4975b43720",
              "parentUUID": "44dbd39f-852e-420c-9884-ab4f8314ba5e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 2721,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "30c98037-4f89-4e48-b763-4ec1a830ef31",
              "parentUUID": "44dbd39f-852e-420c-9884-ab4f8314ba5e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6dd6c924-1a9e-47ed-a751-1cd32664ef1e",
            "7ecd5db2-53d5-42c1-852c-6c0965ef3801",
            "10db77dc-2406-4d47-9fa6-3e4975b43720",
            "30c98037-4f89-4e48-b763-4ec1a830ef31"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3161,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "751e5d38-e3b3-45b8-b7c2-bcda1c85610f",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 4607,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:41249/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:41249/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:41249/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:41249/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:41249/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:41249/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:41249/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:41249/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:41249/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:41249/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:41249/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:41249/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:41249/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "52345e92-17de-451c-b408-4194fea62fe8",
              "parentUUID": "751e5d38-e3b3-45b8-b7c2-bcda1c85610f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 4548,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:41249/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:41249/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:41249/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:41249/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:41249/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:41249/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:41249/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:41249/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:41249/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:41249/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:41249/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:41249/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:41249/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "3de66236-57ec-4378-948b-131ba7ec0db5",
              "parentUUID": "751e5d38-e3b3-45b8-b7c2-bcda1c85610f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4635,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:41249/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:41249/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:41249/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:41249/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:41249/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:41249/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:41249/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:41249/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:41249/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:41249/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:41249/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:41249/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:41249/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "93b83a63-18f8-4e4f-846d-c332f8e924f0",
              "parentUUID": "751e5d38-e3b3-45b8-b7c2-bcda1c85610f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 4578,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:41249/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:41249/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:41249/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:41249/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:41249/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:41249/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:41249/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:41249/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:41249/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:41249/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:41249/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:41249/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:41249/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "d043a274-7216-4a02-b0d0-7fbb6698d729",
              "parentUUID": "751e5d38-e3b3-45b8-b7c2-bcda1c85610f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 4570,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:41249/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:41249/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:41249/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:41249/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:41249/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:41249/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:41249/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:41249/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:41249/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:41249/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:41249/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:41249/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:41249/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "5e200396-41fa-414a-a9e3-07aea6830536",
              "parentUUID": "751e5d38-e3b3-45b8-b7c2-bcda1c85610f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 4573,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:41249/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:41249/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:41249/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:41249/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:41249/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:41249/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:41249/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:41249/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:41249/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:41249/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:41249/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:41249/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:41249/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "a907f6c6-aa7b-4079-9feb-96ceaaadb0df",
              "parentUUID": "751e5d38-e3b3-45b8-b7c2-bcda1c85610f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 4572,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:41249/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:41249/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:41249/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:41249/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:41249/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:41249/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:41249/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:41249/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:41249/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:41249/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:41249/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:41249/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:41249/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "c6cb0587-5dd8-4d67-913b-358e34b4a824",
              "parentUUID": "751e5d38-e3b3-45b8-b7c2-bcda1c85610f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4668,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:41249/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:41249/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:41249/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:41249/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:41249/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:41249/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:41249/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:41249/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:41249/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:41249/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:41249/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:41249/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:41249/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "9e6523f2-2137-4664-afb4-ebb45634d5ab",
              "parentUUID": "751e5d38-e3b3-45b8-b7c2-bcda1c85610f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4682,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:41249/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:41249/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:41249/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:41249/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:41249/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:41249/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:41249/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:41249/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:41249/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:41249/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:41249/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:41249/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:41249/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "b667b607-7498-451d-bbfb-346c5a34c135",
              "parentUUID": "751e5d38-e3b3-45b8-b7c2-bcda1c85610f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "52345e92-17de-451c-b408-4194fea62fe8",
            "3de66236-57ec-4378-948b-131ba7ec0db5",
            "93b83a63-18f8-4e4f-846d-c332f8e924f0",
            "d043a274-7216-4a02-b0d0-7fbb6698d729",
            "5e200396-41fa-414a-a9e3-07aea6830536",
            "a907f6c6-aa7b-4079-9feb-96ceaaadb0df",
            "c6cb0587-5dd8-4d67-913b-358e34b4a824",
            "9e6523f2-2137-4664-afb4-ebb45634d5ab",
            "b667b607-7498-451d-bbfb-346c5a34c135"
          ],
          "pending": [],
          "skipped": [],
          "duration": 41433,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "3e038796-4338-484f-9088-903a969d7b86",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 4644,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:41249/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:41249/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:41249/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:41249/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:41249/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:41249/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:41249/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:41249/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:41249/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:41249/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:41249/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:41249/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:41249/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "089ffd5d-e255-4516-9694-3474c8944c47",
              "parentUUID": "3e038796-4338-484f-9088-903a969d7b86",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 4549,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:41249/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:41249/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:41249/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:41249/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:41249/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:41249/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:41249/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:41249/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:41249/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:41249/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:41249/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:41249/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:41249/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "c43f7ddd-0f8c-466c-9ce5-0ca2b6dd55a3",
              "parentUUID": "3e038796-4338-484f-9088-903a969d7b86",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 4605,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:41249/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:41249/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:41249/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:41249/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:41249/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:41249/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:41249/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:41249/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:41249/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:41249/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:41249/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:41249/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:41249/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "3a7d58b2-af0a-49eb-b2dc-3b8a230bcd6b",
              "parentUUID": "3e038796-4338-484f-9088-903a969d7b86",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "089ffd5d-e255-4516-9694-3474c8944c47",
            "c43f7ddd-0f8c-466c-9ce5-0ca2b6dd55a3",
            "3a7d58b2-af0a-49eb-b2dc-3b8a230bcd6b"
          ],
          "pending": [],
          "skipped": [],
          "duration": 13798,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "93136d89-890f-40cb-9b9d-ad009d6bada9",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 729,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:41249/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:41249/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:41249/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:41249/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:41249/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:41249/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:41249/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:41249/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:41249/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:41249/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:41249/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:41249/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:41249/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:41249/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "2e1f2576-965c-4026-998c-ba93be9a6bd6",
              "parentUUID": "93136d89-890f-40cb-9b9d-ad009d6bada9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 714,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:41249/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:41249/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:41249/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:41249/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:41249/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:41249/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:41249/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:41249/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:41249/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:41249/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:41249/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:41249/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:41249/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:41249/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "49fd891a-b9f4-482a-a9e1-ea0154ab391d",
              "parentUUID": "93136d89-890f-40cb-9b9d-ad009d6bada9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "2e1f2576-965c-4026-998c-ba93be9a6bd6",
            "49fd891a-b9f4-482a-a9e1-ea0154ab391d"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1443,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}