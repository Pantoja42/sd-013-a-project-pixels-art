{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 36,
    "pending": 0,
    "failures": 5,
    "start": "2021-06-02T07:55:34.030Z",
    "end": "2021-06-02T07:56:18.698Z",
    "duration": 44668,
    "testsRegistered": 41,
    "passPercent": 87.8048780487805,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "78441328-0d23-408b-bd62-a55b0d7ef2c2",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "893c057e-d740-44aa-8f72-4618156819a2",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 159,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "578a9b70-2801-4afa-b057-65eb566e9d92",
              "parentUUID": "893c057e-d740-44aa-8f72-4618156819a2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "578a9b70-2801-4afa-b057-65eb566e9d92"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 159,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d6664875-3cea-42f3-806c-92a95197cc99",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "timedOut": null,
              "duration": 94,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');",
              "err": {},
              "uuid": "22c44013-6ebd-4136-b45e-241d02a7adbf",
              "parentUUID": "d6664875-3cea-42f3-806c-92a95197cc99",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 133,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "f7768599-6576-42c4-8dab-c3a0fe9bbe5d",
              "parentUUID": "d6664875-3cea-42f3-806c-92a95197cc99",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 116,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "3ca4c39b-722e-4aae-8f70-c9487514a1ac",
              "parentUUID": "d6664875-3cea-42f3-806c-92a95197cc99",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 144,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "352cebbe-94d8-4ec2-b6a4-4d1b45a21458",
              "parentUUID": "d6664875-3cea-42f3-806c-92a95197cc99",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 129,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "66e6cc99-1148-4a86-8552-7327e40006c4",
              "parentUUID": "d6664875-3cea-42f3-806c-92a95197cc99",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 146,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "05bd741d-573b-4c9e-8188-719748b3bfcf",
              "parentUUID": "d6664875-3cea-42f3-806c-92a95197cc99",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 82,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "7185b461-be42-48ad-8660-ddb8b1d9039b",
              "parentUUID": "d6664875-3cea-42f3-806c-92a95197cc99",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "22c44013-6ebd-4136-b45e-241d02a7adbf",
            "f7768599-6576-42c4-8dab-c3a0fe9bbe5d",
            "3ca4c39b-722e-4aae-8f70-c9487514a1ac",
            "352cebbe-94d8-4ec2-b6a4-4d1b45a21458",
            "66e6cc99-1148-4a86-8552-7327e40006c4",
            "05bd741d-573b-4c9e-8188-719748b3bfcf",
            "7185b461-be42-48ad-8660-ddb8b1d9039b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 844,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "91b405a2-754b-4b16-9b15-6c4b5907bed6",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 103,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "631d1193-c6c9-446d-a178-4abc748e2dda",
              "parentUUID": "91b405a2-754b-4b16-9b15-6c4b5907bed6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 188,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "77719459-6351-4fe1-8b7e-b277285ad49a",
              "parentUUID": "91b405a2-754b-4b16-9b15-6c4b5907bed6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "631d1193-c6c9-446d-a178-4abc748e2dda",
            "77719459-6351-4fe1-8b7e-b277285ad49a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 291,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c7b8171a-1ab7-4585-b412-fcd7e991c1cb",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 81,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "0f9913f5-9472-43e5-af06-2946635b2707",
              "parentUUID": "c7b8171a-1ab7-4585-b412-fcd7e991c1cb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 113,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "06845414-8d1c-44e8-abbc-814b41672b48",
              "parentUUID": "c7b8171a-1ab7-4585-b412-fcd7e991c1cb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 159,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "51c96e34-d593-450a-97b9-e856aba99edb",
              "parentUUID": "c7b8171a-1ab7-4585-b412-fcd7e991c1cb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 89,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "2886dd5c-0c7e-4ac6-81cc-c71c85257cc6",
              "parentUUID": "c7b8171a-1ab7-4585-b412-fcd7e991c1cb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0f9913f5-9472-43e5-af06-2946635b2707",
            "06845414-8d1c-44e8-abbc-814b41672b48",
            "51c96e34-d593-450a-97b9-e856aba99edb",
            "2886dd5c-0c7e-4ac6-81cc-c71c85257cc6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 442,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c4c8eff1-f468-4acf-8612-c3f0f758b8c3",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 237,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "a9b94e58-0fd5-4ad4-b218-279fdc71c371",
              "parentUUID": "c4c8eff1-f468-4acf-8612-c3f0f758b8c3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 226,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "e082ca8d-a0fd-4686-9e1f-d38a703de3f5",
              "parentUUID": "c4c8eff1-f468-4acf-8612-c3f0f758b8c3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a9b94e58-0fd5-4ad4-b218-279fdc71c371",
            "e082ca8d-a0fd-4686-9e1f-d38a703de3f5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 463,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a4535290-78ee-43cf-aa39-cbf491f70576",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 108,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "9ee14474-aba7-477b-b78e-3ad47eacb260",
              "parentUUID": "a4535290-78ee-43cf-aa39-cbf491f70576",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 85,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "f1621b2f-8dc9-47f8-8c13-838445454e49",
              "parentUUID": "a4535290-78ee-43cf-aa39-cbf491f70576",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9ee14474-aba7-477b-b78e-3ad47eacb260",
            "f1621b2f-8dc9-47f8-8c13-838445454e49"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 193,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "040c10b1-f599-40bd-be01-73dd6c2329ea",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 433,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "03ab2189-ce57-40b7-82c1-c3e2fd88ae2e",
              "parentUUID": "040c10b1-f599-40bd-be01-73dd6c2329ea",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 8408,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "efee62dc-a314-4ab9-afab-24ef892b0cc9",
              "parentUUID": "040c10b1-f599-40bd-be01-73dd6c2329ea",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "03ab2189-ce57-40b7-82c1-c3e2fd88ae2e",
            "efee62dc-a314-4ab9-afab-24ef892b0cc9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8841,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "cfce7a46-a9d5-4ecb-8e13-ed4545a129b2",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2122,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "20ba998c-c88d-48f3-8d06-d396dc9b8d63",
              "parentUUID": "cfce7a46-a9d5-4ecb-8e13-ed4545a129b2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 8289,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "b8c451d9-0914-42a7-9071-3cda26c1de59",
              "parentUUID": "cfce7a46-a9d5-4ecb-8e13-ed4545a129b2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 1495,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "d1df0d50-870e-40d2-ada6-0c0c9b314345",
              "parentUUID": "cfce7a46-a9d5-4ecb-8e13-ed4545a129b2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "20ba998c-c88d-48f3-8d06-d396dc9b8d63",
            "b8c451d9-0914-42a7-9071-3cda26c1de59",
            "d1df0d50-870e-40d2-ada6-0c0c9b314345"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 11906,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "082791e0-3443-4541-9e08-a45420720eaf",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 203,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "3904ad21-a215-4a8a-beef-4fbc87b9a14f",
              "parentUUID": "082791e0-3443-4541-9e08-a45420720eaf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 97,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "259b1d95-7a18-4e86-8ebb-331709ffc3d5",
              "parentUUID": "082791e0-3443-4541-9e08-a45420720eaf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 68,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "7c4ce081-92be-4465-9be6-acd4e03dee8f",
              "parentUUID": "082791e0-3443-4541-9e08-a45420720eaf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 2267,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "457e4fb2-0fd4-49f9-be23-8936b7b0e44e",
              "parentUUID": "082791e0-3443-4541-9e08-a45420720eaf",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3904ad21-a215-4a8a-beef-4fbc87b9a14f",
            "259b1d95-7a18-4e86-8ebb-331709ffc3d5",
            "7c4ce081-92be-4465-9be6-acd4e03dee8f",
            "457e4fb2-0fd4-49f9-be23-8936b7b0e44e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2635,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "5736e7b2-8489-4ce7-aaad-1da1dfdc5e05",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 142,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {},
              "uuid": "f9b194c0-7281-43e0-997f-86499bbc5c45",
              "parentUUID": "5736e7b2-8489-4ce7-aaad-1da1dfdc5e05",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 75,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {},
              "uuid": "adec55c0-0083-4e9f-8d63-038c8174903f",
              "parentUUID": "5736e7b2-8489-4ce7-aaad-1da1dfdc5e05",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4273,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:39221/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:39221/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:39221/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:39221/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:39221/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:39221/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39221/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:39221/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:39221/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:39221/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:39221/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39221/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:39221/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "463e5226-0524-4ca4-a56e-c6c240fa2c64",
              "parentUUID": "5736e7b2-8489-4ce7-aaad-1da1dfdc5e05",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 149,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {},
              "uuid": "d2d979ec-9c4f-4c00-a4c5-023589ddb7bb",
              "parentUUID": "5736e7b2-8489-4ce7-aaad-1da1dfdc5e05",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 84,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "628a54ac-ee7f-4cff-bfd6-78bef831de93",
              "parentUUID": "5736e7b2-8489-4ce7-aaad-1da1dfdc5e05",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 66,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {},
              "uuid": "f6161be2-1ef2-4b76-bad3-f49220e1a43c",
              "parentUUID": "5736e7b2-8489-4ce7-aaad-1da1dfdc5e05",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 158,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {},
              "uuid": "88cc920e-e4ac-4b4e-b21b-73d6cfe9582c",
              "parentUUID": "5736e7b2-8489-4ce7-aaad-1da1dfdc5e05",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 517,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {},
              "uuid": "02ab668a-e8dc-47e9-8eb7-be6dfbdfaa8b",
              "parentUUID": "5736e7b2-8489-4ce7-aaad-1da1dfdc5e05",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 458,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "8f0ae7a7-c1a3-4e2f-afe9-0bb683e79ae8",
              "parentUUID": "5736e7b2-8489-4ce7-aaad-1da1dfdc5e05",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f9b194c0-7281-43e0-997f-86499bbc5c45",
            "adec55c0-0083-4e9f-8d63-038c8174903f",
            "d2d979ec-9c4f-4c00-a4c5-023589ddb7bb",
            "628a54ac-ee7f-4cff-bfd6-78bef831de93",
            "f6161be2-1ef2-4b76-bad3-f49220e1a43c",
            "88cc920e-e4ac-4b4e-b21b-73d6cfe9582c",
            "02ab668a-e8dc-47e9-8eb7-be6dfbdfaa8b",
            "8f0ae7a7-c1a3-4e2f-afe9-0bb683e79ae8"
          ],
          "failures": [
            "463e5226-0524-4ca4-a56e-c6c240fa2c64"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5922,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d144db94-3fa9-4c80-bdb0-aaced312e91e",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 2169,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {},
              "uuid": "904688f4-6c69-4a3f-a2f2-bd4a5ea3ed6e",
              "parentUUID": "d144db94-3fa9-4c80-bdb0-aaced312e91e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 4626,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '.pixel', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '.pixel', but never found it.\n    at cypressErr (http://localhost:39221/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:39221/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:39221/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:39221/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:39221/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:39221/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39221/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:39221/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:39221/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:39221/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:39221/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39221/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:39221/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "fd997621-ca08-424e-8afb-1034ba37c8b2",
              "parentUUID": "d144db94-3fa9-4c80-bdb0-aaced312e91e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 4553,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '.pixel', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '.pixel', but never found it.\n    at cypressErr (http://localhost:39221/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:39221/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:39221/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:39221/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:39221/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:39221/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39221/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:39221/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:39221/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:39221/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:39221/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39221/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:39221/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "60ca31df-f315-455e-ac29-695b8959ccf7",
              "parentUUID": "d144db94-3fa9-4c80-bdb0-aaced312e91e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "904688f4-6c69-4a3f-a2f2-bd4a5ea3ed6e"
          ],
          "failures": [
            "fd997621-ca08-424e-8afb-1034ba37c8b2",
            "60ca31df-f315-455e-ac29-695b8959ccf7"
          ],
          "pending": [],
          "skipped": [],
          "duration": 11348,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f2cdc452-5ef6-483d-ab9f-3f2b2766afef",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 350,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:39221/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:39221/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:39221/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:39221/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:39221/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:39221/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:39221/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:39221/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39221/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:39221/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:39221/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:39221/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39221/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:39221/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "4b5dcd35-3829-4def-b381-88ec57648283",
              "parentUUID": "f2cdc452-5ef6-483d-ab9f-3f2b2766afef",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 309,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:39221/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:39221/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:39221/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:39221/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:39221/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:39221/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:39221/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:39221/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39221/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:39221/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:39221/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:39221/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39221/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:39221/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "19b77bf9-207c-4aeb-ae5f-0bee2cfaba6e",
              "parentUUID": "f2cdc452-5ef6-483d-ab9f-3f2b2766afef",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "4b5dcd35-3829-4def-b381-88ec57648283",
            "19b77bf9-207c-4aeb-ae5f-0bee2cfaba6e"
          ],
          "pending": [],
          "skipped": [],
          "duration": 659,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}