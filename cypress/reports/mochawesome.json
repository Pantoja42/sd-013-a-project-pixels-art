{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 27,
    "pending": 0,
    "failures": 14,
    "start": "2021-06-03T23:09:26.162Z",
    "end": "2021-06-03T23:11:33.302Z",
    "duration": 127140,
    "testsRegistered": 41,
    "passPercent": 65.85365853658537,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "0264f08d-c5da-4a9d-8261-0b0128711038",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "96606f15-d873-4e31-b83f-823cd5b86f46",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 1254,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "6058793d-b820-492d-9a9b-223129c64d88",
              "parentUUID": "96606f15-d873-4e31-b83f-823cd5b86f46",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6058793d-b820-492d-9a9b-223129c64d88"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1254,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b411958f-88be-4ecc-b667-c09dc0672ec1",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "timedOut": null,
              "duration": 678,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');",
              "err": {},
              "uuid": "6b99e725-a06c-4deb-bb68-dde116bf0664",
              "parentUUID": "b411958f-88be-4ecc-b667-c09dc0672ec1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 888,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "ecd32222-8b16-4877-bf55-c1cfb1d7b268",
              "parentUUID": "b411958f-88be-4ecc-b667-c09dc0672ec1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 876,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "36553def-a04d-4994-a08e-3fae725834e5",
              "parentUUID": "b411958f-88be-4ecc-b667-c09dc0672ec1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 518,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "79545cd1-57f8-4de3-95ff-1845220dc695",
              "parentUUID": "b411958f-88be-4ecc-b667-c09dc0672ec1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 608,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "af464d4e-7bad-44b0-86b6-d24922e5cbfc",
              "parentUUID": "b411958f-88be-4ecc-b667-c09dc0672ec1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 589,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "59e00f40-4c17-41a6-add3-584eb6e56b1f",
              "parentUUID": "b411958f-88be-4ecc-b667-c09dc0672ec1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 520,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "ec1c423b-8f96-4830-a9fc-4a202761e34a",
              "parentUUID": "b411958f-88be-4ecc-b667-c09dc0672ec1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6b99e725-a06c-4deb-bb68-dde116bf0664",
            "ecd32222-8b16-4877-bf55-c1cfb1d7b268",
            "36553def-a04d-4994-a08e-3fae725834e5",
            "79545cd1-57f8-4de3-95ff-1845220dc695",
            "af464d4e-7bad-44b0-86b6-d24922e5cbfc",
            "59e00f40-4c17-41a6-add3-584eb6e56b1f",
            "ec1c423b-8f96-4830-a9fc-4a202761e34a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4677,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "32924802-c3b1-4682-b2f8-345646e9dd22",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 445,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "db6303b7-95c0-4278-9463-0d99d67136ed",
              "parentUUID": "32924802-c3b1-4682-b2f8-345646e9dd22",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 965,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "c69be011-a78e-4e4e-81ea-d9fdd3458da1",
              "parentUUID": "32924802-c3b1-4682-b2f8-345646e9dd22",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "db6303b7-95c0-4278-9463-0d99d67136ed",
            "c69be011-a78e-4e4e-81ea-d9fdd3458da1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1410,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "49f0d082-4118-42de-8da9-d75231d1e18f",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 493,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "1eb9a643-c2b2-43ee-842a-6043460b45f0",
              "parentUUID": "49f0d082-4118-42de-8da9-d75231d1e18f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 635,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "46eaaf47-fc12-4bd2-be4b-1b55b23631d6",
              "parentUUID": "49f0d082-4118-42de-8da9-d75231d1e18f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 960,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "a14b1f2d-7cb8-4c69-95e6-18fdfacc3b85",
              "parentUUID": "49f0d082-4118-42de-8da9-d75231d1e18f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 503,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "8f7c9a4c-54d5-4018-bcec-f90bd0c1b447",
              "parentUUID": "49f0d082-4118-42de-8da9-d75231d1e18f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1eb9a643-c2b2-43ee-842a-6043460b45f0",
            "46eaaf47-fc12-4bd2-be4b-1b55b23631d6",
            "a14b1f2d-7cb8-4c69-95e6-18fdfacc3b85",
            "8f7c9a4c-54d5-4018-bcec-f90bd0c1b447"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2591,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b24e1023-0c59-400c-af1a-59e20f34db41",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 1254,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "9cb6dc35-f00b-4495-b78b-620dbea8b88c",
              "parentUUID": "b24e1023-0c59-400c-af1a-59e20f34db41",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 1328,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "3b8dcf21-5c39-42ff-82b9-eedc14bb6fb1",
              "parentUUID": "b24e1023-0c59-400c-af1a-59e20f34db41",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9cb6dc35-f00b-4495-b78b-620dbea8b88c",
            "3b8dcf21-5c39-42ff-82b9-eedc14bb6fb1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2582,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "0ccb2557-c78d-4f20-8679-c53216e5e251",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 805,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "6c5fc4c8-7af6-4151-98ce-11d2dc41907e",
              "parentUUID": "0ccb2557-c78d-4f20-8679-c53216e5e251",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 457,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "6e2616a7-3bc2-419c-ac25-3fadfd13b1c9",
              "parentUUID": "0ccb2557-c78d-4f20-8679-c53216e5e251",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6c5fc4c8-7af6-4151-98ce-11d2dc41907e",
            "6e2616a7-3bc2-419c-ac25-3fadfd13b1c9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1262,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e1714499-393a-4c24-bac6-5be1680ec417",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 955,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "fc937221-f83d-4ede-b4af-9a6b816884ba",
              "parentUUID": "e1714499-393a-4c24-bac6-5be1680ec417",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 12657,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "dde725e3-f9d8-4a14-a38f-8a267f115bb9",
              "parentUUID": "e1714499-393a-4c24-bac6-5be1680ec417",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fc937221-f83d-4ede-b4af-9a6b816884ba",
            "dde725e3-f9d8-4a14-a38f-8a267f115bb9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 13612,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "18d492bb-db4d-404a-94e9-2e2952214665",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 3575,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "34b68d44-3015-4ec5-bee4-6ff6032af0fe",
              "parentUUID": "18d492bb-db4d-404a-94e9-2e2952214665",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 12293,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "1d67fc86-c4c9-43b7-ac7e-f1703d1c063b",
              "parentUUID": "18d492bb-db4d-404a-94e9-2e2952214665",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 6138,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "92d9db79-7925-4396-8b21-0bd1d7d37b0e",
              "parentUUID": "18d492bb-db4d-404a-94e9-2e2952214665",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "34b68d44-3015-4ec5-bee4-6ff6032af0fe",
            "1d67fc86-c4c9-43b7-ac7e-f1703d1c063b",
            "92d9db79-7925-4396-8b21-0bd1d7d37b0e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 22006,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "792aba73-e0f9-4848-bfb7-2ef34dc9eab3",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 760,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "b4dbf0ba-f845-4279-b20a-d16438670822",
              "parentUUID": "792aba73-e0f9-4848-bfb7-2ef34dc9eab3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 486,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "3bf4ef07-9195-448e-a4e8-c6b32cbec509",
              "parentUUID": "792aba73-e0f9-4848-bfb7-2ef34dc9eab3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 421,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "31fe3889-ff2f-4452-a49e-60fbfd6f7b9e",
              "parentUUID": "792aba73-e0f9-4848-bfb7-2ef34dc9eab3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 3933,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "e468f546-df8d-48d0-8651-478c62fee52a",
              "parentUUID": "792aba73-e0f9-4848-bfb7-2ef34dc9eab3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b4dbf0ba-f845-4279-b20a-d16438670822",
            "3bf4ef07-9195-448e-a4e8-c6b32cbec509",
            "31fe3889-ff2f-4452-a49e-60fbfd6f7b9e",
            "e468f546-df8d-48d0-8651-478c62fee52a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5600,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "1ef8d19f-8c69-4093-9723-e61eef91115b",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 5411,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:43059/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:43059/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:43059/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:43059/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:43059/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:43059/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:43059/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:43059/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:43059/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:43059/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:43059/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:43059/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:43059/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "25937de1-1021-459d-a9e3-b53103f1f4f7",
              "parentUUID": "1ef8d19f-8c69-4093-9723-e61eef91115b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 5361,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:43059/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:43059/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:43059/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:43059/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:43059/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:43059/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:43059/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:43059/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:43059/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:43059/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:43059/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:43059/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:43059/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "7518a237-f575-4916-abf8-17be37f9c3e4",
              "parentUUID": "1ef8d19f-8c69-4093-9723-e61eef91115b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 5357,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:43059/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:43059/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:43059/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:43059/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:43059/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:43059/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:43059/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:43059/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:43059/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:43059/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:43059/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:43059/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:43059/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "b599a78a-0051-4506-bc6d-909ce2f9e118",
              "parentUUID": "1ef8d19f-8c69-4093-9723-e61eef91115b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 5713,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:43059/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:43059/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:43059/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:43059/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:43059/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:43059/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:43059/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:43059/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:43059/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:43059/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:43059/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:43059/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:43059/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "6ea61b10-1095-444c-8b47-edd84775ff63",
              "parentUUID": "1ef8d19f-8c69-4093-9723-e61eef91115b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 5148,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:43059/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:43059/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:43059/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:43059/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:43059/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:43059/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:43059/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:43059/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:43059/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:43059/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:43059/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:43059/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:43059/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "74091279-a21b-4dee-bc02-70d9419b4c2f",
              "parentUUID": "1ef8d19f-8c69-4093-9723-e61eef91115b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 5368,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:43059/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:43059/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:43059/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:43059/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:43059/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:43059/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:43059/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:43059/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:43059/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:43059/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:43059/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:43059/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:43059/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "e56352b8-9ce0-4ce3-a9b1-90744908eb23",
              "parentUUID": "1ef8d19f-8c69-4093-9723-e61eef91115b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 5127,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:43059/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:43059/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:43059/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:43059/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:43059/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:43059/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:43059/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:43059/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:43059/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:43059/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:43059/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:43059/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:43059/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "9ecc0873-d5d1-4145-bdca-3d479af28396",
              "parentUUID": "1ef8d19f-8c69-4093-9723-e61eef91115b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 5224,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:43059/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:43059/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:43059/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:43059/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:43059/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:43059/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:43059/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:43059/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:43059/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:43059/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:43059/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:43059/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:43059/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "245c52da-87fa-4e80-aa75-5c90a7a56240",
              "parentUUID": "1ef8d19f-8c69-4093-9723-e61eef91115b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 5560,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:43059/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:43059/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:43059/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:43059/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:43059/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:43059/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:43059/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:43059/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:43059/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:43059/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:43059/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:43059/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:43059/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "e9273e17-863b-4354-8f4a-170c71172258",
              "parentUUID": "1ef8d19f-8c69-4093-9723-e61eef91115b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "25937de1-1021-459d-a9e3-b53103f1f4f7",
            "7518a237-f575-4916-abf8-17be37f9c3e4",
            "b599a78a-0051-4506-bc6d-909ce2f9e118",
            "6ea61b10-1095-444c-8b47-edd84775ff63",
            "74091279-a21b-4dee-bc02-70d9419b4c2f",
            "e56352b8-9ce0-4ce3-a9b1-90744908eb23",
            "9ecc0873-d5d1-4145-bdca-3d479af28396",
            "245c52da-87fa-4e80-aa75-5c90a7a56240",
            "e9273e17-863b-4354-8f4a-170c71172258"
          ],
          "pending": [],
          "skipped": [],
          "duration": 48269,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f43df029-2f55-431b-bf39-665c84b8aac9",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 5683,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:43059/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:43059/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:43059/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:43059/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:43059/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:43059/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:43059/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:43059/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:43059/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:43059/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:43059/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:43059/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:43059/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "99a213de-583e-4833-a67c-a946e329ee96",
              "parentUUID": "f43df029-2f55-431b-bf39-665c84b8aac9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 5412,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:43059/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:43059/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:43059/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:43059/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:43059/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:43059/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:43059/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:43059/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:43059/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:43059/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:43059/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:43059/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:43059/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "57691db5-91c0-4cc8-9ec4-e733308050f2",
              "parentUUID": "f43df029-2f55-431b-bf39-665c84b8aac9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 5668,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:43059/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:43059/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:43059/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:43059/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:43059/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:43059/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:43059/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:43059/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:43059/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:43059/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:43059/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:43059/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:43059/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "5f450c0c-3830-4cbc-b7f9-7e610005dd52",
              "parentUUID": "f43df029-2f55-431b-bf39-665c84b8aac9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "99a213de-583e-4833-a67c-a946e329ee96",
            "57691db5-91c0-4cc8-9ec4-e733308050f2",
            "5f450c0c-3830-4cbc-b7f9-7e610005dd52"
          ],
          "pending": [],
          "skipped": [],
          "duration": 16763,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "adf6c30c-ca98-4f3e-b222-07065110574c",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 1656,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:43059/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:43059/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:43059/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:43059/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:43059/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:43059/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:43059/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:43059/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:43059/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:43059/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:43059/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:43059/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:43059/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:43059/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "de8b070f-8bae-475a-a01a-d149fa21f62b",
              "parentUUID": "adf6c30c-ca98-4f3e-b222-07065110574c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 1564,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:43059/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:43059/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:43059/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:43059/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:43059/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:43059/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:43059/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:43059/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:43059/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:43059/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:43059/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:43059/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:43059/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:43059/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "07bd9bb1-de5c-4658-a022-93437af86469",
              "parentUUID": "adf6c30c-ca98-4f3e-b222-07065110574c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "de8b070f-8bae-475a-a01a-d149fa21f62b",
            "07bd9bb1-de5c-4658-a022-93437af86469"
          ],
          "pending": [],
          "skipped": [],
          "duration": 3220,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}